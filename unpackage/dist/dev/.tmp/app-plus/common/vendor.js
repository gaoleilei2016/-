(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!***********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-app-plus/dist/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 3));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}function _iterableToArrayLimit(arr, i) {var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i[\"return\"] != null) _i[\"return\"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter) {if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;}}\n\nvar _toString = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nfunction isStr(str) {\n  return typeof str === 'string';\n}\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\nfunction noop() {}\n\n/**\r\n                    * Create a cached version of a pure function.\r\n                    */\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n\n/**\r\n   * Camelize a hyphen-delimited string.\r\n   */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});\n});\n\nvar HOOKS = [\n'invoke',\n'success',\n'fail',\n'complete',\n'returnValue'];\n\n\nvar globalInterceptors = {};\nvar scopedInterceptors = {};\n\nfunction mergeHook(parentVal, childVal) {\n  var res = childVal ?\n  parentVal ?\n  parentVal.concat(childVal) :\n  Array.isArray(childVal) ?\n  childVal : [childVal] :\n  parentVal;\n  return res ?\n  dedupeHooks(res) :\n  res;\n}\n\nfunction dedupeHooks(hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res;\n}\n\nfunction removeHook(hooks, hook) {\n  var index = hooks.indexOf(hook);\n  if (index !== -1) {\n    hooks.splice(index, 1);\n  }\n}\n\nfunction mergeInterceptorHook(interceptor, option) {\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction removeInterceptorHook(interceptor, option) {\n  if (!interceptor || !option) {\n    return;\n  }\n  Object.keys(option).forEach(function (hook) {\n    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {\n      removeHook(interceptor[hook], option[hook]);\n    }\n  });\n}\n\nfunction addInterceptor(method, option) {\n  if (typeof method === 'string' && isPlainObject(option)) {\n    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);\n  } else if (isPlainObject(method)) {\n    mergeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction removeInterceptor(method, option) {\n  if (typeof method === 'string') {\n    if (isPlainObject(option)) {\n      removeInterceptorHook(scopedInterceptors[method], option);\n    } else {\n      delete scopedInterceptors[method];\n    }\n  } else if (isPlainObject(method)) {\n    removeInterceptorHook(globalInterceptors, method);\n  }\n}\n\nfunction wrapperHook(hook) {\n  return function (data) {\n    return hook(data) || data;\n  };\n}\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\nfunction queue(hooks, data) {\n  var promise = false;\n  for (var i = 0; i < hooks.length; i++) {\n    var hook = hooks[i];\n    if (promise) {\n      promise = Promise.then(wrapperHook(hook));\n    } else {\n      var res = hook(data);\n      if (isPromise(res)) {\n        promise = Promise.resolve(res);\n      }\n      if (res === false) {\n        return {\n          then: function then() {} };\n\n      }\n    }\n  }\n  return promise || {\n    then: function then(callback) {\n      return callback(data);\n    } };\n\n}\n\nfunction wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  ['success', 'fail', 'complete'].forEach(function (name) {\n    if (Array.isArray(interceptor[name])) {\n      var oldCallback = options[name];\n      options[name] = function callbackInterceptor(res) {\n        queue(interceptor[name], res).then(function (res) {\n          /* eslint-disable no-mixed-operators */\n          return isFn(oldCallback) && oldCallback(res) || res;\n        });\n      };\n    }\n  });\n  return options;\n}\n\nfunction wrapperReturnValue(method, returnValue) {\n  var returnValueHooks = [];\n  if (Array.isArray(globalInterceptors.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));\n  }\n  var interceptor = scopedInterceptors[method];\n  if (interceptor && Array.isArray(interceptor.returnValue)) {\n    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));\n  }\n  returnValueHooks.forEach(function (hook) {\n    returnValue = hook(returnValue) || returnValue;\n  });\n  return returnValue;\n}\n\nfunction getApiInterceptorHooks(method) {\n  var interceptor = Object.create(null);\n  Object.keys(globalInterceptors).forEach(function (hook) {\n    if (hook !== 'returnValue') {\n      interceptor[hook] = globalInterceptors[hook].slice();\n    }\n  });\n  var scopedInterceptor = scopedInterceptors[method];\n  if (scopedInterceptor) {\n    Object.keys(scopedInterceptor).forEach(function (hook) {\n      if (hook !== 'returnValue') {\n        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);\n      }\n    });\n  }\n  return interceptor;\n}\n\nfunction invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}\n  var interceptor = getApiInterceptorHooks(method);\n  if (interceptor && Object.keys(interceptor).length) {\n    if (Array.isArray(interceptor.invoke)) {\n      var res = queue(interceptor.invoke, options);\n      return res.then(function (options) {\n        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n      });\n    } else {\n      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));\n    }\n  }\n  return api.apply(void 0, [options].concat(params));\n}\n\nvar promiseInterceptor = {\n  returnValue: function returnValue(res) {\n    if (!isPromise(res)) {\n      return res;\n    }\n    return res.then(function (res) {\n      return res[1];\n    }).catch(function (res) {\n      return res[0];\n    });\n  } };\n\n\nvar SYNC_API_RE =\n/^\\$|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;\n\nvar CONTEXT_API_RE = /^create|Manager$/;\n\nvar CALLBACK_API_RE = /^on/;\n\nfunction isContextApi(name) {\n  return CONTEXT_API_RE.test(name);\n}\nfunction isSyncApi(name) {\n  return SYNC_API_RE.test(name);\n}\n\nfunction isCallbackApi(name) {\n  return CALLBACK_API_RE.test(name);\n}\n\nfunction handlePromise(promise) {\n  return promise.then(function (data) {\n    return [null, data];\n  }).\n  catch(function (err) {return [err];});\n}\n\nfunction shouldPromise(name) {\n  if (\n  isContextApi(name) ||\n  isSyncApi(name) ||\n  isCallbackApi(name))\n  {\n    return false;\n  }\n  return true;\n}\n\nfunction promisify(name, api) {\n  if (!shouldPromise(name)) {\n    return api;\n  }\n  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}\n    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {\n      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));\n    }\n    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {\n      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {\n        success: resolve,\n        fail: reject })].concat(\n      params));\n      /* eslint-disable no-extend-native */\n      if (!Promise.prototype.finally) {\n        Promise.prototype.finally = function (callback) {\n          var promise = this.constructor;\n          return this.then(\n          function (value) {return promise.resolve(callback()).then(function () {return value;});},\n          function (reason) {return promise.resolve(callback()).then(function () {\n              throw reason;\n            });});\n\n        };\n      }\n    })));\n  };\n}\n\nvar EPS = 1e-4;\nvar BASE_DEVICE_WIDTH = 750;\nvar isIOS = false;\nvar deviceWidth = 0;\nvar deviceDPR = 0;\n\nfunction checkDeviceWidth() {var _wx$getSystemInfoSync =\n\n\n\n\n  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni\n\n  deviceWidth = windowWidth;\n  deviceDPR = pixelRatio;\n  isIOS = platform === 'ios';\n}\n\nfunction upx2px(number, newDeviceWidth) {\n  if (deviceWidth === 0) {\n    checkDeviceWidth();\n  }\n\n  number = Number(number);\n  if (number === 0) {\n    return 0;\n  }\n  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);\n  if (result < 0) {\n    result = -result;\n  }\n  result = Math.floor(result + EPS);\n  if (result === 0) {\n    if (deviceDPR === 1 || !isIOS) {\n      return 1;\n    } else {\n      return 0.5;\n    }\n  }\n  return number < 0 ? -result : result;\n}\n\nvar interceptors = {\n  promiseInterceptor: promiseInterceptor };\n\n\n\n\nvar baseApi = /*#__PURE__*/Object.freeze({\n  upx2px: upx2px,\n  interceptors: interceptors,\n  addInterceptor: addInterceptor,\n  removeInterceptor: removeInterceptor });\n\n\nvar protocols = {};\nvar todos = [];\nvar canIUses = [];\n\nvar CALLBACKS = ['success', 'fail', 'cancel', 'complete'];\n\nfunction processCallback(methodName, method, returnValue) {\n  return function (res) {\n    return method(processReturnValue(methodName, res, returnValue));\n  };\n}\n\nfunction processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析\n    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值\n    if (isFn(argsOption)) {\n      argsOption = argsOption(fromArgs, toArgs) || {};\n    }\n    for (var key in fromArgs) {\n      if (hasOwn(argsOption, key)) {\n        var keyOption = argsOption[key];\n        if (isFn(keyOption)) {\n          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);\n        }\n        if (!keyOption) {// 不支持的参数\n          console.warn(\"app-plus \".concat(methodName, \"\\u6682\\u4E0D\\u652F\\u6301\").concat(key));\n        } else if (isStr(keyOption)) {// 重写参数 key\n          toArgs[keyOption] = fromArgs[key];\n        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value\n          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;\n        }\n      } else if (CALLBACKS.indexOf(key) !== -1) {\n        toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);\n      } else {\n        if (!keepFromArgs) {\n          toArgs[key] = fromArgs[key];\n        }\n      }\n    }\n    return toArgs;\n  } else if (isFn(fromArgs)) {\n    fromArgs = processCallback(methodName, fromArgs, returnValue);\n  }\n  return fromArgs;\n}\n\nfunction processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (isFn(protocols.returnValue)) {// 处理通用 returnValue\n    res = protocols.returnValue(methodName, res);\n  }\n  return processArgs(methodName, res, returnValue, {}, keepReturnValue);\n}\n\nfunction wrapper(methodName, method) {\n  if (hasOwn(protocols, methodName)) {\n    var protocol = protocols[methodName];\n    if (!protocol) {// 暂不支持的 api\n      return function () {\n        console.error(\"app-plus \\u6682\\u4E0D\\u652F\\u6301\".concat(methodName));\n      };\n    }\n    return function (arg1, arg2) {// 目前 api 最多两个参数\n      var options = protocol;\n      if (isFn(protocol)) {\n        options = protocol(arg1);\n      }\n\n      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);\n\n      var args = [arg1];\n      if (typeof arg2 !== 'undefined') {\n        args.push(arg2);\n      }\n      var returnValue = wx[options.name || methodName].apply(wx, args);\n      if (isSyncApi(methodName)) {// 同步 api\n        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));\n      }\n      return returnValue;\n    };\n  }\n  return method;\n}\n\nvar todoApis = Object.create(null);\n\nvar TODOS = [\n'onTabBarMidButtonTap',\n'subscribePush',\n'unsubscribePush',\n'onPush',\n'offPush',\n'share'];\n\n\nfunction createTodoApi(name) {\n  return function todoApi(_ref)\n\n\n  {var fail = _ref.fail,complete = _ref.complete;\n    var res = {\n      errMsg: \"\".concat(name, \":fail:\\u6682\\u4E0D\\u652F\\u6301 \").concat(name, \" \\u65B9\\u6CD5\") };\n\n    isFn(fail) && fail(res);\n    isFn(complete) && complete(res);\n  };\n}\n\nTODOS.forEach(function (name) {\n  todoApis[name] = createTodoApi(name);\n});\n\nvar getEmitter = function () {\n  if (typeof getUniEmitter === 'function') {\n    /* eslint-disable no-undef */\n    return getUniEmitter;\n  }\n  var Emitter;\n  return function getUniEmitter() {\n    if (!Emitter) {\n      Emitter = new _vue.default();\n    }\n    return Emitter;\n  };\n}();\n\nfunction apply(ctx, method, args) {\n  return ctx[method].apply(ctx, args);\n}\n\nfunction $on() {\n  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));\n}\nfunction $off() {\n  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));\n}\nfunction $once() {\n  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));\n}\nfunction $emit() {\n  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));\n}\n\nvar eventApi = /*#__PURE__*/Object.freeze({\n  $on: $on,\n  $off: $off,\n  $once: $once,\n  $emit: $emit });\n\n\nfunction requireNativePlugin(pluginName) {\n  /* eslint-disable no-undef */\n  if (typeof weex !== 'undefined') {\n    return weex.requireModule(pluginName);\n  }\n  /* eslint-disable no-undef */\n  return __requireNativePlugin__(pluginName);\n}\n\nfunction wrapper$1(webview) {\n  webview.$processed = true;\n\n  webview.postMessage = function (data) {\n    plus.webview.postMessageToUniNView({\n      type: 'UniAppSubNVue',\n      data: data },\n    webview.id);\n  };\n  var callbacks = [];\n  webview.onMessage = function (callback) {\n    callbacks.push(callback);\n  };\n  webview.$consumeMessage = function (e) {\n    callbacks.forEach(function (callback) {return callback(e);});\n  };\n\n  if (!webview.__uniapp_mask_id) {\n    return;\n  }\n  var maskColor = webview.__uniapp_mask;\n  var maskWebview = webview.__uniapp_mask_id === '0' ? {\n    setStyle: function setStyle(_ref2)\n\n    {var mask = _ref2.mask;\n      requireNativePlugin('uni-tabview').setMask({\n        color: mask });\n\n    } } :\n  plus.webview.getWebviewById(webview.__uniapp_mask_id);\n  var oldShow = webview.show;\n  var oldHide = webview.hide;\n  var oldClose = webview.close;\n\n  var showMask = function showMask() {\n    maskWebview.setStyle({\n      mask: maskColor });\n\n  };\n  var closeMask = function closeMask() {\n    maskWebview.setStyle({\n      mask: 'none' });\n\n  };\n  webview.show = function () {\n    showMask();for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {args[_key3] = arguments[_key3];}\n    return oldShow.apply(webview, args);\n  };\n  webview.hide = function () {\n    closeMask();for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}\n    return oldHide.apply(webview, args);\n  };\n  webview.close = function () {\n    closeMask();\n    callbacks = [];for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}\n    return oldClose.apply(webview, args);\n  };\n}\n\nfunction getSubNVueById(id) {\n  var webview = plus.webview.getWebviewById(id);\n  if (webview && !webview.$processed) {\n    wrapper$1(webview);\n  }\n  return webview;\n}\n\n\n\nvar api = /*#__PURE__*/Object.freeze({\n  getSubNVueById: getSubNVueById,\n  requireNativePlugin: requireNativePlugin });\n\n\nvar MPPage = Page;\nvar MPComponent = Component;\n\nvar customizeRE = /:/g;\n\nvar customize = cached(function (str) {\n  return camelize(str.replace(customizeRE, '-'));\n});\n\nfunction initTriggerEvent(mpInstance) {\n  {\n    if (!wx.canIUse('nextTick')) {\n      return;\n    }\n  }\n  var oldTriggerEvent = mpInstance.triggerEvent;\n  mpInstance.triggerEvent = function (event) {for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {args[_key6 - 1] = arguments[_key6];}\n    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));\n  };\n}\n\nfunction initHook(name, options) {\n  var oldHook = options[name];\n  if (!oldHook) {\n    options[name] = function () {\n      initTriggerEvent(this);\n    };\n  } else {\n    options[name] = function () {\n      initTriggerEvent(this);for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}\n      return oldHook.apply(this, args);\n    };\n  }\n}\n\nPage = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('onLoad', options);\n  return MPPage(options);\n};\n\nComponent = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  initHook('created', options);\n  return MPComponent(options);\n};\n\nvar PAGE_EVENT_HOOKS = [\n'onPullDownRefresh',\n'onReachBottom',\n'onShareAppMessage',\n'onPageScroll',\n'onResize',\n'onTabItemTap'];\n\n\nfunction initMocks(vm, mocks) {\n  var mpInstance = vm.$mp[vm.mpType];\n  mocks.forEach(function (mock) {\n    if (hasOwn(mpInstance, mock)) {\n      vm[mock] = mpInstance[mock];\n    }\n  });\n}\n\nfunction hasHook(hook, vueOptions) {\n  if (!vueOptions) {\n    return true;\n  }\n\n  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {\n    return true;\n  }\n\n  vueOptions = vueOptions.default || vueOptions;\n\n  if (isFn(vueOptions)) {\n    if (isFn(vueOptions.extendOptions[hook])) {\n      return true;\n    }\n    if (vueOptions.super &&\n    vueOptions.super.options &&\n    Array.isArray(vueOptions.super.options[hook])) {\n      return true;\n    }\n    return false;\n  }\n\n  if (isFn(vueOptions[hook])) {\n    return true;\n  }\n  var mixins = vueOptions.mixins;\n  if (Array.isArray(mixins)) {\n    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});\n  }\n}\n\nfunction initHooks(mpOptions, hooks, vueOptions) {\n  hooks.forEach(function (hook) {\n    if (hasHook(hook, vueOptions)) {\n      mpOptions[hook] = function (args) {\n        return this.$vm && this.$vm.__call_hook(hook, args);\n      };\n    }\n  });\n}\n\nfunction initVueComponent(Vue, vueOptions) {\n  vueOptions = vueOptions.default || vueOptions;\n  var VueComponent;\n  if (isFn(vueOptions)) {\n    VueComponent = vueOptions;\n    vueOptions = VueComponent.extendOptions;\n  } else {\n    VueComponent = Vue.extend(vueOptions);\n  }\n  return [VueComponent, vueOptions];\n}\n\nfunction initSlots(vm, vueSlots) {\n  if (Array.isArray(vueSlots) && vueSlots.length) {\n    var $slots = Object.create(null);\n    vueSlots.forEach(function (slotName) {\n      $slots[slotName] = true;\n    });\n    vm.$scopedSlots = vm.$slots = $slots;\n  }\n}\n\nfunction initVueIds(vueIds, mpInstance) {\n  vueIds = (vueIds || '').split(',');\n  var len = vueIds.length;\n\n  if (len === 1) {\n    mpInstance._$vueId = vueIds[0];\n  } else if (len === 2) {\n    mpInstance._$vueId = vueIds[0];\n    mpInstance._$vuePid = vueIds[1];\n  }\n}\n\nfunction initData(vueOptions, context) {\n  var data = vueOptions.data || {};\n  var methods = vueOptions.methods || {};\n\n  if (typeof data === 'function') {\n    try {\n      data = data.call(context); // 支持 Vue.prototype 上挂的数据\n    } catch (e) {\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\n        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);\n      }\n    }\n  } else {\n    try {\n      // 对 data 格式化\n      data = JSON.parse(JSON.stringify(data));\n    } catch (e) {}\n  }\n\n  if (!isPlainObject(data)) {\n    data = {};\n  }\n\n  Object.keys(methods).forEach(function (methodName) {\n    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {\n      data[methodName] = methods[methodName];\n    }\n  });\n\n  return data;\n}\n\nvar PROP_TYPES = [String, Number, Boolean, Object, Array, null];\n\nfunction createObserver(name) {\n  return function observer(newVal, oldVal) {\n    if (this.$vm) {\n      this.$vm[name] = newVal; // 为了触发其他非 render watcher\n    }\n  };\n}\n\nfunction initBehaviors(vueOptions, initBehavior) {\n  var vueBehaviors = vueOptions['behaviors'];\n  var vueExtends = vueOptions['extends'];\n  var vueMixins = vueOptions['mixins'];\n\n  var vueProps = vueOptions['props'];\n\n  if (!vueProps) {\n    vueOptions['props'] = vueProps = [];\n  }\n\n  var behaviors = [];\n  if (Array.isArray(vueBehaviors)) {\n    vueBehaviors.forEach(function (behavior) {\n      behaviors.push(behavior.replace('uni://', \"wx\".concat(\"://\")));\n      if (behavior === 'uni://form-field') {\n        if (Array.isArray(vueProps)) {\n          vueProps.push('name');\n          vueProps.push('value');\n        } else {\n          vueProps['name'] = {\n            type: String,\n            default: '' };\n\n          vueProps['value'] = {\n            type: [String, Number, Boolean, Array, Object, Date],\n            default: '' };\n\n        }\n      }\n    });\n  }\n  if (isPlainObject(vueExtends) && vueExtends.props) {\n    behaviors.push(\n    initBehavior({\n      properties: initProperties(vueExtends.props, true) }));\n\n\n  }\n  if (Array.isArray(vueMixins)) {\n    vueMixins.forEach(function (vueMixin) {\n      if (isPlainObject(vueMixin) && vueMixin.props) {\n        behaviors.push(\n        initBehavior({\n          properties: initProperties(vueMixin.props, true) }));\n\n\n      }\n    });\n  }\n  return behaviors;\n}\n\nfunction parsePropType(key, type, defaultValue, file) {\n  // [String]=>String\n  if (Array.isArray(type) && type.length === 1) {\n    return type[0];\n  }\n  return type;\n}\n\nfunction initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var properties = {};\n  if (!isBehavior) {\n    properties.vueId = {\n      type: String,\n      value: '' };\n\n    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots\n      type: null,\n      value: [],\n      observer: function observer(newVal, oldVal) {\n        var $slots = Object.create(null);\n        newVal.forEach(function (slotName) {\n          $slots[slotName] = true;\n        });\n        this.setData({\n          $slots: $slots });\n\n      } };\n\n  }\n  if (Array.isArray(props)) {// ['title']\n    props.forEach(function (key) {\n      properties[key] = {\n        type: null,\n        observer: createObserver(key) };\n\n    });\n  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}\n    Object.keys(props).forEach(function (key) {\n      var opts = props[key];\n      if (isPlainObject(opts)) {// title:{type:String,default:''}\n        var value = opts['default'];\n        if (isFn(value)) {\n          value = value();\n        }\n\n        opts.type = parsePropType(key, opts.type);\n\n        properties[key] = {\n          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,\n          value: value,\n          observer: createObserver(key) };\n\n      } else {// content:String\n        var type = parsePropType(key, opts);\n        properties[key] = {\n          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,\n          observer: createObserver(key) };\n\n      }\n    });\n  }\n  return properties;\n}\n\nfunction wrapper$2(event) {\n  // TODO 又得兼容 mpvue 的 mp 对象\n  try {\n    event.mp = JSON.parse(JSON.stringify(event));\n  } catch (e) {}\n\n  event.stopPropagation = noop;\n  event.preventDefault = noop;\n\n  event.target = event.target || {};\n\n  if (!hasOwn(event, 'detail')) {\n    event.detail = {};\n  }\n\n  if (isPlainObject(event.detail)) {\n    event.target = Object.assign({}, event.target, event.detail);\n  }\n\n  return event;\n}\n\nfunction getExtraValue(vm, dataPathsArray) {\n  var context = vm;\n  dataPathsArray.forEach(function (dataPathArray) {\n    var dataPath = dataPathArray[0];\n    var value = dataPathArray[2];\n    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']\n      var propPath = dataPathArray[1];\n      var valuePath = dataPathArray[3];\n\n      var vFor = dataPath ? vm.__get_value(dataPath, context) : context;\n\n      if (Number.isInteger(vFor)) {\n        context = value;\n      } else if (!propPath) {\n        context = vFor[value];\n      } else {\n        if (Array.isArray(vFor)) {\n          context = vFor.find(function (vForItem) {\n            return vm.__get_value(propPath, vForItem) === value;\n          });\n        } else if (isPlainObject(vFor)) {\n          context = Object.keys(vFor).find(function (vForKey) {\n            return vm.__get_value(propPath, vFor[vForKey]) === value;\n          });\n        } else {\n          console.error('v-for 暂不支持循环数据：', vFor);\n        }\n      }\n\n      if (valuePath) {\n        context = vm.__get_value(valuePath, context);\n      }\n    }\n  });\n  return context;\n}\n\nfunction processEventExtra(vm, extra, event) {\n  var extraObj = {};\n\n  if (Array.isArray(extra) && extra.length) {\n    /**\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *[\r\n                                              *    ['data.items', 'data.id', item.data.id],\r\n                                              *    ['metas', 'id', meta.id]\r\n                                              *],\r\n                                              *'test'\r\n                                              */\n    extra.forEach(function (dataPath, index) {\n      if (typeof dataPath === 'string') {\n        if (!dataPath) {// model,prop.sync\n          extraObj['$' + index] = vm;\n        } else {\n          if (dataPath === '$event') {// $event\n            extraObj['$' + index] = event;\n          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value\n            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);\n          } else {\n            extraObj['$' + index] = vm.__get_value(dataPath);\n          }\n        }\n      } else {\n        extraObj['$' + index] = getExtraValue(vm, dataPath);\n      }\n    });\n  }\n\n  return extraObj;\n}\n\nfunction getObjByArray(arr) {\n  var obj = {};\n  for (var i = 1; i < arr.length; i++) {\n    var element = arr[i];\n    obj[element[0]] = element[1];\n  }\n  return obj;\n}\n\nfunction processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;\n  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象\n  if (isCustom) {// 自定义事件\n    isCustomMPEvent = event.currentTarget &&\n    event.currentTarget.dataset &&\n    event.currentTarget.dataset.comType === 'wx';\n    if (!args.length) {// 无参数，直接传入 event 或 detail 数组\n      if (isCustomMPEvent) {\n        return [event];\n      }\n      return event.detail.__args__ || event.detail;\n    }\n  }\n\n  var extraObj = processEventExtra(vm, extra, event);\n\n  var ret = [];\n  args.forEach(function (arg) {\n    if (arg === '$event') {\n      if (methodName === '__set_model' && !isCustom) {// input v-model value\n        ret.push(event.target.value);\n      } else {\n        if (isCustom && !isCustomMPEvent) {\n          ret.push(event.detail.__args__[0]);\n        } else {// wxcomponent 组件或内置组件\n          ret.push(event);\n        }\n      }\n    } else {\n      if (Array.isArray(arg) && arg[0] === 'o') {\n        ret.push(getObjByArray(arg));\n      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {\n        ret.push(extraObj[arg]);\n      } else {\n        ret.push(arg);\n      }\n    }\n  });\n\n  return ret;\n}\n\nvar ONCE = '~';\nvar CUSTOM = '^';\n\nfunction isMatchEventType(eventType, optType) {\n  return eventType === optType ||\n\n  optType === 'regionchange' && (\n\n  eventType === 'begin' ||\n  eventType === 'end');\n\n\n}\n\nfunction handleEvent(event) {var _this = this;\n  event = wrapper$2(event);\n\n  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]\n  var dataset = (event.currentTarget || event.target).dataset;\n  if (!dataset) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰\n  if (!eventOpts) {\n    return console.warn(\"\\u4E8B\\u4EF6\\u4FE1\\u606F\\u4E0D\\u5B58\\u5728\");\n  }\n\n  // [['handle',[1,2,a]],['handle1',[1,2,a]]]\n  var eventType = event.type;\n\n  var ret = [];\n\n  eventOpts.forEach(function (eventOpt) {\n    var type = eventOpt[0];\n    var eventsArray = eventOpt[1];\n\n    var isCustom = type.charAt(0) === CUSTOM;\n    type = isCustom ? type.slice(1) : type;\n    var isOnce = type.charAt(0) === ONCE;\n    type = isOnce ? type.slice(1) : type;\n\n    if (eventsArray && isMatchEventType(eventType, type)) {\n      eventsArray.forEach(function (eventArray) {\n        var methodName = eventArray[0];\n        if (methodName) {\n          var handlerCtx = _this.$vm;\n          if (\n          handlerCtx.$options.generic &&\n          handlerCtx.$parent &&\n          handlerCtx.$parent.$parent)\n          {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots\n            handlerCtx = handlerCtx.$parent.$parent;\n          }\n          var handler = handlerCtx[methodName];\n          if (!isFn(handler)) {\n            throw new Error(\" _vm.\".concat(methodName, \" is not a function\"));\n          }\n          if (isOnce) {\n            if (handler.once) {\n              return;\n            }\n            handler.once = true;\n          }\n          ret.push(handler.apply(handlerCtx, processEventArgs(\n          _this.$vm,\n          event,\n          eventArray[1],\n          eventArray[2],\n          isCustom,\n          methodName)));\n\n        }\n      });\n    }\n  });\n\n  if (\n  eventType === 'input' &&\n  ret.length === 1 &&\n  typeof ret[0] !== 'undefined')\n  {\n    return ret[0];\n  }\n}\n\nvar hooks = [\n'onShow',\n'onHide',\n'onError',\n'onPageNotFound'];\n\n\nfunction parseBaseApp(vm, _ref3)\n\n\n{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;\n  if (vm.$options.store) {\n    _vue.default.prototype.$store = vm.$options.store;\n  }\n\n  _vue.default.prototype.mpHost = \"app-plus\";\n\n  _vue.default.mixin({\n    beforeCreate: function beforeCreate() {\n      if (!this.$options.mpType) {\n        return;\n      }\n\n      this.mpType = this.$options.mpType;\n\n      this.$mp = _defineProperty({\n        data: {} },\n      this.mpType, this.$options.mpInstance);\n\n\n      this.$scope = this.$options.mpInstance;\n\n      delete this.$options.mpType;\n      delete this.$options.mpInstance;\n\n      if (this.mpType !== 'app') {\n        initRefs(this);\n        initMocks(this, mocks);\n      }\n    } });\n\n\n  var appOptions = {\n    onLaunch: function onLaunch(args) {\n      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前\n        return;\n      }\n\n      this.$vm = vm;\n\n      this.$vm.$mp = {\n        app: this };\n\n\n      this.$vm.$scope = this;\n\n      this.$vm._isMounted = true;\n      this.$vm.__call_hook('mounted', args);\n\n      this.$vm.__call_hook('onLaunch', args);\n    } };\n\n\n  // 兼容旧版本 globalData\n  appOptions.globalData = vm.$options.globalData || {};\n\n  initHooks(appOptions, hooks);\n\n  return appOptions;\n}\n\nvar mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];\n\nfunction findVmByVueId(vm, vuePid) {\n  var $children = vm.$children;\n  // 优先查找直属\n  var parentVm = $children.find(function (childVm) {return childVm.$scope._$vueId === vuePid;});\n  if (parentVm) {\n    return parentVm;\n  }\n  // 反向递归查找\n  for (var i = $children.length - 1; i >= 0; i--) {\n    parentVm = findVmByVueId($children[i], vuePid);\n    if (parentVm) {\n      return parentVm;\n    }\n  }\n}\n\nfunction initBehavior(options) {\n  return Behavior(options);\n}\n\nfunction isPage() {\n  return !!this.route;\n}\n\nfunction initRelation(detail) {\n  this.triggerEvent('__l', detail);\n}\n\nfunction initRefs(vm) {\n  var mpInstance = vm.$scope;\n  Object.defineProperty(vm, '$refs', {\n    get: function get() {\n      var $refs = {};\n      var components = mpInstance.selectAllComponents('.vue-ref');\n      components.forEach(function (component) {\n        var ref = component.dataset.ref;\n        $refs[ref] = component.$vm || component;\n      });\n      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');\n      forComponents.forEach(function (component) {\n        var ref = component.dataset.ref;\n        if (!$refs[ref]) {\n          $refs[ref] = [];\n        }\n        $refs[ref].push(component.$vm || component);\n      });\n      return $refs;\n    } });\n\n}\n\nfunction handleLink(event) {var _ref4 =\n\n\n\n  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)\n\n  var parentVm;\n\n  if (vuePid) {\n    parentVm = findVmByVueId(this.$vm, vuePid);\n  }\n\n  if (!parentVm) {\n    parentVm = this.$vm;\n  }\n\n  vueOptions.parent = parentVm;\n}\n\nfunction parseApp(vm) {\n  return parseBaseApp(vm, {\n    mocks: mocks,\n    initRefs: initRefs });\n\n}\n\nvar hooks$1 = [\n'onUniNViewMessage'];\n\n\nfunction parseApp$1(vm) {\n  var appOptions = parseApp(vm);\n\n  initHooks(appOptions, hooks$1);\n\n  return appOptions;\n}\n\nfunction createApp(vm) {\n  App(parseApp$1(vm));\n  return vm;\n}\n\nfunction parseBaseComponent(vueComponentOptions)\n\n\n{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =\n  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];\n\n  var componentOptions = {\n    options: {\n      multipleSlots: true,\n      addGlobalClass: true },\n\n    data: initData(vueOptions, _vue.default.prototype),\n    behaviors: initBehaviors(vueOptions, initBehavior),\n    properties: initProperties(vueOptions.props, false, vueOptions.__file),\n    lifetimes: {\n      attached: function attached() {\n        var properties = this.properties;\n\n        var options = {\n          mpType: isPage.call(this) ? 'page' : 'component',\n          mpInstance: this,\n          propsData: properties };\n\n\n        initVueIds(properties.vueId, this);\n\n        // 处理父子关系\n        initRelation.call(this, {\n          vuePid: this._$vuePid,\n          vueOptions: options });\n\n\n        // 初始化 vue 实例\n        this.$vm = new VueComponent(options);\n\n        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）\n        initSlots(this.$vm, properties.vueSlots);\n\n        // 触发首次 setData\n        this.$vm.$mount();\n      },\n      ready: function ready() {\n        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发\n        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800\n        if (this.$vm) {\n          this.$vm._isMounted = true;\n          this.$vm.__call_hook('mounted');\n          this.$vm.__call_hook('onReady');\n        }\n      },\n      detached: function detached() {\n        this.$vm.$destroy();\n      } },\n\n    pageLifetimes: {\n      show: function show(args) {\n        this.$vm && this.$vm.__call_hook('onPageShow', args);\n      },\n      hide: function hide() {\n        this.$vm && this.$vm.__call_hook('onPageHide');\n      },\n      resize: function resize(size) {\n        this.$vm && this.$vm.__call_hook('onPageResize', size);\n      } },\n\n    methods: {\n      __l: handleLink,\n      __e: handleEvent } };\n\n\n\n  if (Array.isArray(vueOptions.wxsCallMethods)) {\n    vueOptions.wxsCallMethods.forEach(function (callMethod) {\n      componentOptions.methods[callMethod] = function (args) {\n        return this.$vm[callMethod](args);\n      };\n    });\n  }\n\n  if (isPage) {\n    return componentOptions;\n  }\n  return [componentOptions, VueComponent];\n}\n\nfunction parseComponent(vueComponentOptions) {\n  return parseBaseComponent(vueComponentOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nfunction parseComponent$1(vueComponentOptions) {\n  var componentOptions = parseComponent(vueComponentOptions);\n\n  componentOptions.methods.$getAppWebview = function () {\n    return plus.webview.getWebviewById(\"\".concat(this.__wxWebviewId__));\n  };\n  return componentOptions;\n}\n\nvar hooks$2 = [\n'onShow',\n'onHide',\n'onUnload'];\n\n\nhooks$2.push.apply(hooks$2, PAGE_EVENT_HOOKS);\n\nfunction parseBasePage(vuePageOptions, _ref6)\n\n\n{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;\n  var pageOptions = parseComponent$1(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$2, vuePageOptions);\n\n  pageOptions.methods.onLoad = function (args) {\n    this.$vm.$mp.query = args; // 兼容 mpvue\n    this.$vm.__call_hook('onLoad', args);\n  };\n\n  return pageOptions;\n}\n\nfunction parsePage(vuePageOptions) {\n  return parseBasePage(vuePageOptions, {\n    isPage: isPage,\n    initRelation: initRelation });\n\n}\n\nvar hooks$3 = [\n'onBackPress',\n'onNavigationBarButtonTap',\n'onNavigationBarSearchInputChanged',\n'onNavigationBarSearchInputConfirmed',\n'onNavigationBarSearchInputClicked'];\n\n\nfunction parsePage$1(vuePageOptions) {\n  var pageOptions = parsePage(vuePageOptions);\n\n  initHooks(pageOptions.methods, hooks$3);\n\n  return pageOptions;\n}\n\nfunction createPage(vuePageOptions) {\n  {\n    return Component(parsePage$1(vuePageOptions));\n  }\n}\n\nfunction createComponent(vueOptions) {\n  {\n    return Component(parseComponent$1(vueOptions));\n  }\n}\n\ntodos.forEach(function (todoApi) {\n  protocols[todoApi] = false;\n});\n\ncanIUses.forEach(function (canIUseApi) {\n  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :\n  canIUseApi;\n  if (!wx.canIUse(apiName)) {\n    protocols[canIUseApi] = false;\n  }\n});\n\nvar uni = {};\n\nif (typeof Proxy !== 'undefined' && \"app-plus\" !== 'app-plus') {\n  uni = new Proxy({}, {\n    get: function get(target, name) {\n      if (target[name]) {\n        return target[name];\n      }\n      if (baseApi[name]) {\n        return baseApi[name];\n      }\n      if (api[name]) {\n        return promisify(name, api[name]);\n      }\n      if (eventApi[name]) {\n        return eventApi[name];\n      }\n      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {\n        return;\n      }\n      return promisify(name, wrapper(name, wx[name]));\n    },\n    set: function set(target, name, value) {\n      target[name] = value;\n      return true;\n    } });\n\n} else {\n  Object.keys(baseApi).forEach(function (name) {\n    uni[name] = baseApi[name];\n  });\n\n  Object.keys(eventApi).forEach(function (name) {\n    uni[name] = eventApi[name];\n  });\n\n  Object.keys(api).forEach(function (name) {\n    uni[name] = promisify(name, api[name]);\n  });\n\n  Object.keys(wx).forEach(function (name) {\n    if (hasOwn(wx, name) || hasOwn(protocols, name)) {\n      uni[name] = promisify(name, wrapper(name, wx[name]));\n    }\n  });\n}\n\n{\n  if (typeof global !== 'undefined') {\n    global.uni = uni;\n    global.UniEmitter = eventApi;\n  }\n}\n\nwx.createApp = createApp;\nwx.createPage = createPage;\nwx.createComponent = createComponent;\n\nvar uni$1 = uni;var _default =\n\nuni$1;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),

/***/ 15:
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n");

/***/ }),

/***/ 155:
/*!**************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/index.list.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("module.exports = {\n  list: [{\n    \"letter\": \"A\",\n    \"data\": [{\n      \"name\": \"阿拉斯加\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"阿拉斯加ABA13588889999\" },\n\n    {\n      \"name\": \"阿克苏\",\n      \"mobile\": \"0551-4386721\",\n      \"keyword\": \"阿克苏AKESU0551-4386721\" },\n\n    {\n      \"name\": \"阿拉善\",\n      \"mobile\": \"4008009100\",\n      \"keyword\": \"阿拉善ALASHAN4008009100\" },\n\n    {\n      \"name\": \"阿勒泰\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"阿勒泰ALETAI13588889999\" },\n\n    {\n      \"name\": \"阿里\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"阿里ALI13588889999\" },\n\n    {\n      \"name\": \"安阳\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"13588889999安阳ANYANG\" }] },\n\n\n\n  {\n    \"letter\": \"B\",\n    \"data\": [{\n      \"name\": \"白城\",\n      \"mobile\": \"该主子没有留电话~\",\n      \"keyword\": \"白城BAICHENG\" },\n\n    {\n      \"name\": \"白山\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"白山BAISHAN13588889999\" },\n\n    {\n      \"name\": \"白银\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"白银BAIYIN13588889999\" },\n\n    {\n      \"name\": \"保定\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"保定BAODING13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"C\",\n    \"data\": [{\n      \"name\": \"沧州\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"沧州CANGZHOU13588889999\" },\n\n    {\n      \"name\": \"长春\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"长春CHANGCHUN13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"D\",\n    \"data\": [{\n      \"name\": \"大理\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"大理DALI13588889999\" },\n\n    {\n      \"name\": \"大连\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"大连DALIAN13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"E\",\n    \"data\": [{\n      \"name\": \"鄂尔多斯\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"鄂尔多斯EERDUOSI13588889999\" },\n\n    {\n      \"name\": \"恩施\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"恩施ENSHI13588889999\" },\n\n    {\n      \"name\": \"鄂州\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"鄂州EZHOU13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"F\",\n    \"data\": [{\n      \"name\": \"防城港\",\n      \"mobile\": \"该主子没有留电话~\",\n      \"keyword\": \"防城港FANGCHENGGANG\" },\n\n    {\n      \"name\": \"抚顺\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"抚顺FUSHUN13588889999\" },\n\n    {\n      \"name\": \"阜新\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"阜新FUXIN13588889999\" },\n\n    {\n      \"name\": \"阜阳\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"阜阳FUYANG13588889999\" },\n\n    {\n      \"name\": \"抚州\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"抚州FUZHOU13588889999\" },\n\n    {\n      \"name\": \"福州\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"福州FUZHOU13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"G\",\n    \"data\": [{\n      \"name\": \"甘南\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"甘南GANNAN13588889999\" },\n\n    {\n      \"name\": \"赣州\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"赣州GANZHOU13588889999\" },\n\n    {\n      \"name\": \"甘孜\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"甘孜GANZI13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"H\",\n    \"data\": [{\n      \"name\": \"哈尔滨\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"哈尔滨HAERBIN13588889999\" },\n\n    {\n      \"name\": \"海北\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"海北HAIBEI13588889999\" },\n\n    {\n      \"name\": \"海东\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"海东HAIDONG13588889999\" },\n\n    {\n      \"name\": \"海口\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"海口HAIKOU13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"I\",\n    \"data\": [] },\n\n\n\n  {\n    \"letter\": \"J\",\n    \"data\": [{\n      \"name\": \"佳木斯\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"佳木斯JIAMUSI13588889999\" },\n\n    {\n      \"name\": \"吉安\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"吉安JIAN13588889999\" },\n\n    {\n      \"name\": \"江门\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"江门JIANGMEN13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"K\",\n    \"data\": [{\n      \"name\": \"开封\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"开封KAIFENG13588889999\" },\n\n    {\n      \"name\": \"喀什\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"喀什KASHI13588889999\" },\n\n    {\n      \"name\": \"克拉玛依\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"克拉玛依KELAMAYI13588889999\" }] },\n\n\n\n  {\n    \"letter\": \"L\",\n    \"data\": [{\n      \"name\": \"来宾\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"来宾LAIBIN13588889999\" },\n\n    {\n      \"name\": \"兰州\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"兰州LANZHOU13588889999\" },\n\n    {\n      \"name\": \"拉萨\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"拉萨LASA13588889999\" },\n\n    {\n      \"name\": \"乐山\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"乐山LESHAN13588889999\" },\n\n    {\n      \"name\": \"凉山\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"凉山LIANGSHAN13588889999\" },\n\n    {\n      \"name\": \"连云港\",\n      \"mobile\": \"13588889999\",\n      \"keyword\": \"连云港LIANYUNGANG13588889999\" },\n\n    {\n      \"name\": \"聊城\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"聊城LIAOCHENG18322223333\" },\n\n    {\n      \"name\": \"辽阳\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"辽阳LIAOYANG18322223333\" },\n\n    {\n      \"name\": \"辽源\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"辽源LIAOYUAN18322223333\" },\n\n    {\n      \"name\": \"丽江\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"丽江LIJIANG18322223333\" },\n\n    {\n      \"name\": \"临沧\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"临沧LINCANG18322223333\" },\n\n    {\n      \"name\": \"临汾\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"临汾LINFEN18322223333\" },\n\n    {\n      \"name\": \"临夏\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"临夏LINXIA18322223333\" },\n\n    {\n      \"name\": \"临沂\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"临沂LINYI18322223333\" },\n\n    {\n      \"name\": \"林芝\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"林芝LINZHI18322223333\" },\n\n    {\n      \"name\": \"丽水\",\n      \"mobile\": \"18322223333\",\n      \"keyword\": \"丽水LISHUI18322223333\" }] },\n\n\n\n  {\n    \"letter\": \"M\",\n    \"data\": [{\n      \"name\": \"眉山\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"眉山MEISHAN15544448888\" },\n\n    {\n      \"name\": \"梅州\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"梅州MEIZHOU15544448888\" },\n\n    {\n      \"name\": \"绵阳\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"绵阳MIANYANG15544448888\" },\n\n    {\n      \"name\": \"牡丹江\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"牡丹江MUDANJIANG15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"N\",\n    \"data\": [{\n      \"name\": \"南昌\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"南昌NANCHANG15544448888\" },\n\n    {\n      \"name\": \"南充\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"南充NANCHONG15544448888\" },\n\n    {\n      \"name\": \"南京\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"南京NANJING15544448888\" },\n\n    {\n      \"name\": \"南宁\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"南宁NANNING15544448888\" },\n\n    {\n      \"name\": \"南平\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"南平NANPING15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"O\",\n    \"data\": [{\n      \"name\": \"欧阳\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"欧阳ouyang15544448888\" }] },\n\n\n  {\n    \"letter\": \"P\",\n    \"data\": [{\n      \"name\": \"盘锦\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"盘锦PANJIN15544448888\" },\n\n    {\n      \"name\": \"攀枝花\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"攀枝花PANZHIHUA15544448888\" },\n\n    {\n      \"name\": \"平顶山\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"平顶山PINGDINGSHAN15544448888\" },\n\n    {\n      \"name\": \"平凉\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"平凉PINGLIANG15544448888\" },\n\n    {\n      \"name\": \"萍乡\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"萍乡PINGXIANG15544448888\" },\n\n    {\n      \"name\": \"普洱\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"普洱PUER15544448888\" },\n\n    {\n      \"name\": \"莆田\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"莆田PUTIAN15544448888\" },\n\n    {\n      \"name\": \"濮阳\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"濮阳PUYANG15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"Q\",\n    \"data\": [{\n      \"name\": \"黔东南\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"黔东南QIANDONGNAN15544448888\" },\n\n    {\n      \"name\": \"黔南\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"黔南QIANNAN15544448888\" },\n\n    {\n      \"name\": \"黔西南\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"黔西南QIANXINAN15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"R\",\n    \"data\": [{\n      \"name\": \"日喀则\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"日喀则RIKAZE15544448888\" },\n\n    {\n      \"name\": \"日照\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"日照RIZHAO15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"S\",\n    \"data\": [{\n      \"name\": \"三门峡\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"三门峡SANMENXIA15544448888\" },\n\n    {\n      \"name\": \"三明\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"三明SANMING15544448888\" },\n\n    {\n      \"name\": \"三沙\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"三沙SANSHA15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"T\",\n    \"data\": [{\n      \"name\": \"塔城\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"塔城TACHENG15544448888\" },\n\n    {\n      \"name\": \"漯河\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"漯河TAHE15544448888\" },\n\n    {\n      \"name\": \"泰安\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"泰安TAIAN15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"W\",\n    \"data\": [{\n      \"name\": \"潍坊\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"潍坊WEIFANG15544448888\" },\n\n    {\n      \"name\": \"威海\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"威海WEIHAI15544448888\" },\n\n    {\n      \"name\": \"渭南\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"渭南WEINAN15544448888\" },\n\n    {\n      \"name\": \"文山\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"文山WENSHAN15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"X\",\n    \"data\": [{\n      \"name\": \"厦门\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"厦门XIAMEN15544448888\" },\n\n    {\n      \"name\": \"西安\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"西安XIAN15544448888\" },\n\n    {\n      \"name\": \"湘潭\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"湘潭XIANGTAN15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"Y\",\n    \"data\": [{\n      \"name\": \"雅安\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"雅安YAAN15544448888\" },\n\n    {\n      \"name\": \"延安\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"延安YANAN15544448888\" },\n\n    {\n      \"name\": \"延边\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"延边YANBIAN15544448888\" },\n\n    {\n      \"name\": \"盐城\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"盐城YANCHENG15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"Z\",\n    \"data\": [{\n      \"name\": \"枣庄\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"枣庄ZAOZHUANG15544448888\" },\n\n    {\n      \"name\": \"张家界\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"张家界ZHANGJIAJIE15544448888\" },\n\n    {\n      \"name\": \"张家口\",\n      \"mobile\": \"15544448888\",\n      \"keyword\": \"张家口ZHANGJIAKOU15544448888\" }] },\n\n\n\n  {\n    \"letter\": \"well\",\n    \"data\": [{\n      \"name\": \"☆echo.\",\n      \"mobile\": \"16666666666\",\n      \"keyword\": \"echo16666666666\" }] }] };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///155\n");

/***/ }),

/***/ 16:
/*!*********************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.test = exports.http = void 0;var _request = _interopRequireDefault(__webpack_require__(/*! ./request */ 17));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\nvar test = new _request.default();exports.test = test;\n\ntest.setConfig(function (config) {/* 设置全局配置 */\n  config.baseUrl = 'https://cscbnew.kelinteng.com/api/';\n\n\n\n  config.header = _objectSpread({},\n  config.header, _defineProperty({\n    'content-type': 'application/json;charset=UTF-8' }, \"content-type\",\n  'application/x-www-form-urlencoded'));\n\n  return config;\n});\n\ntest.interceptor.request(function (config, cancel) {/* 请求之前拦截器 */\n  config.header = _objectSpread({},\n  config.header);\n\n  /*\r\n                  if (!token) { // 如果token不存在，调用cancel 会取消本次请求，但是该函数的catch() 仍会执行\r\n                    cancel('token 不存在') // 接收一个参数，会传给catch((err) => {}) err.errMsg === 'token 不存在'\r\n                  }\r\n                  */\n  return config;\n});\n\ntest.interceptor.response(function (response) {/* 请求之后拦截器 */\n  return response;\n}, function (response) {// 请求错误做点什么\n  return response;\n});\n\nvar http = new _request.default();exports.http = http;\n\nhttp.setConfig(function (config) {/* 设置全局配置 */\n  config.baseUrl = 'http://www.bbb.cn'; /* 根域名不同 */\n  return config;\n});\n\nhttp.validateStatus = function (response) {\n  return response.statusCode === 200;\n};\n\nhttp.interceptor.request(function (config, cancel) {/* 请求之前拦截器 */\n  config.header = _objectSpread({},\n  config.header, {\n    a: 1\n\n    /*\r\n         if (!token) { // 如果token不存在，调用cancel 会取消本次请求，但是该函数的catch() 仍会执行\r\n           cancel('token 不存在') // 接收一个参数，会传给catch((err) => {}) err.errMsg === 'token 不存在'\r\n         }\r\n         */ });\n  return config;\n});\n\nhttp.interceptor.response(function (response) {/* 请求之后拦截器 */\n  return response;\n}, function (response) {// 请求错误做点什么\n  return response;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vdXRpbHMvaW5kZXguanMiXSwibmFtZXMiOlsidGVzdCIsIlJlcXVlc3QiLCJzZXRDb25maWciLCJjb25maWciLCJiYXNlVXJsIiwiaGVhZGVyIiwiaW50ZXJjZXB0b3IiLCJyZXF1ZXN0IiwiY2FuY2VsIiwicmVzcG9uc2UiLCJodHRwIiwidmFsaWRhdGVTdGF0dXMiLCJzdGF0dXNDb2RlIiwiYSJdLCJtYXBwaW5ncyI6Im1HQUFBLGdGOztBQUVBLElBQU1BLElBQUksR0FBRyxJQUFJQyxnQkFBSixFQUFiLEM7O0FBRUFELElBQUksQ0FBQ0UsU0FBTCxDQUFlLFVBQUNDLE1BQUQsRUFBWSxDQUFFO0FBQzNCQSxRQUFNLENBQUNDLE9BQVAsR0FBaUIsb0NBQWpCOzs7O0FBSUFELFFBQU0sQ0FBQ0UsTUFBUDtBQUNLRixRQUFNLENBQUNFLE1BRFo7QUFFRSxvQkFBZSxnQ0FGakI7QUFHaUIscUNBSGpCOztBQUtBLFNBQU9GLE1BQVA7QUFDRCxDQVhEOztBQWFBSCxJQUFJLENBQUNNLFdBQUwsQ0FBaUJDLE9BQWpCLENBQXlCLFVBQUNKLE1BQUQsRUFBU0ssTUFBVCxFQUFvQixDQUFFO0FBQzdDTCxRQUFNLENBQUNFLE1BQVA7QUFDS0YsUUFBTSxDQUFDRSxNQURaOztBQUdBOzs7OztBQUtBLFNBQU9GLE1BQVA7QUFDRCxDQVZEOztBQVlBSCxJQUFJLENBQUNNLFdBQUwsQ0FBaUJHLFFBQWpCLENBQTBCLFVBQUNBLFFBQUQsRUFBYyxDQUFFO0FBQ3hDLFNBQU9BLFFBQVA7QUFDRCxDQUZELEVBRUcsVUFBQ0EsUUFBRCxFQUFjLENBQUU7QUFDakIsU0FBT0EsUUFBUDtBQUNELENBSkQ7O0FBTUEsSUFBTUMsSUFBSSxHQUFHLElBQUlULGdCQUFKLEVBQWIsQzs7QUFFQVMsSUFBSSxDQUFDUixTQUFMLENBQWUsVUFBQ0MsTUFBRCxFQUFZLENBQUU7QUFDM0JBLFFBQU0sQ0FBQ0MsT0FBUCxHQUFpQixtQkFBakIsQ0FEeUIsQ0FDWTtBQUNyQyxTQUFPRCxNQUFQO0FBQ0QsQ0FIRDs7QUFLQU8sSUFBSSxDQUFDQyxjQUFMLEdBQXNCLFVBQUNGLFFBQUQsRUFBYztBQUNsQyxTQUFPQSxRQUFRLENBQUNHLFVBQVQsS0FBd0IsR0FBL0I7QUFDRCxDQUZEOztBQUlBRixJQUFJLENBQUNKLFdBQUwsQ0FBaUJDLE9BQWpCLENBQXlCLFVBQUNKLE1BQUQsRUFBU0ssTUFBVCxFQUFvQixDQUFFO0FBQzdDTCxRQUFNLENBQUNFLE1BQVA7QUFDS0YsUUFBTSxDQUFDRSxNQURaO0FBRUVRLEtBQUMsRUFBRTs7QUFFTDs7OztXQUpBO0FBU0EsU0FBT1YsTUFBUDtBQUNELENBWEQ7O0FBYUFPLElBQUksQ0FBQ0osV0FBTCxDQUFpQkcsUUFBakIsQ0FBMEIsVUFBQ0EsUUFBRCxFQUFjLENBQUU7QUFDeEMsU0FBT0EsUUFBUDtBQUNELENBRkQsRUFFRyxVQUFDQSxRQUFELEVBQWMsQ0FBRTtBQUNqQixTQUFPQSxRQUFQO0FBQ0QsQ0FKRCIsImZpbGUiOiIxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXF1ZXN0IGZyb20gJy4vcmVxdWVzdCdcclxuXHJcbmNvbnN0IHRlc3QgPSBuZXcgUmVxdWVzdCgpXHJcblxyXG50ZXN0LnNldENvbmZpZygoY29uZmlnKSA9PiB7IC8qIOiuvue9ruWFqOWxgOmFjee9riAqL1xyXG4gIGNvbmZpZy5iYXNlVXJsID0gJ2h0dHBzOi8vY3NjYm5ldy5rZWxpbnRlbmcuY29tL2FwaS8nXHJcblxyXG5cclxuXHJcbiAgY29uZmlnLmhlYWRlciA9IHtcclxuICAgIC4uLmNvbmZpZy5oZWFkZXIsXHJcbiAgICAnY29udGVudC10eXBlJzonYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04JyxcclxuICAgICdjb250ZW50LXR5cGUnOidhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxyXG4gIH1cclxuICByZXR1cm4gY29uZmlnXHJcbn0pXHJcblxyXG50ZXN0LmludGVyY2VwdG9yLnJlcXVlc3QoKGNvbmZpZywgY2FuY2VsKSA9PiB7IC8qIOivt+axguS5i+WJjeaLpuaIquWZqCAqL1xyXG4gIGNvbmZpZy5oZWFkZXIgPSB7XHJcbiAgICAuLi5jb25maWcuaGVhZGVyXHJcbiAgfVxyXG4gIC8qXHJcbiAgaWYgKCF0b2tlbikgeyAvLyDlpoLmnpx0b2tlbuS4jeWtmOWcqO+8jOiwg+eUqGNhbmNlbCDkvJrlj5bmtojmnKzmrKHor7fmsYLvvIzkvYbmmK/or6Xlh73mlbDnmoRjYXRjaCgpIOS7jeS8muaJp+ihjFxyXG4gICAgY2FuY2VsKCd0b2tlbiDkuI3lrZjlnKgnKSAvLyDmjqXmlLbkuIDkuKrlj4LmlbDvvIzkvJrkvKDnu5ljYXRjaCgoZXJyKSA9PiB7fSkgZXJyLmVyck1zZyA9PT0gJ3Rva2VuIOS4jeWtmOWcqCdcclxuICB9XHJcbiAgKi9cclxuICByZXR1cm4gY29uZmlnXHJcbn0pXHJcblxyXG50ZXN0LmludGVyY2VwdG9yLnJlc3BvbnNlKChyZXNwb25zZSkgPT4geyAvKiDor7fmsYLkuYvlkI7mi6bmiKrlmaggKi9cclxuICByZXR1cm4gcmVzcG9uc2VcclxufSwgKHJlc3BvbnNlKSA9PiB7IC8vIOivt+axgumUmeivr+WBmueCueS7gOS5iFxyXG4gIHJldHVybiByZXNwb25zZVxyXG59KVxyXG5cclxuY29uc3QgaHR0cCA9IG5ldyBSZXF1ZXN0KClcclxuXHJcbmh0dHAuc2V0Q29uZmlnKChjb25maWcpID0+IHsgLyog6K6+572u5YWo5bGA6YWN572uICovXHJcbiAgY29uZmlnLmJhc2VVcmwgPSAnaHR0cDovL3d3dy5iYmIuY24nIC8qIOagueWfn+WQjeS4jeWQjCAqL1xyXG4gIHJldHVybiBjb25maWdcclxufSlcclxuXHJcbmh0dHAudmFsaWRhdGVTdGF0dXMgPSAocmVzcG9uc2UpID0+IHtcclxuICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMjAwXHJcbn1cclxuXHJcbmh0dHAuaW50ZXJjZXB0b3IucmVxdWVzdCgoY29uZmlnLCBjYW5jZWwpID0+IHsgLyog6K+35rGC5LmL5YmN5oum5oiq5ZmoICovXHJcbiAgY29uZmlnLmhlYWRlciA9IHtcclxuICAgIC4uLmNvbmZpZy5oZWFkZXIsXHJcbiAgICBhOiAxXHJcbiAgfVxyXG4gIC8qXHJcbiAgaWYgKCF0b2tlbikgeyAvLyDlpoLmnpx0b2tlbuS4jeWtmOWcqO+8jOiwg+eUqGNhbmNlbCDkvJrlj5bmtojmnKzmrKHor7fmsYLvvIzkvYbmmK/or6Xlh73mlbDnmoRjYXRjaCgpIOS7jeS8muaJp+ihjFxyXG4gICAgY2FuY2VsKCd0b2tlbiDkuI3lrZjlnKgnKSAvLyDmjqXmlLbkuIDkuKrlj4LmlbDvvIzkvJrkvKDnu5ljYXRjaCgoZXJyKSA9PiB7fSkgZXJyLmVyck1zZyA9PT0gJ3Rva2VuIOS4jeWtmOWcqCdcclxuICB9XHJcbiAgKi9cclxuICByZXR1cm4gY29uZmlnXHJcbn0pXHJcblxyXG5odHRwLmludGVyY2VwdG9yLnJlc3BvbnNlKChyZXNwb25zZSkgPT4geyAvKiDor7fmsYLkuYvlkI7mi6bmiKrlmaggKi9cclxuICByZXR1cm4gcmVzcG9uc2VcclxufSwgKHJlc3BvbnNlKSA9PiB7IC8vIOivt+axgumUmeivr+WBmueCueS7gOS5iFxyXG4gIHJldHVybiByZXNwb25zZVxyXG59KVxyXG5cclxuZXhwb3J0IHtcclxuICBodHRwLFxyXG4gIHRlc3RcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n");

/***/ }),

/***/ 17:
/*!***********************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/request.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 18));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};var ownKeys = Object.keys(source);if (typeof Object.getOwnPropertySymbols === 'function') {ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {return Object.getOwnPropertyDescriptor(source, sym).enumerable;}));}ownKeys.forEach(function (key) {_defineProperty(target, key, source[key]);});}return target;}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);}_next(undefined);});};}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;} /**\r\nequest 1.0.1\r\nlass Request\r\ndescription luch-request 1.0.1 http请求插件\r\nuthor lu-ch\r\nate 2019-09-20\r\nmail webwork.s@qq.com\r\nhttp://ext.dcloud.net.cn/plugin?id=392\r\nvar\nRequest = /*#__PURE__*/function () {function Request() {var _header,_this = this;_classCallCheck(this, Request);_defineProperty(this, \"config\",\n    {\n      baseUrl: '',\n      header: (_header = {\n        'content-type': 'application/json;charset=UTF-8' }, _defineProperty(_header, \"content-type\",\n      'application/x-www-form-urlencoded'), _defineProperty(_header,\n      'cscb-token', '8631a2fc993b1963a8636a36edd7724a'), _defineProperty(_header,\n      'cscb-login-token', ''), _header),\n\n\n      method: 'POST',\n      dataType: 'json',\n      responseType: 'text' });_defineProperty(this, \"interceptor\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    {\n      /**\r\n       * @param {Request~requestCallback} cb - 请求之前拦截,接收一个函数（config, cancel）=> {return config}。第一个参数为全局config,第二个参数为函数，调用则取消本次请求。\r\n       */\n      request: function request(cb) {\n        if (cb) {\n          _this.requestBeforeFun = cb;\n        }\n      },\n      /**\r\n          * @param {Request~responseCallback} cb 响应拦截器，对响应数据做点什么\r\n          * @param {Request~responseErrCallback} ecb 响应拦截器，对响应错误做点什么\r\n          */\n      response: function response(cb, ecb) {\n        if (cb && ecb) {\n          _this.requestComFun = cb;\n          _this.requestComFail = ecb;\n        }\n      } });}_createClass(Request, [{ key: \"requestBeforeFun\", value: function requestBeforeFun(\n\n    config) {\n      return config;\n    } }, { key: \"requestComFun\", value: function requestComFun(\n    response) {\n      return response;\n    } }, { key: \"requestComFail\", value: function requestComFail(\n    response) {\n      return response;\n    }\n    /**\r\n       * 自定义验证器，如果返回true 则进入响应拦截器的响应成功函数(resolve)，否则进入响应拦截器的响应错误函数(reject)\r\n       * @param { Object } response - 请求响应体（只读）\r\n       * @return { Boolean } 如果为true,则 resolve, 否则 reject\r\n       */ }, { key: \"validateStatus\", value: function validateStatus(\n    response) {\n      return response.statusCode === 200;\n    }\n    /**\r\n       * @Function\r\n       * @param {Request~setConfigCallback} f - 设置全局默认配置\r\n       */ }, { key: \"setConfig\", value: function setConfig(\n    f) {\n      this.config = f(this.config);\n    }\n    /**\r\n       * @Function\r\n       * @param {Object} options - 请求配置项\r\n       * @prop {String} options.url - 请求路径\r\n       * @prop {Object} options.data - 请求参数\r\n       * @prop {Object} [options.responseType = config.responseType] [text|arraybuffer] - 响应的数据类型\r\n       * @prop {Object} [options.dataType = config.dataType] - 如果设为 json，会尝试对返回的数据做一次 JSON.parse\r\n       * @prop {Object} [options.header = config.header] - 请求header\r\n       * @prop {Object} [options.method = config.method] - 请求方法\r\n       * @returns {Promise<unknown>}\r\n       */ }, { key: \"request\", value: function () {var _request = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee() {var _this2 = this;var options,_args = arguments;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n                options.baseUrl = this.config.baseUrl;\n                options.dataType = options.dataType || this.config.dataType;\n                options.responseType = options.responseType || this.config.responseType;\n                options.url = options.url || '';\n                options.data = options.data || {};\n                options.params = options.params || {};\n                options.header = options.header || this.config.header;\n                options.method = options.method || this.config.method;return _context.abrupt(\"return\",\n                new Promise(function (resolve, reject) {\n                  var next = true;\n                  var handleRe = {};\n                  options.complete = function (response) {\n                    response.config = handleRe;\n                    if (_this2.validateStatus(response)) {// 成功\n                      response = _this2.requestComFun(response);\n                      resolve(response);\n                    } else {\n                      response = _this2.requestComFail(response);\n                      reject(response);\n                    }\n                  };\n                  var cancel = function cancel() {var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'handle cancel';var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options;\n                    var err = {\n                      errMsg: t,\n                      config: config };\n\n                    reject(err);\n                    next = false;\n                  };\n                  handleRe = _objectSpread({}, _this2.requestBeforeFun(options, cancel));\n                  var _config = _objectSpread({}, handleRe);\n                  if (!next) return;\n                  var mergeUrl = Request.posUrl(options.url) ? options.url : options.baseUrl + options.url;\n                  if (JSON.stringify(options.params) !== '{}') {\n                    var paramsH = Request.addQueryString(options.params);\n                    mergeUrl += mergeUrl.indexOf('?') === -1 ? \"?\".concat(paramsH) : \"&\".concat(paramsH);\n                  }\n                  _config.url = mergeUrl;\n                  uni.request(_config);\n                }));case 10:case \"end\":return _context.stop();}}}, _callee, this);}));function request() {return _request.apply(this, arguments);}return request;}() }, { key: \"get\", value: function get(\n\n    url) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.request(_objectSpread({\n        url: url,\n        method: 'GET' },\n      options));\n\n    } }, { key: \"post\", value: function post(\n    url, data) {var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(_objectSpread({\n        url: url,\n        data: data,\n        method: 'POST' },\n      options));\n\n    } }, { key: \"put\", value: function put(\n\n    url, data) {var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(_objectSpread({\n        url: url,\n        data: data,\n        method: 'PUT' },\n      options));\n\n    } }, { key: \"delete\", value: function _delete(\n\n\n\n    url, data) {var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(_objectSpread({\n        url: url,\n        data: data,\n        method: 'DELETE' },\n      options));\n\n    } }, { key: \"connect\", value: function connect(\n\n\n    url, data) {var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(_objectSpread({\n        url: url,\n        data: data,\n        method: 'CONNECT' },\n      options));\n\n    } }, { key: \"head\", value: function head(\n\n\n    url, data) {var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(_objectSpread({\n        url: url,\n        data: data,\n        method: 'HEAD' },\n      options));\n\n    } }, { key: \"options\", value: function options(\n\n\n    url, data) {var _options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(_objectSpread({\n        url: url,\n        data: data,\n        method: 'OPTIONS' },\n      _options));\n\n    } }, { key: \"trace\", value: function trace(\n\n\n    url, data) {var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.request(_objectSpread({\n        url: url,\n        data: data,\n        method: 'TRACE' },\n      options));\n\n    } }, { key: \"upload\", value: function upload(\n\n    url, _ref)\n\n\n\n\n\n\n\n\n\n\n    {var _this3 = this;var files = _ref.files,filePath = _ref.filePath,name = _ref.name,header = _ref.header,formData = _ref.formData;\n      return new Promise(function (resolve, reject) {\n        var next = true;\n        var handleRe = {};\n        var pubConfig = {\n          baseUrl: _this3.config.baseUrl,\n          url: url,\n\n          files: files,\n\n\n\n\n          filePath: filePath,\n          method: 'UPLOAD',\n          name: name,\n          header: header || _this3.config.header,\n          formData: formData,\n          complete: function complete(response) {\n            response.config = handleRe;\n            if (response.statusCode === 200) {// 成功\n              response = _this3.requestComFun(response);\n              resolve(response);\n            } else {\n              response = _this3.requestComFail(response);\n              reject(response);\n            }\n          } };\n\n        var cancel = function cancel() {var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'handle cancel';var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pubConfig;\n          var err = {\n            errMsg: t,\n            config: config };\n\n          reject(err);\n          next = false;\n        };\n        handleRe = _objectSpread({}, _this3.requestBeforeFun(pubConfig, cancel));\n        var _config = _objectSpread({}, handleRe);\n        if (!next) return;\n        _config.url = Request.posUrl(url) ? url : _this3.config.baseUrl + url;\n        uni.uploadFile(_config);\n      });\n    } }], [{ key: \"posUrl\", value: function posUrl(url) {/* 判断url是否为绝对路径 */return /(http|https):\\/\\/([\\w.]+\\/?)\\S*/.test(url);} }, { key: \"addQueryString\", value: function addQueryString(params) {var paramsData = '';Object.keys(params).forEach(function (key) {paramsData += key + '=' + params[key] + '&';});return paramsData.substring(0, paramsData.length - 1);} /**\r\n                                                                                                                                                                                                                                                                                                                                                                            * @property {Function} request 请求拦截器\r\n                                                                                                                                                                                                                                                                                                                                                                            * @property {Function} response 响应拦截器\r\n                                                                                                                                                                                                                                                                                                                                                                            * @type {{request: Request.interceptor.request, response: Request.interceptor.response}}\r\n                                                                                                                                                                                                                                                                                                                                                                            */ }]);return Request;}(); /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                        * setConfig回调\r\n                                                                                                                                                                                                                                                                                                                                                                                                        * @return {Object} - 返回操作后的config\r\n                                                                                                                                                                                                                                                                                                                                                                                                        * @callback Request~setConfigCallback\r\n                                                                                                                                                                                                                                                                                                                                                                                                        * @param {Object} config - 全局默认config\r\n                                                                                                                                                                                                                                                                                                                                                                                                        */ /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                            * 请求拦截器回调\r\n                                                                                                                                                                                                                                                                                                                                                                                                            * @return {Object} - 返回操作后的config\r\n                                                                                                                                                                                                                                                                                                                                                                                                            * @callback Request~requestCallback\r\n                                                                                                                                                                                                                                                                                                                                                                                                            * @param {Object} config - 全局config\r\n                                                                                                                                                                                                                                                                                                                                                                                                            * @param {Function} [cancel] - 取消请求钩子，调用会取消本次请求\r\n                                                                                                                                                                                                                                                                                                                                                                                                            */ /**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                * 响应拦截器回调\r\n                                                                                                                                                                                                                                                                                                                                                                                                                * @return {Object} - 返回操作后的response\r\n                                                                                                                                                                                                                                                                                                                                                                                                                * @callback Request~responseCallback\r\n                                                                                                                                                                                                                                                                                                                                                                                                                * @param {Object} response - 请求结果 response\r\n                                                                                                                                                                                                                                                                                                                                                                                                                */\n/**\r\n                                                                                                                                                                                                                                                                                                                                                                                                                    * 响应错误拦截器回调\r\n                                                                                                                                                                                                                                                                                                                                                                                                                    * @return {Object} - 返回操作后的response\r\n                                                                                                                                                                                                                                                                                                                                                                                                                    * @callback Request~responseErrCallback\r\n                                                                                                                                                                                                                                                                                                                                                                                                                    * @param {Object} response - 请求结果 response\r\n                                                                                                                                                                                                                                                                                                                                                                                                                    */exports.default = Request;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n");

/***/ }),

/***/ 18:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ 19);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDZCQUFxQiIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n");

/***/ }),

/***/ 188:
/*!****************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/weapp-qrcode.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) { //Core code comes from https://github.com/davidshimjs/qrcodejs\n\nvar QRCode;\n\n(function () {\n  /**\n                   * Get the type by string length\n                   * \n                   * @private\n                   * @param {String} sText\n                   * @param {Number} nCorrectLevel\n                   * @return {Number} type\n                   */\n  function _getTypeNumber(sText, nCorrectLevel) {\n    var nType = 1;\n    var length = _getUTF8Length(sText);\n\n    for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {\n      var nLimit = 0;\n\n      switch (nCorrectLevel) {\n        case QRErrorCorrectLevel.L:\n          nLimit = QRCodeLimitLength[i][0];\n          break;\n        case QRErrorCorrectLevel.M:\n          nLimit = QRCodeLimitLength[i][1];\n          break;\n        case QRErrorCorrectLevel.Q:\n          nLimit = QRCodeLimitLength[i][2];\n          break;\n        case QRErrorCorrectLevel.H:\n          nLimit = QRCodeLimitLength[i][3];\n          break;}\n\n\n      if (length <= nLimit) {\n        break;\n      } else {\n        nType++;\n      }\n    }\n\n    if (nType > QRCodeLimitLength.length) {\n      throw new Error(\"Too long data\");\n    }\n\n    return nType;\n  }\n\n  function _getUTF8Length(sText) {\n    var replacedText = encodeURI(sText).toString().replace(/\\%[0-9a-fA-F]{2}/g, 'a');\n    return replacedText.length + (replacedText.length != sText ? 3 : 0);\n  }\n\n  function QR8bitByte(data) {\n    this.mode = QRMode.MODE_8BIT_BYTE;\n    this.data = data;\n    this.parsedData = [];\n\n    // Added to support UTF-8 Characters\n    for (var i = 0, l = this.data.length; i < l; i++) {\n      var byteArray = [];\n      var code = this.data.charCodeAt(i);\n\n      if (code > 0x10000) {\n        byteArray[0] = 0xF0 | (code & 0x1C0000) >>> 18;\n        byteArray[1] = 0x80 | (code & 0x3F000) >>> 12;\n        byteArray[2] = 0x80 | (code & 0xFC0) >>> 6;\n        byteArray[3] = 0x80 | code & 0x3F;\n      } else if (code > 0x800) {\n        byteArray[0] = 0xE0 | (code & 0xF000) >>> 12;\n        byteArray[1] = 0x80 | (code & 0xFC0) >>> 6;\n        byteArray[2] = 0x80 | code & 0x3F;\n      } else if (code > 0x80) {\n        byteArray[0] = 0xC0 | (code & 0x7C0) >>> 6;\n        byteArray[1] = 0x80 | code & 0x3F;\n      } else {\n        byteArray[0] = code;\n      }\n\n      this.parsedData.push(byteArray);\n    }\n\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n    if (this.parsedData.length != this.data.length) {\n      this.parsedData.unshift(191);\n      this.parsedData.unshift(187);\n      this.parsedData.unshift(239);\n    }\n  }\n\n  QR8bitByte.prototype = {\n    getLength: function getLength(buffer) {\n      return this.parsedData.length;\n    },\n    write: function write(buffer) {\n      for (var i = 0, l = this.parsedData.length; i < l; i++) {\n        buffer.put(this.parsedData[i], 8);\n      }\n    } };\n\n\n\n  // QRCodeModel\n  function QRCodeModel(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n    this.modules = null;\n    this.moduleCount = 0;\n    this.dataCache = null;\n    this.dataList = [];\n  }\n  QRCodeModel.prototype = {\n    addData: function addData(data) {var newData = new QR8bitByte(data);this.dataList.push(newData);this.dataCache = null;}, isDark: function isDark(row, col) {\n      if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {throw new Error(row + \",\" + col);}\n      return this.modules[row][col];\n    }, getModuleCount: function getModuleCount() {return this.moduleCount;}, make: function make() {this.makeImpl(false, this.getBestMaskPattern());}, makeImpl: function makeImpl(test, maskPattern) {\n      this.moduleCount = this.typeNumber * 4 + 17;this.modules = new Array(this.moduleCount);for (var row = 0; row < this.moduleCount; row++) {this.modules[row] = new Array(this.moduleCount);for (var col = 0; col < this.moduleCount; col++) {this.modules[row][col] = null;}}\n      this.setupPositionProbePattern(0, 0);this.setupPositionProbePattern(this.moduleCount - 7, 0);this.setupPositionProbePattern(0, this.moduleCount - 7);this.setupPositionAdjustPattern();this.setupTimingPattern();this.setupTypeInfo(test, maskPattern);if (this.typeNumber >= 7) {this.setupTypeNumber(test);}\n      if (this.dataCache == null) {this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);}\n      this.mapData(this.dataCache, maskPattern);\n    }, setupPositionProbePattern: function setupPositionProbePattern(row, col) {for (var r = -1; r <= 7; r++) {if (row + r <= -1 || this.moduleCount <= row + r) continue;for (var c = -1; c <= 7; c++) {if (col + c <= -1 || this.moduleCount <= col + c) continue;if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {this.modules[row + r][col + c] = true;} else {this.modules[row + r][col + c] = false;}}}}, getBestMaskPattern: function getBestMaskPattern() {\n      var minLostPoint = 0;var pattern = 0;for (var i = 0; i < 8; i++) {this.makeImpl(true, i);var lostPoint = QRUtil.getLostPoint(this);if (i == 0 || minLostPoint > lostPoint) {minLostPoint = lostPoint;pattern = i;}}\n      return pattern;\n    }, createMovieClip: function createMovieClip(target_mc, instance_name, depth) {\n      var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);var cs = 1;this.make();for (var row = 0; row < this.modules.length; row++) {var y = row * cs;for (var col = 0; col < this.modules[row].length; col++) {var x = col * cs;var dark = this.modules[row][col];if (dark) {qr_mc.beginFill(0, 100);qr_mc.moveTo(x, y);qr_mc.lineTo(x + cs, y);qr_mc.lineTo(x + cs, y + cs);qr_mc.lineTo(x, y + cs);qr_mc.endFill();}}}\n      return qr_mc;\n    }, setupTimingPattern: function setupTimingPattern() {\n      for (var r = 8; r < this.moduleCount - 8; r++) {\n        if (this.modules[r][6] != null) {continue;}\n        this.modules[r][6] = r % 2 == 0;\n      }\n      for (var c = 8; c < this.moduleCount - 8; c++) {\n        if (this.modules[6][c] != null) {continue;}\n        this.modules[6][c] = c % 2 == 0;\n      }\n    }, setupPositionAdjustPattern: function setupPositionAdjustPattern() {\n      var pos = QRUtil.getPatternPosition(this.typeNumber);for (var i = 0; i < pos.length; i++) {\n        for (var j = 0; j < pos.length; j++) {\n          var row = pos[i];var col = pos[j];if (this.modules[row][col] != null) {continue;}\n          for (var r = -2; r <= 2; r++) {for (var c = -2; c <= 2; c++) {if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {this.modules[row + r][col + c] = true;} else {this.modules[row + r][col + c] = false;}}}\n        }\n      }\n    }, setupTypeNumber: function setupTypeNumber(test) {\n      var bits = QRUtil.getBCHTypeNumber(this.typeNumber);for (var i = 0; i < 18; i++) {var mod = !test && (bits >> i & 1) == 1;this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;}\n      for (var i = 0; i < 18; i++) {var mod = !test && (bits >> i & 1) == 1;this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;}\n    }, setupTypeInfo: function setupTypeInfo(test, maskPattern) {\n      var data = this.errorCorrectLevel << 3 | maskPattern;var bits = QRUtil.getBCHTypeInfo(data);for (var i = 0; i < 15; i++) {var mod = !test && (bits >> i & 1) == 1;if (i < 6) {this.modules[i][8] = mod;} else if (i < 8) {this.modules[i + 1][8] = mod;} else {this.modules[this.moduleCount - 15 + i][8] = mod;}}\n      for (var i = 0; i < 15; i++) {var mod = !test && (bits >> i & 1) == 1;if (i < 8) {this.modules[8][this.moduleCount - i - 1] = mod;} else if (i < 9) {this.modules[8][15 - i - 1 + 1] = mod;} else {this.modules[8][15 - i - 1] = mod;}}\n      this.modules[this.moduleCount - 8][8] = !test;\n    }, mapData: function mapData(data, maskPattern) {\n      var inc = -1;var row = this.moduleCount - 1;var bitIndex = 7;var byteIndex = 0;for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n        if (col == 6) col--;while (true) {\n          for (var c = 0; c < 2; c++) {\n            if (this.modules[row][col - c] == null) {\n              var dark = false;if (byteIndex < data.length) {dark = (data[byteIndex] >>> bitIndex & 1) == 1;}\n              var mask = QRUtil.getMask(maskPattern, row, col - c);if (mask) {dark = !dark;}\n              this.modules[row][col - c] = dark;bitIndex--;if (bitIndex == -1) {byteIndex++;bitIndex = 7;}\n            }\n          }\n          row += inc;if (row < 0 || this.moduleCount <= row) {row -= inc;inc = -inc;break;}\n        }\n      }\n    } };\n\n  QRCodeModel.PAD0 = 0xEC;\n  QRCodeModel.PAD1 = 0x11;\n  QRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {\n    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);var buffer = new QRBitBuffer();for (var i = 0; i < dataList.length; i++) {var data = dataList[i];buffer.put(data.mode, 4);buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));data.write(buffer);}\n    var totalDataCount = 0;for (var i = 0; i < rsBlocks.length; i++) {totalDataCount += rsBlocks[i].dataCount;}\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error(\"code length overflow. (\" +\n      buffer.getLengthInBits() +\n      \">\" +\n      totalDataCount * 8 +\n      \")\");\n    }\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {buffer.put(0, 4);}\n    while (buffer.getLengthInBits() % 8 != 0) {buffer.putBit(false);}\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {break;}\n      buffer.put(QRCodeModel.PAD0, 8);if (buffer.getLengthInBits() >= totalDataCount * 8) {break;}\n      buffer.put(QRCodeModel.PAD1, 8);\n    }\n    return QRCodeModel.createBytes(buffer, rsBlocks);\n  };\n  QRCodeModel.createBytes = function (buffer, rsBlocks) {\n    var offset = 0;var maxDcCount = 0;var maxEcCount = 0;var dcdata = new Array(rsBlocks.length);var ecdata = new Array(rsBlocks.length);for (var r = 0; r < rsBlocks.length; r++) {\n      var dcCount = rsBlocks[r].dataCount;var ecCount = rsBlocks[r].totalCount - dcCount;maxDcCount = Math.max(maxDcCount, dcCount);maxEcCount = Math.max(maxEcCount, ecCount);dcdata[r] = new Array(dcCount);for (var i = 0; i < dcdata[r].length; i++) {dcdata[r][i] = 0xff & buffer.buffer[i + offset];}\n      offset += dcCount;var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);var modPoly = rawPoly.mod(rsPoly);ecdata[r] = new Array(rsPoly.getLength() - 1);for (var i = 0; i < ecdata[r].length; i++) {var modIndex = i + modPoly.getLength() - ecdata[r].length;ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;}\n    }\n    var totalCodeCount = 0;for (var i = 0; i < rsBlocks.length; i++) {totalCodeCount += rsBlocks[i].totalCount;}\n    var data = new Array(totalCodeCount);var index = 0;for (var i = 0; i < maxDcCount; i++) {for (var r = 0; r < rsBlocks.length; r++) {if (i < dcdata[r].length) {data[index++] = dcdata[r][i];}}}\n    for (var i = 0; i < maxEcCount; i++) {for (var r = 0; r < rsBlocks.length; r++) {if (i < ecdata[r].length) {data[index++] = ecdata[r][i];}}}\n    return data;\n  };\n  var QRMode = { MODE_NUMBER: 1 << 0, MODE_ALPHA_NUM: 1 << 1, MODE_8BIT_BYTE: 1 << 2, MODE_KANJI: 1 << 3 };\n  var QRErrorCorrectLevel = { L: 1, M: 0, Q: 3, H: 2 };\n  var QRMaskPattern = { PATTERN000: 0, PATTERN001: 1, PATTERN010: 2, PATTERN011: 3, PATTERN100: 4, PATTERN101: 5, PATTERN110: 6, PATTERN111: 7 };\n  var QRUtil = {\n    PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]], G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0, G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0, G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1, getBCHTypeInfo: function getBCHTypeInfo(data) {\n      var d = data << 10;while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);}\n      return (data << 10 | d) ^ QRUtil.G15_MASK;\n    }, getBCHTypeNumber: function getBCHTypeNumber(data) {\n      var d = data << 12;while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);}\n      return data << 12 | d;\n    }, getBCHDigit: function getBCHDigit(data) {\n      var digit = 0;while (data != 0) {digit++;data >>>= 1;}\n      return digit;\n    }, getPatternPosition: function getPatternPosition(typeNumber) {return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];}, getMask: function getMask(maskPattern, i, j) {switch (maskPattern) {case QRMaskPattern.PATTERN000:return (i + j) % 2 == 0;case QRMaskPattern.PATTERN001:return i % 2 == 0;case QRMaskPattern.PATTERN010:return j % 3 == 0;case QRMaskPattern.PATTERN011:return (i + j) % 3 == 0;case QRMaskPattern.PATTERN100:return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;case QRMaskPattern.PATTERN101:return i * j % 2 + i * j % 3 == 0;case QRMaskPattern.PATTERN110:return (i * j % 2 + i * j % 3) % 2 == 0;case QRMaskPattern.PATTERN111:return (i * j % 3 + (i + j) % 2) % 2 == 0;default:throw new Error(\"bad maskPattern:\" + maskPattern);}}, getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {\n      var a = new QRPolynomial([1], 0);for (var i = 0; i < errorCorrectLength; i++) {a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));}\n      return a;\n    }, getLengthInBits: function getLengthInBits(mode, type) {if (1 <= type && type < 10) {switch (mode) {case QRMode.MODE_NUMBER:return 10;case QRMode.MODE_ALPHA_NUM:return 9;case QRMode.MODE_8BIT_BYTE:return 8;case QRMode.MODE_KANJI:return 8;default:throw new Error(\"mode:\" + mode);}} else if (type < 27) {switch (mode) {case QRMode.MODE_NUMBER:return 12;case QRMode.MODE_ALPHA_NUM:return 11;case QRMode.MODE_8BIT_BYTE:return 16;case QRMode.MODE_KANJI:return 10;default:throw new Error(\"mode:\" + mode);}} else if (type < 41) {switch (mode) {case QRMode.MODE_NUMBER:return 14;case QRMode.MODE_ALPHA_NUM:return 13;case QRMode.MODE_8BIT_BYTE:return 16;case QRMode.MODE_KANJI:return 12;default:throw new Error(\"mode:\" + mode);}} else {throw new Error(\"type:\" + type);}}, getLostPoint: function getLostPoint(qrCode) {\n      var moduleCount = qrCode.getModuleCount();var lostPoint = 0;for (var row = 0; row < moduleCount; row++) {\n        for (var col = 0; col < moduleCount; col++) {\n          var sameCount = 0;var dark = qrCode.isDark(row, col);for (var r = -1; r <= 1; r++) {\n            if (row + r < 0 || moduleCount <= row + r) {continue;}\n            for (var c = -1; c <= 1; c++) {\n              if (col + c < 0 || moduleCount <= col + c) {continue;}\n              if (r == 0 && c == 0) {continue;}\n              if (dark == qrCode.isDark(row + r, col + c)) {sameCount++;}\n            }\n          }\n          if (sameCount > 5) {lostPoint += 3 + sameCount - 5;}\n        }\n      }\n      for (var row = 0; row < moduleCount - 1; row++) {for (var col = 0; col < moduleCount - 1; col++) {var count = 0;if (qrCode.isDark(row, col)) count++;if (qrCode.isDark(row + 1, col)) count++;if (qrCode.isDark(row, col + 1)) count++;if (qrCode.isDark(row + 1, col + 1)) count++;if (count == 0 || count == 4) {lostPoint += 3;}}}\n      for (var row = 0; row < moduleCount; row++) {for (var col = 0; col < moduleCount - 6; col++) {if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {lostPoint += 40;}}}\n      for (var col = 0; col < moduleCount; col++) {for (var row = 0; row < moduleCount - 6; row++) {if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {lostPoint += 40;}}}\n      var darkCount = 0;for (var col = 0; col < moduleCount; col++) {for (var row = 0; row < moduleCount; row++) {if (qrCode.isDark(row, col)) {darkCount++;}}}\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;lostPoint += ratio * 10;return lostPoint;\n    } };\n\n  var QRMath = {\n    glog: function glog(n) {\n      if (n < 1) {throw new Error(\"glog(\" + n + \")\");}\n      return QRMath.LOG_TABLE[n];\n    }, gexp: function gexp(n) {\n      while (n < 0) {n += 255;}\n      while (n >= 256) {n -= 255;}\n      return QRMath.EXP_TABLE[n];\n    }, EXP_TABLE: new Array(256), LOG_TABLE: new Array(256) };\n  for (var i = 0; i < 8; i++) {QRMath.EXP_TABLE[i] = 1 << i;}\n  for (var i = 8; i < 256; i++) {QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];}\n  for (var i = 0; i < 255; i++) {QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;}\n  function QRPolynomial(num, shift) {\n    if (num.length == undefined) {throw new Error(num.length + \"/\" + shift);}\n    var offset = 0;while (offset < num.length && num[offset] == 0) {offset++;}\n    this.num = new Array(num.length - offset + shift);for (var i = 0; i < num.length - offset; i++) {this.num[i] = num[i + offset];}\n  }\n  QRPolynomial.prototype = {\n    get: function get(index) {return this.num[index];}, getLength: function getLength() {return this.num.length;}, multiply: function multiply(e) {\n      var num = new Array(this.getLength() + e.getLength() - 1);for (var i = 0; i < this.getLength(); i++) {for (var j = 0; j < e.getLength(); j++) {num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));}}\n      return new QRPolynomial(num, 0);\n    }, mod: function mod(e) {\n      if (this.getLength() - e.getLength() < 0) {return this;}\n      var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));var num = new Array(this.getLength());for (var i = 0; i < this.getLength(); i++) {num[i] = this.get(i);}\n      for (var i = 0; i < e.getLength(); i++) {num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);}\n      return new QRPolynomial(num, 0).mod(e);\n    } };\n\n  function QRRSBlock(totalCount, dataCount) {this.totalCount = totalCount;this.dataCount = dataCount;}\n  QRRSBlock.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n  QRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);if (rsBlock == undefined) {throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);}\n    var length = rsBlock.length / 3;var list = [];for (var i = 0; i < length; i++) {var count = rsBlock[i * 3 + 0];var totalCount = rsBlock[i * 3 + 1];var dataCount = rsBlock[i * 3 + 2];for (var j = 0; j < count; j++) {list.push(new QRRSBlock(totalCount, dataCount));}}\n    return list;\n  };\n  QRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {switch (errorCorrectLevel) {case QRErrorCorrectLevel.L:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];case QRErrorCorrectLevel.M:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];case QRErrorCorrectLevel.Q:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];case QRErrorCorrectLevel.H:return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];default:return undefined;}};\n  function QRBitBuffer() {this.buffer = [];this.length = 0;}\n  QRBitBuffer.prototype = {\n    get: function get(index) {var bufIndex = Math.floor(index / 8);return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;}, put: function put(num, length) {for (var i = 0; i < length; i++) {this.putBit((num >>> length - i - 1 & 1) == 1);}}, getLengthInBits: function getLengthInBits() {return this.length;}, putBit: function putBit(bit) {\n      var bufIndex = Math.floor(this.length / 8);if (this.buffer.length <= bufIndex) {this.buffer.push(0);}\n      if (bit) {this.buffer[bufIndex] |= 0x80 >>> this.length % 8;}\n      this.length++;\n    } };\n\n  var QRCodeLimitLength = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137], [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511], [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658], [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842], [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051], [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273]];\n\n  // QRCode object\n  QRCode = function QRCode(canvasId, vOption) {\n    this._htOption = {\n      width: 256,\n      height: 256,\n      typeNumber: 4,\n      colorDark: \"#000000\",\n      colorLight: \"#ffffff\",\n      correctLevel: QRErrorCorrectLevel.H };\n\n\n    if (typeof vOption === 'string') {\n      vOption = {\n        text: vOption };\n\n    }\n\n    // Overwrites options\n    if (vOption) {\n      for (var i in vOption) {\n        this._htOption[i] = vOption[i];\n      }\n    }\n\n    this._oQRCode = null;\n    this.canvasId = canvasId;\n\n    if (this._htOption.text && this.canvasId) {\n      this.makeCode(this._htOption.text);\n    }\n  };\n\n  QRCode.prototype.makeCode = function (sText) {\n    this._oQRCode = new QRCodeModel(_getTypeNumber(sText, this._htOption.correctLevel), this._htOption.correctLevel);\n    this._oQRCode.addData(sText);\n    this._oQRCode.make();\n    this.makeImage();\n  };\n\n  QRCode.prototype.makeImage = function () {\n    var _oContext;\n    if (this._htOption.usingIn) {\n      _oContext = wx.createCanvasContext(this.canvasId, this._htOption.usingIn);\n    } else\n    {\n      _oContext = wx.createCanvasContext(this.canvasId);\n    }\n    var _htOption = this._htOption;\n    var oQRCode = this._oQRCode;\n\n    var nCount = oQRCode.getModuleCount();\n    var nWidth = _htOption.width / nCount;\n    var nHeight = _htOption.height / nCount;\n    var nRoundedWidth = Math.round(nWidth);\n    var nRoundedHeight = Math.round(nHeight);\n\n    if (_htOption.image && _htOption.image != '') {\n      _oContext.drawImage(_htOption.image, 0, 0, _htOption.width, _htOption.height);\n    }\n\n    for (var row = 0; row < nCount; row++) {\n      for (var col = 0; col < nCount; col++) {\n        var bIsDark = oQRCode.isDark(row, col);\n        var nLeft = col * nWidth;\n        var nTop = row * nHeight;\n        _oContext.setStrokeStyle(bIsDark ? _htOption.colorDark : _htOption.colorLight);\n        // _oContext.setStrokeStyle('yellow')\n        _oContext.setLineWidth(1);\n        _oContext.setFillStyle(bIsDark ? _htOption.colorDark : _htOption.colorLight);\n        // _oContext.setFillStyle('red')\n        // if (bIsDark) {\n        _oContext.fillRect(nLeft, nTop, nWidth, nHeight);\n        // }\n\n        // 안티 앨리어싱 방지 처리\n        // if (bIsDark) {\n        _oContext.strokeRect(\n        Math.floor(nLeft) + 0.5,\n        Math.floor(nTop) + 0.5,\n        nRoundedWidth,\n        nRoundedHeight);\n\n\n        _oContext.strokeRect(\n        Math.ceil(nLeft) - 0.5,\n        Math.ceil(nTop) - 0.5,\n        nRoundedWidth,\n        nRoundedHeight);\n\n        // }\n        // _oContext.fillRect(\n        //     Math.floor(nLeft) + 0.5,\n        //     Math.floor(nTop) + 0.5,\n        //     nRoundedWidth,\n        //     nRoundedHeight\n        // );\n        // _oContext.fillRect(\n        //     Math.ceil(nLeft) - 0.5,\n        //     Math.ceil(nTop) - 0.5,\n        //     nRoundedWidth,\n        //     nRoundedHeight\n        // );\n        // _oContext.clearRect(\n        //     Math.floor(nLeft) + 0.5,\n        //     Math.floor(nTop) + 0.5,\n        //     nRoundedWidth,\n        //     nRoundedHeight\n        // );\n        // _oContext.clearRect(\n        //     Math.ceil(nLeft) - 0.5,\n        //     Math.ceil(nTop) - 0.5,\n        //     nRoundedWidth,\n        //     nRoundedHeight\n        // );\n      }\n    }\n\n    _oContext.draw();\n  };\n\n  // 保存为图片，将临时路径传给回调\n  QRCode.prototype.exportImage = function (callback) {\n    if (!callback) {\n      return;\n    }\n    wx.canvasToTempFilePath({\n      x: 0,\n      y: 0,\n      width: this._htOption.width,\n      height: this._htOption.height,\n      destWidth: this._htOption.width,\n      destHeight: this._htOption.height,\n      canvasId: this.canvasId,\n      success: function success(res) {\n        console.log(__f__(res.tempFilePath, \" at utils\\\\weapp-qrcode.js:415\"));\n        callback(res.tempFilePath);\n      } });\n\n  };\n\n  QRCode.CorrectLevel = QRErrorCorrectLevel;\n})();\n\nmodule.exports = QRCode;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 4)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///188\n");

/***/ }),

/***/ 19:
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(/*! ./runtime */ 20);\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLG1CQUFXOztBQUVwQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSIsImZpbGUiOiIxOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLy8gVGhpcyBtZXRob2Qgb2Ygb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0IG5lZWRzIHRvIGJlXG4vLyBrZXB0IGlkZW50aWNhbCB0byB0aGUgd2F5IGl0IGlzIG9idGFpbmVkIGluIHJ1bnRpbWUuanNcbnZhciBnID0gKGZ1bmN0aW9uKCkge1xuICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZik7XG59KSgpIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcblxuLy8gVXNlIGBnZXRPd25Qcm9wZXJ0eU5hbWVzYCBiZWNhdXNlIG5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCBjYWxsaW5nXG4vLyBgaGFzT3duUHJvcGVydHlgIG9uIHRoZSBnbG9iYWwgYHNlbGZgIG9iamVjdCBpbiBhIHdvcmtlci4gU2VlICMxODMuXG52YXIgaGFkUnVudGltZSA9IGcucmVnZW5lcmF0b3JSdW50aW1lICYmXG4gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGcpLmluZGV4T2YoXCJyZWdlbmVyYXRvclJ1bnRpbWVcIikgPj0gMDtcblxuLy8gU2F2ZSB0aGUgb2xkIHJlZ2VuZXJhdG9yUnVudGltZSBpbiBjYXNlIGl0IG5lZWRzIHRvIGJlIHJlc3RvcmVkIGxhdGVyLlxudmFyIG9sZFJ1bnRpbWUgPSBoYWRSdW50aW1lICYmIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuXG4vLyBGb3JjZSByZWV2YWx1dGF0aW9uIG9mIHJ1bnRpbWUuanMuXG5nLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9ydW50aW1lXCIpO1xuXG5pZiAoaGFkUnVudGltZSkge1xuICAvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBydW50aW1lLlxuICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IG9sZFJ1bnRpbWU7XG59IGVsc2Uge1xuICAvLyBSZW1vdmUgdGhlIGdsb2JhbCBwcm9wZXJ0eSBhZGRlZCBieSBydW50aW1lLmpzLlxuICB0cnkge1xuICAgIGRlbGV0ZSBnLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgfSBjYXRjaChlKSB7XG4gICAgZy5yZWdlbmVyYXRvclJ1bnRpbWUgPSB1bmRlZmluZWQ7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///19\n");

/***/ }),

/***/ 2:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n");

/***/ }),

/***/ 20:
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLEtBQUs7QUFDTCxjQUFjO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQ7QUFDekQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQSx3Q0FBd0MsV0FBVztBQUNuRDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MsY0FBYztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDLGtCQUFrQjtBQUNuRDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsaUJBQWlCO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRUEsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7QUFDQTtBQUNBOztBQUVBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbiEoZnVuY3Rpb24oZ2xvYmFsKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBPcCA9IE9iamVjdC5wcm90b3R5cGU7XG4gIHZhciBoYXNPd24gPSBPcC5oYXNPd25Qcm9wZXJ0eTtcbiAgdmFyIHVuZGVmaW5lZDsgLy8gTW9yZSBjb21wcmVzc2libGUgdGhhbiB2b2lkIDAuXG4gIHZhciAkU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiID8gU3ltYm9sIDoge307XG4gIHZhciBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCI7XG4gIHZhciBhc3luY0l0ZXJhdG9yU3ltYm9sID0gJFN5bWJvbC5hc3luY0l0ZXJhdG9yIHx8IFwiQEBhc3luY0l0ZXJhdG9yXCI7XG4gIHZhciB0b1N0cmluZ1RhZ1N5bWJvbCA9ICRTeW1ib2wudG9TdHJpbmdUYWcgfHwgXCJAQHRvU3RyaW5nVGFnXCI7XG5cbiAgdmFyIGluTW9kdWxlID0gdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIjtcbiAgdmFyIHJ1bnRpbWUgPSBnbG9iYWwucmVnZW5lcmF0b3JSdW50aW1lO1xuICBpZiAocnVudGltZSkge1xuICAgIGlmIChpbk1vZHVsZSkge1xuICAgICAgLy8gSWYgcmVnZW5lcmF0b3JSdW50aW1lIGlzIGRlZmluZWQgZ2xvYmFsbHkgYW5kIHdlJ3JlIGluIGEgbW9kdWxlLFxuICAgICAgLy8gbWFrZSB0aGUgZXhwb3J0cyBvYmplY3QgaWRlbnRpY2FsIHRvIHJlZ2VuZXJhdG9yUnVudGltZS5cbiAgICAgIG1vZHVsZS5leHBvcnRzID0gcnVudGltZTtcbiAgICB9XG4gICAgLy8gRG9uJ3QgYm90aGVyIGV2YWx1YXRpbmcgdGhlIHJlc3Qgb2YgdGhpcyBmaWxlIGlmIHRoZSBydW50aW1lIHdhc1xuICAgIC8vIGFscmVhZHkgZGVmaW5lZCBnbG9iYWxseS5cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBEZWZpbmUgdGhlIHJ1bnRpbWUgZ2xvYmFsbHkgKGFzIGV4cGVjdGVkIGJ5IGdlbmVyYXRlZCBjb2RlKSBhcyBlaXRoZXJcbiAgLy8gbW9kdWxlLmV4cG9ydHMgKGlmIHdlJ3JlIGluIGEgbW9kdWxlKSBvciBhIG5ldywgZW1wdHkgb2JqZWN0LlxuICBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZSA9IGluTW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgOiB7fTtcblxuICBmdW5jdGlvbiB3cmFwKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gSWYgb3V0ZXJGbiBwcm92aWRlZCBhbmQgb3V0ZXJGbi5wcm90b3R5cGUgaXMgYSBHZW5lcmF0b3IsIHRoZW4gb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IuXG4gICAgdmFyIHByb3RvR2VuZXJhdG9yID0gb3V0ZXJGbiAmJiBvdXRlckZuLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IG91dGVyRm4gOiBHZW5lcmF0b3I7XG4gICAgdmFyIGdlbmVyYXRvciA9IE9iamVjdC5jcmVhdGUocHJvdG9HZW5lcmF0b3IucHJvdG90eXBlKTtcbiAgICB2YXIgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcblxuICAgIC8vIFRoZSAuX2ludm9rZSBtZXRob2QgdW5pZmllcyB0aGUgaW1wbGVtZW50YXRpb25zIG9mIHRoZSAubmV4dCxcbiAgICAvLyAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMuXG4gICAgZ2VuZXJhdG9yLl9pbnZva2UgPSBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGdlbmVyYXRvcjtcbiAgfVxuICBydW50aW1lLndyYXAgPSB3cmFwO1xuXG4gIC8vIFRyeS9jYXRjaCBoZWxwZXIgdG8gbWluaW1pemUgZGVvcHRpbWl6YXRpb25zLiBSZXR1cm5zIGEgY29tcGxldGlvblxuICAvLyByZWNvcmQgbGlrZSBjb250ZXh0LnRyeUVudHJpZXNbaV0uY29tcGxldGlvbi4gVGhpcyBpbnRlcmZhY2UgY291bGRcbiAgLy8gaGF2ZSBiZWVuIChhbmQgd2FzIHByZXZpb3VzbHkpIGRlc2lnbmVkIHRvIHRha2UgYSBjbG9zdXJlIHRvIGJlXG4gIC8vIGludm9rZWQgd2l0aG91dCBhcmd1bWVudHMsIGJ1dCBpbiBhbGwgdGhlIGNhc2VzIHdlIGNhcmUgYWJvdXQgd2VcbiAgLy8gYWxyZWFkeSBoYXZlIGFuIGV4aXN0aW5nIG1ldGhvZCB3ZSB3YW50IHRvIGNhbGwsIHNvIHRoZXJlJ3Mgbm8gbmVlZFxuICAvLyB0byBjcmVhdGUgYSBuZXcgZnVuY3Rpb24gb2JqZWN0LiBXZSBjYW4gZXZlbiBnZXQgYXdheSB3aXRoIGFzc3VtaW5nXG4gIC8vIHRoZSBtZXRob2QgdGFrZXMgZXhhY3RseSBvbmUgYXJndW1lbnQsIHNpbmNlIHRoYXQgaGFwcGVucyB0byBiZSB0cnVlXG4gIC8vIGluIGV2ZXJ5IGNhc2UsIHNvIHdlIGRvbid0IGhhdmUgdG8gdG91Y2ggdGhlIGFyZ3VtZW50cyBvYmplY3QuIFRoZVxuICAvLyBvbmx5IGFkZGl0aW9uYWwgYWxsb2NhdGlvbiByZXF1aXJlZCBpcyB0aGUgY29tcGxldGlvbiByZWNvcmQsIHdoaWNoXG4gIC8vIGhhcyBhIHN0YWJsZSBzaGFwZSBhbmQgc28gaG9wZWZ1bGx5IHNob3VsZCBiZSBjaGVhcCB0byBhbGxvY2F0ZS5cbiAgZnVuY3Rpb24gdHJ5Q2F0Y2goZm4sIG9iaiwgYXJnKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwibm9ybWFsXCIsIGFyZzogZm4uY2FsbChvYmosIGFyZykgfTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiB7IHR5cGU6IFwidGhyb3dcIiwgYXJnOiBlcnIgfTtcbiAgICB9XG4gIH1cblxuICB2YXIgR2VuU3RhdGVTdXNwZW5kZWRTdGFydCA9IFwic3VzcGVuZGVkU3RhcnRcIjtcbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkWWllbGQgPSBcInN1c3BlbmRlZFlpZWxkXCI7XG4gIHZhciBHZW5TdGF0ZUV4ZWN1dGluZyA9IFwiZXhlY3V0aW5nXCI7XG4gIHZhciBHZW5TdGF0ZUNvbXBsZXRlZCA9IFwiY29tcGxldGVkXCI7XG5cbiAgLy8gUmV0dXJuaW5nIHRoaXMgb2JqZWN0IGZyb20gdGhlIGlubmVyRm4gaGFzIHRoZSBzYW1lIGVmZmVjdCBhc1xuICAvLyBicmVha2luZyBvdXQgb2YgdGhlIGRpc3BhdGNoIHN3aXRjaCBzdGF0ZW1lbnQuXG4gIHZhciBDb250aW51ZVNlbnRpbmVsID0ge307XG5cbiAgLy8gRHVtbXkgY29uc3RydWN0b3IgZnVuY3Rpb25zIHRoYXQgd2UgdXNlIGFzIHRoZSAuY29uc3RydWN0b3IgYW5kXG4gIC8vIC5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgcHJvcGVydGllcyBmb3IgZnVuY3Rpb25zIHRoYXQgcmV0dXJuIEdlbmVyYXRvclxuICAvLyBvYmplY3RzLiBGb3IgZnVsbCBzcGVjIGNvbXBsaWFuY2UsIHlvdSBtYXkgd2lzaCB0byBjb25maWd1cmUgeW91clxuICAvLyBtaW5pZmllciBub3QgdG8gbWFuZ2xlIHRoZSBuYW1lcyBvZiB0aGVzZSB0d28gZnVuY3Rpb25zLlxuICBmdW5jdGlvbiBHZW5lcmF0b3IoKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvbigpIHt9XG4gIGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKCkge31cblxuICAvLyBUaGlzIGlzIGEgcG9seWZpbGwgZm9yICVJdGVyYXRvclByb3RvdHlwZSUgZm9yIGVudmlyb25tZW50cyB0aGF0XG4gIC8vIGRvbid0IG5hdGl2ZWx5IHN1cHBvcnQgaXQuXG4gIHZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuICBJdGVyYXRvclByb3RvdHlwZVtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgdmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICB2YXIgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIGlmIChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSAmJlxuICAgICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgIT09IE9wICYmXG4gICAgICBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpKSB7XG4gICAgLy8gVGhpcyBlbnZpcm9ubWVudCBoYXMgYSBuYXRpdmUgJUl0ZXJhdG9yUHJvdG90eXBlJTsgdXNlIGl0IGluc3RlYWRcbiAgICAvLyBvZiB0aGUgcG9seWZpbGwuXG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBOYXRpdmVJdGVyYXRvclByb3RvdHlwZTtcbiAgfVxuXG4gIHZhciBHcCA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLnByb3RvdHlwZSA9XG4gICAgR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHcC5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IEdlbmVyYXRvckZ1bmN0aW9uO1xuICBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZVt0b1N0cmluZ1RhZ1N5bWJvbF0gPVxuICAgIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuXG4gIC8vIEhlbHBlciBmb3IgZGVmaW5pbmcgdGhlIC5uZXh0LCAudGhyb3csIGFuZCAucmV0dXJuIG1ldGhvZHMgb2YgdGhlXG4gIC8vIEl0ZXJhdG9yIGludGVyZmFjZSBpbiB0ZXJtcyBvZiBhIHNpbmdsZSAuX2ludm9rZSBtZXRob2QuXG4gIGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhwcm90b3R5cGUpIHtcbiAgICBbXCJuZXh0XCIsIFwidGhyb3dcIiwgXCJyZXR1cm5cIl0uZm9yRWFjaChmdW5jdGlvbihtZXRob2QpIHtcbiAgICAgIHByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIHJ1bnRpbWUubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgaWYgKCEodG9TdHJpbmdUYWdTeW1ib2wgaW4gZ2VuRnVuKSkge1xuICAgICAgICBnZW5GdW5bdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JGdW5jdGlvblwiO1xuICAgICAgfVxuICAgIH1cbiAgICBnZW5GdW4ucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShHcCk7XG4gICAgcmV0dXJuIGdlbkZ1bjtcbiAgfTtcblxuICAvLyBXaXRoaW4gdGhlIGJvZHkgb2YgYW55IGFzeW5jIGZ1bmN0aW9uLCBgYXdhaXQgeGAgaXMgdHJhbnNmb3JtZWQgdG9cbiAgLy8gYHlpZWxkIHJlZ2VuZXJhdG9yUnVudGltZS5hd3JhcCh4KWAsIHNvIHRoYXQgdGhlIHJ1bnRpbWUgY2FuIHRlc3RcbiAgLy8gYGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIilgIHRvIGRldGVybWluZSBpZiB0aGUgeWllbGRlZCB2YWx1ZSBpc1xuICAvLyBtZWFudCB0byBiZSBhd2FpdGVkLlxuICBydW50aW1lLmF3cmFwID0gZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHsgX19hd2FpdDogYXJnIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUuX19hd2FpdCkudGhlbihmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodmFsdWUpLnRoZW4oZnVuY3Rpb24odW53cmFwcGVkKSB7XG4gICAgICAgICAgLy8gV2hlbiBhIHlpZWxkZWQgUHJvbWlzZSBpcyByZXNvbHZlZCwgaXRzIGZpbmFsIHZhbHVlIGJlY29tZXNcbiAgICAgICAgICAvLyB0aGUgLnZhbHVlIG9mIHRoZSBQcm9taXNlPHt2YWx1ZSxkb25lfT4gcmVzdWx0IGZvciB0aGVcbiAgICAgICAgICAvLyBjdXJyZW50IGl0ZXJhdGlvbi5cbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQ7XG4gICAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnJvcikge1xuICAgICAgICAgIC8vIElmIGEgcmVqZWN0ZWQgUHJvbWlzZSB3YXMgeWllbGRlZCwgdGhyb3cgdGhlIHJlamVjdGlvbiBiYWNrXG4gICAgICAgICAgLy8gaW50byB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIHNvIGl0IGNhbiBiZSBoYW5kbGVkIHRoZXJlLlxuICAgICAgICAgIHJldHVybiBpbnZva2UoXCJ0aHJvd1wiLCBlcnJvciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHByZXZpb3VzUHJvbWlzZTtcblxuICAgIGZ1bmN0aW9uIGVucXVldWUobWV0aG9kLCBhcmcpIHtcbiAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByZXZpb3VzUHJvbWlzZSA9XG4gICAgICAgIC8vIElmIGVucXVldWUgaGFzIGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiB3ZSB3YW50IHRvIHdhaXQgdW50aWxcbiAgICAgICAgLy8gYWxsIHByZXZpb3VzIFByb21pc2VzIGhhdmUgYmVlbiByZXNvbHZlZCBiZWZvcmUgY2FsbGluZyBpbnZva2UsXG4gICAgICAgIC8vIHNvIHRoYXQgcmVzdWx0cyBhcmUgYWx3YXlzIGRlbGl2ZXJlZCBpbiB0aGUgY29ycmVjdCBvcmRlci4gSWZcbiAgICAgICAgLy8gZW5xdWV1ZSBoYXMgbm90IGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiBpdCBpcyBpbXBvcnRhbnQgdG9cbiAgICAgICAgLy8gY2FsbCBpbnZva2UgaW1tZWRpYXRlbHksIHdpdGhvdXQgd2FpdGluZyBvbiBhIGNhbGxiYWNrIHRvIGZpcmUsXG4gICAgICAgIC8vIHNvIHRoYXQgdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBoYXMgdGhlIG9wcG9ydHVuaXR5IHRvIGRvXG4gICAgICAgIC8vIGFueSBuZWNlc3Nhcnkgc2V0dXAgaW4gYSBwcmVkaWN0YWJsZSB3YXkuIFRoaXMgcHJlZGljdGFiaWxpdHlcbiAgICAgICAgLy8gaXMgd2h5IHRoZSBQcm9taXNlIGNvbnN0cnVjdG9yIHN5bmNocm9ub3VzbHkgaW52b2tlcyBpdHNcbiAgICAgICAgLy8gZXhlY3V0b3IgY2FsbGJhY2ssIGFuZCB3aHkgYXN5bmMgZnVuY3Rpb25zIHN5bmNocm9ub3VzbHlcbiAgICAgICAgLy8gZXhlY3V0ZSBjb2RlIGJlZm9yZSB0aGUgZmlyc3QgYXdhaXQuIFNpbmNlIHdlIGltcGxlbWVudCBzaW1wbGVcbiAgICAgICAgLy8gYXN5bmMgZnVuY3Rpb25zIGluIHRlcm1zIG9mIGFzeW5jIGdlbmVyYXRvcnMsIGl0IGlzIGVzcGVjaWFsbHlcbiAgICAgICAgLy8gaW1wb3J0YW50IHRvIGdldCB0aGlzIHJpZ2h0LCBldmVuIHRob3VnaCBpdCByZXF1aXJlcyBjYXJlLlxuICAgICAgICBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihcbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyxcbiAgICAgICAgICAvLyBBdm9pZCBwcm9wYWdhdGluZyBmYWlsdXJlcyB0byBQcm9taXNlcyByZXR1cm5lZCBieSBsYXRlclxuICAgICAgICAgIC8vIGludm9jYXRpb25zIG9mIHRoZSBpdGVyYXRvci5cbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZ1xuICAgICAgICApIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmUgdGhlIHVuaWZpZWQgaGVscGVyIG1ldGhvZCB0aGF0IGlzIHVzZWQgdG8gaW1wbGVtZW50IC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gKHNlZSBkZWZpbmVJdGVyYXRvck1ldGhvZHMpLlxuICAgIHRoaXMuX2ludm9rZSA9IGVucXVldWU7XG4gIH1cblxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpO1xuICBBc3luY0l0ZXJhdG9yLnByb3RvdHlwZVthc3luY0l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgcnVudGltZS5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvcjtcblxuICAvLyBOb3RlIHRoYXQgc2ltcGxlIGFzeW5jIGZ1bmN0aW9ucyBhcmUgaW1wbGVtZW50ZWQgb24gdG9wIG9mXG4gIC8vIEFzeW5jSXRlcmF0b3Igb2JqZWN0czsgdGhleSBqdXN0IHJldHVybiBhIFByb21pc2UgZm9yIHRoZSB2YWx1ZSBvZlxuICAvLyB0aGUgZmluYWwgcmVzdWx0IHByb2R1Y2VkIGJ5IHRoZSBpdGVyYXRvci5cbiAgcnVudGltZS5hc3luYyA9IGZ1bmN0aW9uKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0KSB7XG4gICAgdmFyIGl0ZXIgPSBuZXcgQXN5bmNJdGVyYXRvcihcbiAgICAgIHdyYXAoaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpXG4gICAgKTtcblxuICAgIHJldHVybiBydW50aW1lLmlzR2VuZXJhdG9yRnVuY3Rpb24ob3V0ZXJGbilcbiAgICAgID8gaXRlciAvLyBJZiBvdXRlckZuIGlzIGEgZ2VuZXJhdG9yLCByZXR1cm4gdGhlIGZ1bGwgaXRlcmF0b3IuXG4gICAgICA6IGl0ZXIubmV4dCgpLnRoZW4oZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdC5kb25lID8gcmVzdWx0LnZhbHVlIDogaXRlci5uZXh0KCk7XG4gICAgICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dCkge1xuICAgIHZhciBzdGF0ZSA9IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnKSB7XG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlRXhlY3V0aW5nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmdcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVDb21wbGV0ZWQpIHtcbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgdGhyb3cgYXJnO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQmUgZm9yZ2l2aW5nLCBwZXIgMjUuMy4zLjMuMyBvZiB0aGUgc3BlYzpcbiAgICAgICAgLy8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWdlbmVyYXRvcnJlc3VtZVxuICAgICAgICByZXR1cm4gZG9uZVJlc3VsdCgpO1xuICAgICAgfVxuXG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IG1ldGhvZDtcbiAgICAgIGNvbnRleHQuYXJnID0gYXJnO1xuXG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlO1xuICAgICAgICBpZiAoZGVsZWdhdGUpIHtcbiAgICAgICAgICB2YXIgZGVsZWdhdGVSZXN1bHQgPSBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcbiAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAgIC8vIFNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICAgICAgY29udGV4dC5zZW50ID0gY29udGV4dC5fc2VudCA9IGNvbnRleHQuYXJnO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydCkge1xuICAgICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAgIHRocm93IGNvbnRleHQuYXJnO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoY29udGV4dC5tZXRob2QgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgICBjb250ZXh0LmFicnVwdChcInJldHVyblwiLCBjb250ZXh0LmFyZyk7XG4gICAgICAgIH1cblxuICAgICAgICBzdGF0ZSA9IEdlblN0YXRlRXhlY3V0aW5nO1xuXG4gICAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcbiAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiKSB7XG4gICAgICAgICAgLy8gSWYgYW4gZXhjZXB0aW9uIGlzIHRocm93biBmcm9tIGlubmVyRm4sIHdlIGxlYXZlIHN0YXRlID09PVxuICAgICAgICAgIC8vIEdlblN0YXRlRXhlY3V0aW5nIGFuZCBsb29wIGJhY2sgZm9yIGFub3RoZXIgaW52b2NhdGlvbi5cbiAgICAgICAgICBzdGF0ZSA9IGNvbnRleHQuZG9uZVxuICAgICAgICAgICAgPyBHZW5TdGF0ZUNvbXBsZXRlZFxuICAgICAgICAgICAgOiBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkO1xuXG4gICAgICAgICAgaWYgKHJlY29yZC5hcmcgPT09IENvbnRpbnVlU2VudGluZWwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogcmVjb3JkLmFyZyxcbiAgICAgICAgICAgIGRvbmU6IGNvbnRleHQuZG9uZVxuICAgICAgICAgIH07XG5cbiAgICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUNvbXBsZXRlZDtcbiAgICAgICAgICAvLyBEaXNwYXRjaCB0aGUgZXhjZXB0aW9uIGJ5IGxvb3BpbmcgYmFjayBhcm91bmQgdG8gdGhlXG4gICAgICAgICAgLy8gY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZykgY2FsbCBhYm92ZS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgLy8gQ2FsbCBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF0oY29udGV4dC5hcmcpIGFuZCBoYW5kbGUgdGhlXG4gIC8vIHJlc3VsdCwgZWl0aGVyIGJ5IHJldHVybmluZyBhIHsgdmFsdWUsIGRvbmUgfSByZXN1bHQgZnJvbSB0aGVcbiAgLy8gZGVsZWdhdGUgaXRlcmF0b3IsIG9yIGJ5IG1vZGlmeWluZyBjb250ZXh0Lm1ldGhvZCBhbmQgY29udGV4dC5hcmcsXG4gIC8vIHNldHRpbmcgY29udGV4dC5kZWxlZ2F0ZSB0byBudWxsLCBhbmQgcmV0dXJuaW5nIHRoZSBDb250aW51ZVNlbnRpbmVsLlxuICBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSB7XG4gICAgdmFyIG1ldGhvZCA9IGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXTtcbiAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgIC8vIEEgLnRocm93IG9yIC5yZXR1cm4gd2hlbiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIG5vIC50aHJvd1xuICAgICAgLy8gbWV0aG9kIGFsd2F5cyB0ZXJtaW5hdGVzIHRoZSB5aWVsZCogbG9vcC5cbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICBpZiAoZGVsZWdhdGUuaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBhIHJldHVybiBtZXRob2QsIGdpdmUgaXQgYVxuICAgICAgICAgIC8vIGNoYW5jZSB0byBjbGVhbiB1cC5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG5cbiAgICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgLy8gSWYgbWF5YmVJbnZva2VEZWxlZ2F0ZShjb250ZXh0KSBjaGFuZ2VkIGNvbnRleHQubWV0aG9kIGZyb21cbiAgICAgICAgICAgIC8vIFwicmV0dXJuXCIgdG8gXCJ0aHJvd1wiLCBsZXQgdGhhdCBvdmVycmlkZSB0aGUgVHlwZUVycm9yIGJlbG93LlxuICAgICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBcIlRoZSBpdGVyYXRvciBkb2VzIG5vdCBwcm92aWRlIGEgJ3Rocm93JyBtZXRob2RcIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChtZXRob2QsIGRlbGVnYXRlLml0ZXJhdG9yLCBjb250ZXh0LmFyZyk7XG5cbiAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcblxuICAgIGlmICghIGluZm8pIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIik7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgIC8vIEFzc2lnbiB0aGUgcmVzdWx0IG9mIHRoZSBmaW5pc2hlZCBkZWxlZ2F0ZSB0byB0aGUgdGVtcG9yYXJ5XG4gICAgICAvLyB2YXJpYWJsZSBzcGVjaWZpZWQgYnkgZGVsZWdhdGUucmVzdWx0TmFtZSAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dFtkZWxlZ2F0ZS5yZXN1bHROYW1lXSA9IGluZm8udmFsdWU7XG5cbiAgICAgIC8vIFJlc3VtZSBleGVjdXRpb24gYXQgdGhlIGRlc2lyZWQgbG9jYXRpb24gKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHQubmV4dCA9IGRlbGVnYXRlLm5leHRMb2M7XG5cbiAgICAgIC8vIElmIGNvbnRleHQubWV0aG9kIHdhcyBcInRocm93XCIgYnV0IHRoZSBkZWxlZ2F0ZSBoYW5kbGVkIHRoZVxuICAgICAgLy8gZXhjZXB0aW9uLCBsZXQgdGhlIG91dGVyIGdlbmVyYXRvciBwcm9jZWVkIG5vcm1hbGx5LiBJZlxuICAgICAgLy8gY29udGV4dC5tZXRob2Qgd2FzIFwibmV4dFwiLCBmb3JnZXQgY29udGV4dC5hcmcgc2luY2UgaXQgaGFzIGJlZW5cbiAgICAgIC8vIFwiY29uc3VtZWRcIiBieSB0aGUgZGVsZWdhdGUgaXRlcmF0b3IuIElmIGNvbnRleHQubWV0aG9kIHdhc1xuICAgICAgLy8gXCJyZXR1cm5cIiwgYWxsb3cgdGhlIG9yaWdpbmFsIC5yZXR1cm4gY2FsbCB0byBjb250aW51ZSBpbiB0aGVcbiAgICAgIC8vIG91dGVyIGdlbmVyYXRvci5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCAhPT0gXCJyZXR1cm5cIikge1xuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZS15aWVsZCB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBkZWxlZ2F0ZSBtZXRob2QuXG4gICAgICByZXR1cm4gaW5mbztcbiAgICB9XG5cbiAgICAvLyBUaGUgZGVsZWdhdGUgaXRlcmF0b3IgaXMgZmluaXNoZWQsIHNvIGZvcmdldCBpdCBhbmQgY29udGludWUgd2l0aFxuICAgIC8vIHRoZSBvdXRlciBnZW5lcmF0b3IuXG4gICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gIH1cblxuICAvLyBEZWZpbmUgR2VuZXJhdG9yLnByb3RvdHlwZS57bmV4dCx0aHJvdyxyZXR1cm59IGluIHRlcm1zIG9mIHRoZVxuICAvLyB1bmlmaWVkIC5faW52b2tlIGhlbHBlciBtZXRob2QuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhHcCk7XG5cbiAgR3BbdG9TdHJpbmdUYWdTeW1ib2xdID0gXCJHZW5lcmF0b3JcIjtcblxuICAvLyBBIEdlbmVyYXRvciBzaG91bGQgYWx3YXlzIHJldHVybiBpdHNlbGYgYXMgdGhlIGl0ZXJhdG9yIG9iamVjdCB3aGVuIHRoZVxuICAvLyBAQGl0ZXJhdG9yIGZ1bmN0aW9uIGlzIGNhbGxlZCBvbiBpdC4gU29tZSBicm93c2VycycgaW1wbGVtZW50YXRpb25zIG9mIHRoZVxuICAvLyBpdGVyYXRvciBwcm90b3R5cGUgY2hhaW4gaW5jb3JyZWN0bHkgaW1wbGVtZW50IHRoaXMsIGNhdXNpbmcgdGhlIEdlbmVyYXRvclxuICAvLyBvYmplY3QgdG8gbm90IGJlIHJldHVybmVkIGZyb20gdGhpcyBjYWxsLiBUaGlzIGVuc3VyZXMgdGhhdCBkb2Vzbid0IGhhcHBlbi5cbiAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9pc3N1ZXMvMjc0IGZvciBtb3JlIGRldGFpbHMuXG4gIEdwW2l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIEdwLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIFwiW29iamVjdCBHZW5lcmF0b3JdXCI7XG4gIH07XG5cbiAgZnVuY3Rpb24gcHVzaFRyeUVudHJ5KGxvY3MpIHtcbiAgICB2YXIgZW50cnkgPSB7IHRyeUxvYzogbG9jc1swXSB9O1xuXG4gICAgaWYgKDEgaW4gbG9jcykge1xuICAgICAgZW50cnkuY2F0Y2hMb2MgPSBsb2NzWzFdO1xuICAgIH1cblxuICAgIGlmICgyIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmZpbmFsbHlMb2MgPSBsb2NzWzJdO1xuICAgICAgZW50cnkuYWZ0ZXJMb2MgPSBsb2NzWzNdO1xuICAgIH1cblxuICAgIHRoaXMudHJ5RW50cmllcy5wdXNoKGVudHJ5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0VHJ5RW50cnkoZW50cnkpIHtcbiAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbiB8fCB7fTtcbiAgICByZWNvcmQudHlwZSA9IFwibm9ybWFsXCI7XG4gICAgZGVsZXRlIHJlY29yZC5hcmc7XG4gICAgZW50cnkuY29tcGxldGlvbiA9IHJlY29yZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIENvbnRleHQodHJ5TG9jc0xpc3QpIHtcbiAgICAvLyBUaGUgcm9vdCBlbnRyeSBvYmplY3QgKGVmZmVjdGl2ZWx5IGEgdHJ5IHN0YXRlbWVudCB3aXRob3V0IGEgY2F0Y2hcbiAgICAvLyBvciBhIGZpbmFsbHkgYmxvY2spIGdpdmVzIHVzIGEgcGxhY2UgdG8gc3RvcmUgdmFsdWVzIHRocm93biBmcm9tXG4gICAgLy8gbG9jYXRpb25zIHdoZXJlIHRoZXJlIGlzIG5vIGVuY2xvc2luZyB0cnkgc3RhdGVtZW50LlxuICAgIHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogXCJyb290XCIgfV07XG4gICAgdHJ5TG9jc0xpc3QuZm9yRWFjaChwdXNoVHJ5RW50cnksIHRoaXMpO1xuICAgIHRoaXMucmVzZXQodHJ1ZSk7XG4gIH1cblxuICBydW50aW1lLmtleXMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICAgIGtleXMucHVzaChrZXkpO1xuICAgIH1cbiAgICBrZXlzLnJldmVyc2UoKTtcblxuICAgIC8vIFJhdGhlciB0aGFuIHJldHVybmluZyBhbiBvYmplY3Qgd2l0aCBhIG5leHQgbWV0aG9kLCB3ZSBrZWVwXG4gICAgLy8gdGhpbmdzIHNpbXBsZSBhbmQgcmV0dXJuIHRoZSBuZXh0IGZ1bmN0aW9uIGl0c2VsZi5cbiAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgIHdoaWxlIChrZXlzLmxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0ga2V5cy5wb3AoKTtcbiAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHtcbiAgICAgICAgICBuZXh0LnZhbHVlID0ga2V5O1xuICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRvIGF2b2lkIGNyZWF0aW5nIGFuIGFkZGl0aW9uYWwgb2JqZWN0LCB3ZSBqdXN0IGhhbmcgdGhlIC52YWx1ZVxuICAgICAgLy8gYW5kIC5kb25lIHByb3BlcnRpZXMgb2ZmIHRoZSBuZXh0IGZ1bmN0aW9uIG9iamVjdCBpdHNlbGYuIFRoaXNcbiAgICAgIC8vIGFsc28gZW5zdXJlcyB0aGF0IHRoZSBtaW5pZmllciB3aWxsIG5vdCBhbm9ueW1pemUgdGhlIGZ1bmN0aW9uLlxuICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcbiAgICAgIHJldHVybiBuZXh0O1xuICAgIH07XG4gIH07XG5cbiAgZnVuY3Rpb24gdmFsdWVzKGl0ZXJhYmxlKSB7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICB2YXIgaXRlcmF0b3JNZXRob2QgPSBpdGVyYWJsZVtpdGVyYXRvclN5bWJvbF07XG4gICAgICBpZiAoaXRlcmF0b3JNZXRob2QpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhdG9yTWV0aG9kLmNhbGwoaXRlcmFibGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGl0ZXJhYmxlLm5leHQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gaXRlcmFibGU7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNOYU4oaXRlcmFibGUubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLCBuZXh0ID0gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICB3aGlsZSAoKytpIDwgaXRlcmFibGUubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duLmNhbGwoaXRlcmFibGUsIGkpKSB7XG4gICAgICAgICAgICAgIG5leHQudmFsdWUgPSBpdGVyYWJsZVtpXTtcbiAgICAgICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIG5leHQudmFsdWUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbmV4dC5kb25lID0gdHJ1ZTtcblxuICAgICAgICAgIHJldHVybiBuZXh0O1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBuZXh0Lm5leHQgPSBuZXh0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJldHVybiBhbiBpdGVyYXRvciB3aXRoIG5vIHZhbHVlcy5cbiAgICByZXR1cm4geyBuZXh0OiBkb25lUmVzdWx0IH07XG4gIH1cbiAgcnVudGltZS52YWx1ZXMgPSB2YWx1ZXM7XG5cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH1cblxuICBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcblxuICAgIHJlc2V0OiBmdW5jdGlvbihza2lwVGVtcFJlc2V0KSB7XG4gICAgICB0aGlzLnByZXYgPSAwO1xuICAgICAgdGhpcy5uZXh0ID0gMDtcbiAgICAgIC8vIFJlc2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuZG9uZSA9IGZhbHNlO1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcblxuICAgICAgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSk7XG5cbiAgICAgIGlmICghc2tpcFRlbXBSZXNldCkge1xuICAgICAgICBmb3IgKHZhciBuYW1lIGluIHRoaXMpIHtcbiAgICAgICAgICAvLyBOb3Qgc3VyZSBhYm91dCB0aGUgb3B0aW1hbCBvcmRlciBvZiB0aGVzZSBjb25kaXRpb25zOlxuICAgICAgICAgIGlmIChuYW1lLmNoYXJBdCgwKSA9PT0gXCJ0XCIgJiZcbiAgICAgICAgICAgICAgaGFzT3duLmNhbGwodGhpcywgbmFtZSkgJiZcbiAgICAgICAgICAgICAgIWlzTmFOKCtuYW1lLnNsaWNlKDEpKSkge1xuICAgICAgICAgICAgdGhpc1tuYW1lXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc3RvcDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmRvbmUgPSB0cnVlO1xuXG4gICAgICB2YXIgcm9vdEVudHJ5ID0gdGhpcy50cnlFbnRyaWVzWzBdO1xuICAgICAgdmFyIHJvb3RSZWNvcmQgPSByb290RW50cnkuY29tcGxldGlvbjtcbiAgICAgIGlmIChyb290UmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByb290UmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucnZhbDtcbiAgICB9LFxuXG4gICAgZGlzcGF0Y2hFeGNlcHRpb246IGZ1bmN0aW9uKGV4Y2VwdGlvbikge1xuICAgICAgaWYgKHRoaXMuZG9uZSkge1xuICAgICAgICB0aHJvdyBleGNlcHRpb247XG4gICAgICB9XG5cbiAgICAgIHZhciBjb250ZXh0ID0gdGhpcztcbiAgICAgIGZ1bmN0aW9uIGhhbmRsZShsb2MsIGNhdWdodCkge1xuICAgICAgICByZWNvcmQudHlwZSA9IFwidGhyb3dcIjtcbiAgICAgICAgcmVjb3JkLmFyZyA9IGV4Y2VwdGlvbjtcbiAgICAgICAgY29udGV4dC5uZXh0ID0gbG9jO1xuXG4gICAgICAgIGlmIChjYXVnaHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGlzcGF0Y2hlZCBleGNlcHRpb24gd2FzIGNhdWdodCBieSBhIGNhdGNoIGJsb2NrLFxuICAgICAgICAgIC8vIHRoZW4gbGV0IHRoYXQgY2F0Y2ggYmxvY2sgaGFuZGxlIHRoZSBleGNlcHRpb24gbm9ybWFsbHkuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAhISBjYXVnaHQ7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSBcInJvb3RcIikge1xuICAgICAgICAgIC8vIEV4Y2VwdGlvbiB0aHJvd24gb3V0c2lkZSBvZiBhbnkgdHJ5IGJsb2NrIHRoYXQgY291bGQgaGFuZGxlXG4gICAgICAgICAgLy8gaXQsIHNvIHNldCB0aGUgY29tcGxldGlvbiB2YWx1ZSBvZiB0aGUgZW50aXJlIGZ1bmN0aW9uIHRvXG4gICAgICAgICAgLy8gdGhyb3cgdGhlIGV4Y2VwdGlvbi5cbiAgICAgICAgICByZXR1cm4gaGFuZGxlKFwiZW5kXCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYpIHtcbiAgICAgICAgICB2YXIgaGFzQ2F0Y2ggPSBoYXNPd24uY2FsbChlbnRyeSwgXCJjYXRjaExvY1wiKTtcbiAgICAgICAgICB2YXIgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG5cbiAgICAgICAgICBpZiAoaGFzQ2F0Y2ggJiYgaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0NhdGNoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2UgaWYgKGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFicnVwdDogZnVuY3Rpb24odHlwZSwgYXJnKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA8PSB0aGlzLnByZXYgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiZcbiAgICAgICAgICAgIHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB2YXIgZmluYWxseUVudHJ5ID0gZW50cnk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSAmJlxuICAgICAgICAgICh0eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICAgdHlwZSA9PT0gXCJjb250aW51ZVwiKSAmJlxuICAgICAgICAgIGZpbmFsbHlFbnRyeS50cnlMb2MgPD0gYXJnICYmXG4gICAgICAgICAgYXJnIDw9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgIC8vIElnbm9yZSB0aGUgZmluYWxseSBlbnRyeSBpZiBjb250cm9sIGlzIG5vdCBqdW1waW5nIHRvIGFcbiAgICAgICAgLy8gbG9jYXRpb24gb3V0c2lkZSB0aGUgdHJ5L2NhdGNoIGJsb2NrLlxuICAgICAgICBmaW5hbGx5RW50cnkgPSBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgcmVjb3JkID0gZmluYWxseUVudHJ5ID8gZmluYWxseUVudHJ5LmNvbXBsZXRpb24gOiB7fTtcbiAgICAgIHJlY29yZC50eXBlID0gdHlwZTtcbiAgICAgIHJlY29yZC5hcmcgPSBhcmc7XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkpIHtcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2M7XG4gICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG5cbiAgICBjb21wbGV0ZTogZnVuY3Rpb24ocmVjb3JkLCBhZnRlckxvYykge1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcmVjb3JkLmFyZztcbiAgICAgIH1cblxuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcImJyZWFrXCIgfHxcbiAgICAgICAgICByZWNvcmQudHlwZSA9PT0gXCJjb250aW51ZVwiKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IHJlY29yZC5hcmc7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInJldHVyblwiKSB7XG4gICAgICAgIHRoaXMucnZhbCA9IHRoaXMuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgdGhpcy5tZXRob2QgPSBcInJldHVyblwiO1xuICAgICAgICB0aGlzLm5leHQgPSBcImVuZFwiO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIiAmJiBhZnRlckxvYykge1xuICAgICAgICB0aGlzLm5leHQgPSBhZnRlckxvYztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfSxcblxuICAgIGZpbmlzaDogZnVuY3Rpb24oZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSB7XG4gICAgICAgICAgdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyk7XG4gICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbih0cnlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jID09PSB0cnlMb2MpIHtcbiAgICAgICAgICB2YXIgcmVjb3JkID0gZW50cnkuY29tcGxldGlvbjtcbiAgICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgdmFyIHRocm93biA9IHJlY29yZC5hcmc7XG4gICAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRocm93bjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUaGUgY29udGV4dC5jYXRjaCBtZXRob2QgbXVzdCBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgbG9jYXRpb25cbiAgICAgIC8vIGFyZ3VtZW50IHRoYXQgY29ycmVzcG9uZHMgdG8gYSBrbm93biBjYXRjaCBibG9jay5cbiAgICAgIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTtcbiAgICB9LFxuXG4gICAgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24oaXRlcmFibGUsIHJlc3VsdE5hbWUsIG5leHRMb2MpIHtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSB7XG4gICAgICAgIGl0ZXJhdG9yOiB2YWx1ZXMoaXRlcmFibGUpLFxuICAgICAgICByZXN1bHROYW1lOiByZXN1bHROYW1lLFxuICAgICAgICBuZXh0TG9jOiBuZXh0TG9jXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgIC8vIERlbGliZXJhdGVseSBmb3JnZXQgdGhlIGxhc3Qgc2VudCB2YWx1ZSBzbyB0aGF0IHdlIGRvbid0XG4gICAgICAgIC8vIGFjY2lkZW50YWxseSBwYXNzIGl0IG9uIHRvIHRoZSBkZWxlZ2F0ZS5cbiAgICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cbiAgfTtcbn0pKFxuICAvLyBJbiBzbG9wcHkgbW9kZSwgdW5ib3VuZCBgdGhpc2AgcmVmZXJzIHRvIHRoZSBnbG9iYWwgb2JqZWN0LCBmYWxsYmFjayB0b1xuICAvLyBGdW5jdGlvbiBjb25zdHJ1Y3RvciBpZiB3ZSdyZSBpbiBnbG9iYWwgc3RyaWN0IG1vZGUuIFRoYXQgaXMgc2FkbHkgYSBmb3JtXG4gIC8vIG9mIGluZGlyZWN0IGV2YWwgd2hpY2ggdmlvbGF0ZXMgQ29udGVudCBTZWN1cml0eSBQb2xpY3kuXG4gIChmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcyB8fCAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZik7XG4gIH0pKCkgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n");

/***/ }),

/***/ 21:
/*!*******************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/API.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _API;function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}var API = (_API = {\n  Bucket: 'cscb-1259085570',\n  Region: 'ap-chengdu',\n  http: 'http://cscb2.kelinteng.com',\n  https: 'https://cscb2.kelinteng.com',\n  UPLOAD_HOST: 'http://txcos.kelinteng.com/',\n  //0.获取省市县接口\n  getAreaData: 'area/areaData',\n  //1.登陆接口\n  login: 'wemini/login',\n  //1.注册接口\n  register: 'wemini/register',\n  //2.首页-广告接口\n  adlist: 'wemini/adlist',\n  //3.挂单推荐列表\n  getTaskList: 'wemini/getTaskList',\n  //4.市场-挂单分类\n  getTaskCategoryList: 'wemini/getTaskCategoryList' }, _defineProperty(_API, \"getTaskList\",\n\n'wemini/getTaskList'), _defineProperty(_API, \"taskDetail\",\n\n'wemini/taskDetail'), _defineProperty(_API, \"taskDetailLog\",\n\n'wemini/taskDetailLog'), _defineProperty(_API, \"taskDetailTimeLine\",\n\n'wemini/taskDetailTimeLine'), _defineProperty(_API, \"lookbidlog\",\n\n'wemini/lookbidlog'), _defineProperty(_API, \"sureorder\",\n\n'wemini/sureorder'), _defineProperty(_API, \"postOrder\",\n\n'wemini/postOrder'), _defineProperty(_API, \"payResult\",\n\n'wemini/payResult'), _defineProperty(_API, \"taskDetail\",\n\n'wemini/taskDetail'), _defineProperty(_API, \"fastbid\",\n\n'wemini/fastbid'), _defineProperty(_API, \"taskDetail\",\n\n'wemini/taskDetail'), _defineProperty(_API, \"publishbid\",\n\n'wemini/publishbid'), _defineProperty(_API, \"bidCategoryList\",\n\n'wemini/bidCategoryList'), _defineProperty(_API, \"getCarNew\",\n\n'wemini/getCarNew'), _defineProperty(_API, \"taskLogDetail\",\n\n'wemini/taskLogDetail'), _defineProperty(_API, \"qcloud_key\",\n\n'wemini/qcloud_key'), _defineProperty(_API, \"bidding\",\n\n\n'wemini/bidding'), _defineProperty(_API, \"myPubData\",\n\n'wemini/myPubData'), _defineProperty(_API, \"myTaskList\",\n\n'wemini/myTaskList'), _defineProperty(_API, \"closeTask\",\n\n'wemini/closeTask'), _defineProperty(_API, \"isSeller\",\n\n'wemini/isSeller'), _defineProperty(_API, \"isBidding\",\n\n'wemini/isBidding'), _defineProperty(_API, \"scanTask\",\n\n'wemini/scanTask'), _defineProperty(_API, \"seller\",\n\n'wemini/seller'), _defineProperty(_API, \"getCYTaskList\",\n\n'wemini/getCYTaskList'), _defineProperty(_API, \"getMyServiceList\",\n\n'wemini/getMyServiceList'), _defineProperty(_API, \"getMyIncomeList\",\n\n'wemini/getMyIncomeList'), _defineProperty(_API, \"logcscb\",\n\n'wemini/logcscb'), _defineProperty(_API, \"gettypelist\",\n\n'wemini/gettypelist'), _defineProperty(_API, \"getSellerList\",\n\n'wemini/sellerlist'), _defineProperty(_API, \"sellerinfo\",\n\n'wemini/sellerinfo'), _defineProperty(_API, \"taskServiceDetail\",\n\n'mp/taskServiceDetail'), _defineProperty(_API, \"taskSellerSave\",\n\n'mp/taskSellerSave'), _API);var _default =\n\nAPI;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vdXRpbHMvQVBJLmpzIl0sIm5hbWVzIjpbIkFQSSIsIkJ1Y2tldCIsIlJlZ2lvbiIsImh0dHAiLCJodHRwcyIsIlVQTE9BRF9IT1NUIiwiZ2V0QXJlYURhdGEiLCJsb2dpbiIsInJlZ2lzdGVyIiwiYWRsaXN0IiwiZ2V0VGFza0xpc3QiLCJnZXRUYXNrQ2F0ZWdvcnlMaXN0Il0sIm1hcHBpbmdzIjoiMFNBQUEsSUFBTUEsR0FBRztBQUNSQyxRQUFNLEVBQUMsaUJBREM7QUFFUkMsUUFBTSxFQUFDLFlBRkM7QUFHUkMsTUFBSSxFQUFDLDRCQUhHO0FBSVJDLE9BQUssRUFBQyw2QkFKRTtBQUtSQyxhQUFXLEVBQUMsNkJBTEo7QUFNUjtBQUNHQyxhQUFXLEVBQUMsZUFQUDtBQVFSO0FBQ0FDLE9BQUssRUFBQyxjQVRFO0FBVVI7QUFDQUMsVUFBUSxFQUFDLGlCQVhEO0FBWVI7QUFDQUMsUUFBTSxFQUFDLGVBYkM7QUFjUjtBQUNBQyxhQUFXLEVBQUMsb0JBZko7QUFnQlI7QUFDQUMscUJBQW1CLEVBQUMsNEJBakJaOztBQW1CSSxvQkFuQko7O0FBcUJHLG1CQXJCSDs7QUF1Qk0sc0JBdkJOOztBQXlCVywyQkF6Qlg7O0FBMkJHLG1CQTNCSDs7QUE2QkUsa0JBN0JGOztBQStCRSxrQkEvQkY7O0FBaUNFLGtCQWpDRjs7QUFtQ0csbUJBbkNIOztBQXFDQSxnQkFyQ0E7O0FBdUNHLG1CQXZDSDs7QUF5Q0csbUJBekNIOztBQTJDUSx3QkEzQ1I7O0FBNkNFLGtCQTdDRjs7QUErQ00sc0JBL0NOOztBQWlERyxtQkFqREg7OztBQW9EQSxnQkFwREE7O0FBc0RFLGtCQXRERjs7QUF3REcsbUJBeERIOztBQTBERSxrQkExREY7O0FBNERDLGlCQTVERDs7QUE4REUsa0JBOURGOztBQWdFQyxpQkFoRUQ7O0FBa0VELGVBbEVDOztBQW9FTSxzQkFwRU47O0FBc0VTLHlCQXRFVDs7QUF3RVEsd0JBeEVSOztBQTBFQSxnQkExRUE7O0FBNEVJLG9CQTVFSjs7QUE4RU0sbUJBOUVOOztBQWdGRyxtQkFoRkg7O0FBa0ZVLHNCQWxGVjs7QUFvRk8sbUJBcEZQLFFBQVQsQzs7QUFzRmVYLEciLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUEkgPSB7XHJcblx0QnVja2V0Oidjc2NiLTEyNTkwODU1NzAnLFxyXG5cdFJlZ2lvbjonYXAtY2hlbmdkdScsXHJcblx0aHR0cDonaHR0cDovL2NzY2IyLmtlbGludGVuZy5jb20nLFxyXG5cdGh0dHBzOidodHRwczovL2NzY2IyLmtlbGludGVuZy5jb20nLFxyXG5cdFVQTE9BRF9IT1NUOidodHRwOi8vdHhjb3Mua2VsaW50ZW5nLmNvbS8nLFxyXG5cdC8vMC7ojrflj5bnnIHluILljr/mjqXlj6NcclxuICAgIGdldEFyZWFEYXRhOidhcmVhL2FyZWFEYXRhJyxcclxuXHQvLzEu55m76ZmG5o6l5Y+jXHJcblx0bG9naW46J3dlbWluaS9sb2dpbicsXHJcblx0Ly8xLuazqOWGjOaOpeWPo1xyXG5cdHJlZ2lzdGVyOid3ZW1pbmkvcmVnaXN0ZXInLFxyXG5cdC8vMi7pppbpobUt5bm/5ZGK5o6l5Y+jXHJcblx0YWRsaXN0Oid3ZW1pbmkvYWRsaXN0JyxcclxuXHQvLzMu5oyC5Y2V5o6o6I2Q5YiX6KGoXHJcblx0Z2V0VGFza0xpc3Q6J3dlbWluaS9nZXRUYXNrTGlzdCcsXHJcblx0Ly80LuW4guWcui3mjILljZXliIbnsbtcclxuXHRnZXRUYXNrQ2F0ZWdvcnlMaXN0Oid3ZW1pbmkvZ2V0VGFza0NhdGVnb3J5TGlzdCcsXHJcblx0Ly81LuW4guWcui3mjILljZXliJfooahcclxuXHRnZXRUYXNrTGlzdDond2VtaW5pL2dldFRhc2tMaXN0JyxcclxuXHQvLzYu5oyC5Y2V6K+m5oOFLeaMguWNleaVsOaNrlxyXG5cdHRhc2tEZXRhaWw6J3dlbWluaS90YXNrRGV0YWlsJyxcclxuXHQvLzcu5oyC5Y2V6K+m5oOFLeaKpeS7t+WIl+ihqFxyXG5cdHRhc2tEZXRhaWxMb2c6J3dlbWluaS90YXNrRGV0YWlsTG9nJyxcclxuXHQvLzgu5oyC5Y2V6K+m5oOFLeacjeWKoei/m+eoi1xyXG5cdHRhc2tEZXRhaWxUaW1lTGluZTond2VtaW5pL3Rhc2tEZXRhaWxUaW1lTGluZScsXHJcblx0Ly85LuaMguWNleivpuaDhS3mn6XnnIvmiqXku7dcclxuXHRsb29rYmlkbG9nOid3ZW1pbmkvbG9va2JpZGxvZycsXHJcblx0Ly8xMC7noa7orqTorqLljZUt6I635Y+W5pWw5o2uXHJcblx0c3VyZW9yZGVyOid3ZW1pbmkvc3VyZW9yZGVyJyxcclxuXHQvLzExLuehruiupOiuouWNlS3mj5DkuqTorqLljZVcclxuXHRwb3N0T3JkZXI6J3dlbWluaS9wb3N0T3JkZXInLFxyXG5cdC8vMTIu5pSv5LuY57uT5p6cLeaUr+S7mOaVsOaNrlxyXG5cdHBheVJlc3VsdDond2VtaW5pL3BheVJlc3VsdCcsXHJcblx0Ly8xMy7lj5HluIMt5b+r6YCf5Y+R5biDLeiOt+WPluaMguWNleaVsOaNrlxyXG5cdHRhc2tEZXRhaWw6J3dlbWluaS90YXNrRGV0YWlsJyxcclxuXHQvLzE0LuWPkeW4gy3lv6vpgJ/lj5HluIMt5o+Q5Lqk5Y+R5biDXHJcblx0ZmFzdGJpZDond2VtaW5pL2Zhc3RiaWQnLFxyXG5cdC8vMTUu5Y+R5biDLeeyvuWHhuWPkeW4gy3ojrflj5bmjILljZXmlbDmja5cclxuXHR0YXNrRGV0YWlsOid3ZW1pbmkvdGFza0RldGFpbCcsXHJcblx0Ly8xNi7lj5HluIMt57K+5YeG5Y+R5biDLeaPkOS6pOWPkeW4g1xyXG5cdHB1Ymxpc2hiaWQ6J3dlbWluaS9wdWJsaXNoYmlkJyxcclxuXHQvLzE3LuWPkeW4gy3ojrflj5bmnI3liqHnsbvlnotcclxuXHRiaWRDYXRlZ29yeUxpc3Q6J3dlbWluaS9iaWRDYXRlZ29yeUxpc3QnLFxyXG5cdC8vMTgu5Y+R5biDLeiOt+WPlueUqOaIt+i9pui+huS/oeaBr1xyXG5cdGdldENhck5ldzond2VtaW5pL2dldENhck5ldycsXHJcblx0Ly8xOS7miqXku7ct6I635Y+W5oql5Lu35pWw5o2uXHJcblx0dGFza0xvZ0RldGFpbDond2VtaW5pL3Rhc2tMb2dEZXRhaWwnLFxyXG5cdC8vMjDojrflj5bkuLTml7blr4bpkqVcclxuXHRxY2xvdWRfa2V5Oid3ZW1pbmkvcWNsb3VkX2tleScsXHJcblx0Ly8yMS7pgJrnlKgt5LiK5Lyg5Zu+54mHXHJcblx0Ly8yMi7miqXku7ct6I635Y+W5oql5Lu35pWw5o2uXHJcblx0YmlkZGluZzond2VtaW5pL2JpZGRpbmcnLFxyXG5cdC8vMjMu5oiR55qE5Y+R5biDLee7n+iuoeaVsOaNrlxyXG5cdG15UHViRGF0YTond2VtaW5pL215UHViRGF0YScsXHJcblx0Ly8yNC7miJHnmoTlj5HluIMt5oyC5Y2V5YiX6KGoXHJcblx0bXlUYXNrTGlzdDond2VtaW5pL215VGFza0xpc3QnLFxyXG5cdC8vMjUu5oiR55qE5Y+R5biDLeWFs+mXreacjeWKoVxyXG5cdGNsb3NlVGFzazond2VtaW5pL2Nsb3NlVGFzaycsXHJcblx0Ly8yNi7liKTmlq3mmK/lkKbmmK/llYblrrZcclxuXHRpc1NlbGxlcjond2VtaW5pL2lzU2VsbGVyJyxcclxuXHQvLzI3LuWIpOaWreaYr+WQpuW3suaKpeS7t1xyXG5cdGlzQmlkZGluZzond2VtaW5pL2lzQmlkZGluZycsXHJcblx0Ly8yOC7miavnoIHmoLjplIBcclxuXHRzY2FuVGFzazond2VtaW5pL3NjYW5UYXNrJyxcclxuXHQvLzI5LuWVhuWutuS4u+mhteaOpeWPo1xyXG5cdHNlbGxlcjond2VtaW5pL3NlbGxlcicsXHJcblx0Ly8zMC7llYblrrbkuLvpobUt5oiR55qE56ue5qCH6K6w5b2VXHJcblx0Z2V0Q1lUYXNrTGlzdDond2VtaW5pL2dldENZVGFza0xpc3QnLFxyXG5cdC8vMzEu5ZWG5a625Li76aG1LeaIkeeahOacjeWKoeiusOW9lVxyXG5cdGdldE15U2VydmljZUxpc3Q6J3dlbWluaS9nZXRNeVNlcnZpY2VMaXN0JyxcclxuXHQvLzMyLuWVhuWutuS4u+mhtS3miJHnmoTmlLbnm4rorrDlvZVcclxuXHRnZXRNeUluY29tZUxpc3Q6J3dlbWluaS9nZXRNeUluY29tZUxpc3QnLFxyXG5cdC8vMzMu5LiK5oqlXHJcblx0bG9nY3NjYjond2VtaW5pL2xvZ2NzY2InLFxyXG5cdC8vMzQu5ZWG5a62LeacjeWKoeexu+Wei1xyXG5cdGdldHR5cGVsaXN0Oid3ZW1pbmkvZ2V0dHlwZWxpc3QnLFxyXG5cdC8vMzUu5ZWG5a62LeWVhuWutuWIl+ihqFxyXG5cdGdldFNlbGxlckxpc3Q6J3dlbWluaS9zZWxsZXJsaXN0JyxcclxuXHQvLzM2LuWVhuWutuS4u+mhtVxyXG5cdHNlbGxlcmluZm86J3dlbWluaS9zZWxsZXJpbmZvJyxcclxuXHQvLzM3LuacjeWKoeivpuaDhVxyXG5cdHRhc2tTZXJ2aWNlRGV0YWlsOidtcC90YXNrU2VydmljZURldGFpbCcsXHJcblx0Ly8zOFxyXG5cdHRhc2tTZWxsZXJTYXZlOidtcC90YXNrU2VsbGVyU2F2ZSdcclxufVx0XHJcbmV4cG9ydCBkZWZhdWx0IEFQSSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n");

/***/ }),

/***/ 241:
/*!********************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/util.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" //timestamp   时间戳\n//option      格式（年月日  就输入YY-MM-DD   时分  就输入 hh-mm）\n//功能如下注释   ↓↓↓↓\nfunction formatDate(timestamp, option) {\n  var date = new Date(timestamp);\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var hour = function hour() {\n    return date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n  };\n  var minute = function minute() {\n    return date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n  };\n  var second = function second() {\n    return date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n  };\n  //获取 年月日\n  if (option == 'YY-MM-DD hh-mm') return \" \" + year + \"-\" + month + \"-\" + day + \" \" + hour() + \":\" + minute();\n  //获取 年月日\n  if (option == 'YY-MM-DD') return \" \" + year + \"-\" + month + \"-\" + day;\n  //获取年月\n  if (option == 'YY-MM') return \" \" + year + \"-\" + month;\n  //获取年\n  if (option == 'YY') return \" \" + year;\n  //获取月\n  if (option == 'MM') return \" \" + month;\n  //获取日\n  if (option == 'DD') return \" \" + day;\n  //获取昨天\n  if (option == 'yesterday') return \" \" + day - 1;\n  //获取时分秒\n  if (option == 'hh-mm-ss') return \" \" + hour() + \":\" + minute() + \":\" + second();\n  //获取时分\n  if (option == 'hh-mm') return \" \" + hour() + \":\" + minute();\n  //获取分秒\n  if (option == 'mm-ss') return minute() + \":\" + second();\n  //获取分\n  if (option == 'mm') return minute();\n  //获取秒\n  if (option == 'ss') return second();\n  //默认时分秒年月日\n  return year + '-' + month + '-' + day + ' ' + hour() + ':' + minute() + \":\" + second();\n}\nmodule.exports = { formatDate: formatDate };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vdXRpbHMvdXRpbC5qcyJdLCJuYW1lcyI6WyJmb3JtYXREYXRlIiwidGltZXN0YW1wIiwib3B0aW9uIiwiZGF0ZSIsIkRhdGUiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJtb250aCIsImdldE1vbnRoIiwiZGF5IiwiZ2V0RGF0ZSIsImhvdXIiLCJnZXRIb3VycyIsIm1pbnV0ZSIsImdldE1pbnV0ZXMiLCJzZWNvbmQiLCJnZXRTZWNvbmRzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkNBQUE7QUFDQTtBQUNBO0FBQ0EsU0FBU0EsVUFBVCxDQUFvQkMsU0FBcEIsRUFBK0JDLE1BQS9CLEVBQXVDO0FBQ3JDLE1BQUlDLElBQUksR0FBRyxJQUFJQyxJQUFKLENBQVNILFNBQVQsQ0FBWDtBQUNBLE1BQUlJLElBQUksR0FBR0YsSUFBSSxDQUFDRyxXQUFMLEVBQVg7QUFDQSxNQUFJQyxLQUFLLEdBQUdKLElBQUksQ0FBQ0ssUUFBTCxLQUFrQixDQUE5QjtBQUNBLE1BQUlDLEdBQUcsR0FBR04sSUFBSSxDQUFDTyxPQUFMLEVBQVY7QUFDQSxNQUFJQyxJQUFJLEdBQUcsU0FBUEEsSUFBTyxHQUFZO0FBQ3JCLFdBQU9SLElBQUksQ0FBQ1MsUUFBTCxLQUFrQixFQUFsQixHQUF1QixNQUFNVCxJQUFJLENBQUNTLFFBQUwsRUFBN0IsR0FBK0NULElBQUksQ0FBQ1MsUUFBTCxFQUF0RDtBQUNELEdBRkQ7QUFHQSxNQUFJQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFZO0FBQ3ZCLFdBQU9WLElBQUksQ0FBQ1csVUFBTCxLQUFvQixFQUFwQixHQUF5QixNQUFNWCxJQUFJLENBQUNXLFVBQUwsRUFBL0IsR0FBbURYLElBQUksQ0FBQ1csVUFBTCxFQUExRDtBQUNELEdBRkQ7QUFHQSxNQUFJQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFZO0FBQ3ZCLFdBQU9aLElBQUksQ0FBQ2EsVUFBTCxLQUFvQixFQUFwQixHQUF5QixNQUFNYixJQUFJLENBQUNhLFVBQUwsRUFBL0IsR0FBbURiLElBQUksQ0FBQ2EsVUFBTCxFQUExRDtBQUNELEdBRkQ7QUFHQTtBQUNBLE1BQUlkLE1BQU0sSUFBSSxnQkFBZCxFQUFnQyxPQUFPLE1BQU1HLElBQU4sR0FBYSxHQUFiLEdBQW1CRSxLQUFuQixHQUEyQixHQUEzQixHQUFpQ0UsR0FBakMsR0FBc0MsR0FBdEMsR0FBNENFLElBQUksRUFBaEQsR0FBcUQsR0FBckQsR0FBMkRFLE1BQU0sRUFBeEU7QUFDaEM7QUFDQSxNQUFJWCxNQUFNLElBQUksVUFBZCxFQUEwQixPQUFPLE1BQU1HLElBQU4sR0FBYSxHQUFiLEdBQW1CRSxLQUFuQixHQUEyQixHQUEzQixHQUFpQ0UsR0FBeEM7QUFDMUI7QUFDQSxNQUFJUCxNQUFNLElBQUksT0FBZCxFQUF1QixPQUFPLE1BQU1HLElBQU4sR0FBYSxHQUFiLEdBQW1CRSxLQUExQjtBQUN2QjtBQUNBLE1BQUlMLE1BQU0sSUFBSSxJQUFkLEVBQW9CLE9BQU8sTUFBTUcsSUFBYjtBQUNwQjtBQUNBLE1BQUlILE1BQU0sSUFBSSxJQUFkLEVBQW9CLE9BQVEsTUFBTUssS0FBZDtBQUNwQjtBQUNBLE1BQUlMLE1BQU0sSUFBSSxJQUFkLEVBQW9CLE9BQU8sTUFBT08sR0FBZDtBQUNwQjtBQUNBLE1BQUlQLE1BQU0sSUFBSSxXQUFkLEVBQTJCLE9BQU8sTUFBTU8sR0FBTixHQUFZLENBQW5CO0FBQzNCO0FBQ0EsTUFBSVAsTUFBTSxJQUFJLFVBQWQsRUFBMEIsT0FBTyxNQUFNUyxJQUFJLEVBQVYsR0FBZSxHQUFmLEdBQXFCRSxNQUFNLEVBQTNCLEdBQWdDLEdBQWhDLEdBQXNDRSxNQUFNLEVBQW5EO0FBQzFCO0FBQ0EsTUFBSWIsTUFBTSxJQUFJLE9BQWQsRUFBdUIsT0FBTyxNQUFNUyxJQUFJLEVBQVYsR0FBZSxHQUFmLEdBQXFCRSxNQUFNLEVBQWxDO0FBQ3ZCO0FBQ0EsTUFBSVgsTUFBTSxJQUFJLE9BQWQsRUFBdUIsT0FBT1csTUFBTSxLQUFLLEdBQVgsR0FBaUJFLE1BQU0sRUFBOUI7QUFDdkI7QUFDQSxNQUFJYixNQUFNLElBQUksSUFBZCxFQUFxQixPQUFPVyxNQUFNLEVBQWI7QUFDckI7QUFDQSxNQUFJWCxNQUFNLElBQUksSUFBZCxFQUFvQixPQUFPYSxNQUFNLEVBQWI7QUFDcEI7QUFDQSxTQUFPVixJQUFJLEdBQUcsR0FBUCxHQUFhRSxLQUFiLEdBQXFCLEdBQXJCLEdBQTJCRSxHQUEzQixHQUFpQyxHQUFqQyxHQUF1Q0UsSUFBSSxFQUEzQyxHQUFnRCxHQUFoRCxHQUFzREUsTUFBTSxFQUE1RCxHQUFpRSxHQUFqRSxHQUF1RUUsTUFBTSxFQUFwRjtBQUNEO0FBQ0RFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixFQUFFbEIsVUFBVSxFQUFWQSxVQUFGLEVBQWpCIiwiZmlsZSI6IjI0MS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vdGltZXN0YW1wICAg5pe26Ze05oizXHJcbi8vb3B0aW9uICAgICAg5qC85byP77yI5bm05pyI5pelICDlsLHovpPlhaVZWS1NTS1ERCAgIOaXtuWIhiAg5bCx6L6T5YWlIGhoLW1t77yJXHJcbi8v5Yqf6IO95aaC5LiL5rOo6YeKICAg4oaT4oaT4oaT4oaTXHJcbmZ1bmN0aW9uIGZvcm1hdERhdGUodGltZXN0YW1wLCBvcHRpb24pIHtcclxuICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCk7XHJcbiAgdmFyIHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKClcclxuICB2YXIgbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxXHJcbiAgdmFyIGRheSA9IGRhdGUuZ2V0RGF0ZSgpXHJcbiAgdmFyIGhvdXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gZGF0ZS5nZXRIb3VycygpIDwgMTAgPyAnMCcgKyBkYXRlLmdldEhvdXJzKCkgOiBkYXRlLmdldEhvdXJzKCk7XHJcbiAgfVxyXG4gIHZhciBtaW51dGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gZGF0ZS5nZXRNaW51dGVzKCkgPCAxMCA/ICcwJyArIGRhdGUuZ2V0TWludXRlcygpIDogZGF0ZS5nZXRNaW51dGVzKCk7XHJcbiAgfVxyXG4gIHZhciBzZWNvbmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4gZGF0ZS5nZXRTZWNvbmRzKCkgPCAxMCA/ICcwJyArIGRhdGUuZ2V0U2Vjb25kcygpIDogZGF0ZS5nZXRTZWNvbmRzKCk7XHJcbiAgfVxyXG4gIC8v6I635Y+WIOW5tOaciOaXpVxyXG4gIGlmIChvcHRpb24gPT0gJ1lZLU1NLUREIGhoLW1tJykgcmV0dXJuIFwiIFwiICsgeWVhciArIFwiLVwiICsgbW9udGggKyBcIi1cIiArIGRheSArXCIgXCIgKyBob3VyKCkgKyBcIjpcIiArIG1pbnV0ZSgpO1xyXG4gIC8v6I635Y+WIOW5tOaciOaXpVxyXG4gIGlmIChvcHRpb24gPT0gJ1lZLU1NLUREJykgcmV0dXJuIFwiIFwiICsgeWVhciArIFwiLVwiICsgbW9udGggKyBcIi1cIiArIGRheTtcclxuICAvL+iOt+WPluW5tOaciFxyXG4gIGlmIChvcHRpb24gPT0gJ1lZLU1NJykgcmV0dXJuIFwiIFwiICsgeWVhciArIFwiLVwiICsgbW9udGg7XHJcbiAgLy/ojrflj5blubRcclxuICBpZiAob3B0aW9uID09ICdZWScpIHJldHVybiBcIiBcIiArIHllYXI7XHJcbiAgLy/ojrflj5bmnIhcclxuICBpZiAob3B0aW9uID09ICdNTScpIHJldHVybiAgXCIgXCIgKyBtb250aDtcclxuICAvL+iOt+WPluaXpVxyXG4gIGlmIChvcHRpb24gPT0gJ0REJykgcmV0dXJuIFwiIFwiICsgIGRheTtcclxuICAvL+iOt+WPluaYqOWkqVxyXG4gIGlmIChvcHRpb24gPT0gJ3llc3RlcmRheScpIHJldHVybiBcIiBcIiArIGRheSAtIDE7XHJcbiAgLy/ojrflj5bml7bliIbnp5JcclxuICBpZiAob3B0aW9uID09ICdoaC1tbS1zcycpIHJldHVybiBcIiBcIiArIGhvdXIoKSArIFwiOlwiICsgbWludXRlKCkgKyBcIjpcIiArIHNlY29uZCgpO1xyXG4gIC8v6I635Y+W5pe25YiGXHJcbiAgaWYgKG9wdGlvbiA9PSAnaGgtbW0nKSByZXR1cm4gXCIgXCIgKyBob3VyKCkgKyBcIjpcIiArIG1pbnV0ZSgpO1xyXG4gIC8v6I635Y+W5YiG56eSXHJcbiAgaWYgKG9wdGlvbiA9PSAnbW0tc3MnKSByZXR1cm4gbWludXRlKCkgKyBcIjpcIiArIHNlY29uZCgpO1xyXG4gIC8v6I635Y+W5YiGXHJcbiAgaWYgKG9wdGlvbiA9PSAnbW0nKSAgcmV0dXJuIG1pbnV0ZSgpO1xyXG4gIC8v6I635Y+W56eSXHJcbiAgaWYgKG9wdGlvbiA9PSAnc3MnKSByZXR1cm4gc2Vjb25kKCk7XHJcbiAgLy/pu5jorqTml7bliIbnp5LlubTmnIjml6VcclxuICByZXR1cm4geWVhciArICctJyArIG1vbnRoICsgJy0nICsgZGF5ICsgJyAnICsgaG91cigpICsgJzonICsgbWludXRlKCkgKyBcIjpcIiArIHNlY29uZCgpO1xyXG59XHJcbm1vZHVsZS5leHBvcnRzID0geyBmb3JtYXREYXRlIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///241\n");

/***/ }),

/***/ 3:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    {\n      if(vm.$scope && vm.$scope.is){\n        return vm.$scope.is\n      }\n    }\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.SharedObject.target) {\n    Dep.SharedObject.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if ( true && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\n// fixed by xxxxxx (nvue shared vuex)\n/* eslint-disable no-undef */\nDep.SharedObject = typeof SharedObject !== 'undefined' ? SharedObject : {};\nDep.SharedObject.target = null;\nDep.SharedObject.targetStack = [];\n\nfunction pushTarget (target) {\n  Dep.SharedObject.targetStack.push(target);\n  Dep.SharedObject.target = target;\n}\n\nfunction popTarget () {\n  Dep.SharedObject.targetStack.pop();\n  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑\n        if(value.push !== value.__proto__.push){\n          copyAugment(value, arrayMethods, arrayKeys);\n        } else {\n          protoAugment(value, arrayMethods);\n        }\n      }\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.SharedObject.target) { // fixed by xxxxxx\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if ( true && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if ( true &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n     true && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n       true && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n     true && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (true) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if ( true && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    true\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if ( true && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (true) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n       true && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (true) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page\n      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){\n        (slots['page'] || (slots['page'] = [])).push(child);\n      }else{\n        (slots.default || (slots.default = [])).push(child);\n      }\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if ( true && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n       true && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n       true && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if ( true && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (true) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n     true && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if ( true &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (true) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if ( true && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if ( true && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n       true && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                 true\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : undefined\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (true) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if ( true && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if ( true && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true\n    ? expOrFn.toString()\n    : undefined;\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n       true && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          {\n            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn\n                return\n            }\n            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警\n            if(\n                key === 'value' && \n                Array.isArray(vm.$options.behaviors) &&\n                vm.$options.behaviors.indexOf('uni://form-field') !== -1\n              ){\n              return\n            }\n            if(vm._getFormData){\n              return\n            }\n            var $parent = vm.$parent;\n            while($parent){\n              if($parent.__next_tick_pending){\n                return  \n              }\n              $parent = $parent.$parent;\n            }\n          }\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {}\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n     true && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n       true && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if ( true && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if ( true &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.SharedObject.target) {// fixed by xxxxxx\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (true) {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (true) {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (true) {\n      initProxy(vm);\n    } else {}\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    vm.mpHost !== 'mp-toutiao' && initInjections(vm); // resolve injections before data/props  \n    initState(vm);\n    vm.mpHost !== 'mp-toutiao' && initProvide(vm); // resolve provide after data/props\n    vm.mpHost !== 'mp-toutiao' && callHook(vm, 'created');      \n\n    /* istanbul ignore if */\n    if ( true && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if ( true &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if ( true && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if ( true && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (true) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/**\n * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js\n */\nvar ARRAYTYPE = '[object Array]';\nvar OBJECTTYPE = '[object Object]';\n// const FUNCTIONTYPE = '[object Function]'\n\nfunction diff(current, pre) {\n    var result = {};\n    syncKeys(current, pre);\n    _diff(current, pre, '', result);\n    return result\n}\n\nfunction syncKeys(current, pre) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {\n        if(Object.keys(current).length >= Object.keys(pre).length){\n            for (var key in pre) {\n                var currentValue = current[key];\n                if (currentValue === undefined) {\n                    current[key] = null;\n                } else {\n                    syncKeys(currentValue, pre[key]);\n                }\n            }\n        }\n    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {\n        if (current.length >= pre.length) {\n            pre.forEach(function (item, index) {\n                syncKeys(current[index], item);\n            });\n        }\n    }\n}\n\nfunction _diff(current, pre, path, result) {\n    if (current === pre) { return }\n    var rootCurrentType = type(current);\n    var rootPreType = type(pre);\n    if (rootCurrentType == OBJECTTYPE) {\n        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {\n            setResult(result, path, current);\n        } else {\n            var loop = function ( key ) {\n                var currentValue = current[key];\n                var preValue = pre[key];\n                var currentType = type(currentValue);\n                var preType = type(preValue);\n                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {\n                    if (currentValue != pre[key]) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    }\n                } else if (currentType == ARRAYTYPE) {\n                    if (preType != ARRAYTYPE) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        if (currentValue.length < preValue.length) {\n                            setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                        } else {\n                            currentValue.forEach(function (item, index) {\n                                _diff(item, preValue[index], (path == '' ? '' : path + \".\") + key + '[' + index + ']', result);\n                            });\n                        }\n                    }\n                } else if (currentType == OBJECTTYPE) {\n                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {\n                        setResult(result, (path == '' ? '' : path + \".\") + key, currentValue);\n                    } else {\n                        for (var subKey in currentValue) {\n                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + \".\") + key + '.' + subKey, result);\n                        }\n                    }\n                }\n            };\n\n            for (var key in current) loop( key );\n        }\n    } else if (rootCurrentType == ARRAYTYPE) {\n        if (rootPreType != ARRAYTYPE) {\n            setResult(result, path, current);\n        } else {\n            if (current.length < pre.length) {\n                setResult(result, path, current);\n            } else {\n                current.forEach(function (item, index) {\n                    _diff(item, pre[index], path + '[' + index + ']', result);\n                });\n            }\n        }\n    } else {\n        setResult(result, path, current);\n    }\n}\n\nfunction setResult(result, k, v) {\n    // if (type(v) != FUNCTIONTYPE) {\n        result[k] = v;\n    // }\n}\n\nfunction type(obj) {\n    return Object.prototype.toString.call(obj)\n}\n\n/*  */\r\n\r\nfunction flushCallbacks$1(vm) {\r\n    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {\r\n        if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n            var mpInstance = vm.$scope;\r\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\r\n                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');\r\n        }\r\n        var copies = vm.__next_tick_callbacks.slice(0);\r\n        vm.__next_tick_callbacks.length = 0;\r\n        for (var i = 0; i < copies.length; i++) {\r\n            copies[i]();\r\n        }\r\n    }\r\n}\r\n\r\nfunction hasRenderWatcher(vm) {\r\n    return queue.find(function (watcher) { return vm._watcher === watcher; })\r\n}\r\n\r\nfunction nextTick$1(vm, cb) {\r\n    //1.nextTick 之前 已 setData 且 setData 还未回调完成\r\n    //2.nextTick 之前存在 render watcher\r\n    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +\n                ']:nextVueTick');\n        }\r\n        return nextTick(cb, vm)\r\n    }else{\n        if(Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG){\n            var mpInstance$1 = vm.$scope;\n            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +\n                ']:nextMPTick');\n        }\n    }\r\n    var _resolve;\r\n    if (!vm.__next_tick_callbacks) {\r\n        vm.__next_tick_callbacks = [];\r\n    }\r\n    vm.__next_tick_callbacks.push(function () {\r\n        if (cb) {\r\n            try {\r\n                cb.call(vm);\r\n            } catch (e) {\r\n                handleError(e, vm, 'nextTick');\r\n            }\r\n        } else if (_resolve) {\r\n            _resolve(vm);\r\n        }\r\n    });\r\n    // $flow-disable-line\r\n    if (!cb && typeof Promise !== 'undefined') {\r\n        return new Promise(function (resolve) {\r\n            _resolve = resolve;\r\n        })\r\n    }\r\n}\n\n/*  */\r\n\r\nfunction cloneWithData(vm) {\r\n  // 确保当前 vm 所有数据被同步\r\n  var ret = Object.create(null);\r\n  var dataKeys = [].concat(\r\n    Object.keys(vm._data || {}),\r\n    Object.keys(vm._computedWatchers || {}));\r\n\r\n  dataKeys.reduce(function(ret, key) {\r\n    ret[key] = vm[key];\r\n    return ret\r\n  }, ret);\r\n  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据\r\n  Object.assign(ret, vm.$mp.data || {});\r\n  if (\r\n    Array.isArray(vm.$options.behaviors) &&\r\n    vm.$options.behaviors.indexOf('uni://form-field') !== -1\r\n  ) { //form-field\r\n    ret['name'] = vm.name;\r\n    ret['value'] = vm.value;\r\n  }\r\n\r\n  return JSON.parse(JSON.stringify(ret))\r\n}\r\n\r\nvar patch = function(oldVnode, vnode) {\n  var this$1 = this;\n\r\n  if (vnode === null) { //destroy\r\n    return\r\n  }\r\n  if (this.mpType === 'page' || this.mpType === 'component') {\r\n    var mpInstance = this.$scope;\r\n    var data = Object.create(null);\r\n    try {\r\n      data = cloneWithData(this);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    data.__webviewId__ = mpInstance.data.__webviewId__;\r\n    var mpData = Object.create(null);\r\n    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据\r\n      mpData[key] = mpInstance.data[key];\r\n    });\r\n    var diffData = diff(data, mpData);\r\n    if (Object.keys(diffData).length) {\r\n      if (Object({\"VUE_APP_PLATFORM\":\"app-plus\",\"NODE_ENV\":\"development\",\"BASE_URL\":\"/\"}).VUE_APP_DEBUG) {\r\n        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +\r\n          ']差量更新',\r\n          JSON.stringify(diffData));\r\n      }\r\n      this.__next_tick_pending = true;\r\n      mpInstance.setData(diffData, function () {\r\n        this$1.__next_tick_pending = false;\r\n        flushCallbacks$1(this$1);\r\n      });\r\n    } else {\r\n      flushCallbacks$1(this);\r\n    }\r\n  }\r\n};\n\n/*  */\n\nfunction createEmptyRender() {\n\n}\n\nfunction mountComponent$1(\n  vm,\n  el,\n  hydrating\n) {\n  if (!vm.mpType) {//main.js 中的 new Vue\n    return vm\n  }\n  if (vm.mpType === 'app') {\n    vm.$options.render = createEmptyRender;\n  }\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyRender;\n    if (true) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  \n  vm.mpHost !== 'mp-toutiao' && callHook(vm, 'beforeMount');\n\n  var updateComponent = function () {\n    vm._update(vm._render(), hydrating);\n  };\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before() {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n  return vm\n}\n\n/*  */\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/*  */\r\n\r\nvar MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];\r\n\r\nfunction getTarget(obj, path) {\r\n  var parts = path.split('.');\r\n  var key = parts[0];\r\n  if (key.indexOf('__$n') === 0) { //number index\r\n    key = parseInt(key.replace('__$n', ''));\r\n  }\r\n  if (parts.length === 1) {\r\n    return obj[key]\r\n  }\r\n  return getTarget(obj[key], parts.slice(1).join('.'))\r\n}\r\n\r\nfunction internalMixin(Vue) {\r\n\r\n  Vue.config.errorHandler = function(err) {\r\n    console.error(err);\r\n  };\r\n\r\n  var oldEmit = Vue.prototype.$emit;\r\n\r\n  Vue.prototype.$emit = function(event) {\r\n    if (this.$scope && event) {\r\n      this.$scope['triggerEvent'](event, {\r\n        __args__: toArray(arguments, 1)\r\n      });\r\n    }\r\n    return oldEmit.apply(this, arguments)\r\n  };\r\n\r\n  Vue.prototype.$nextTick = function(fn) {\r\n    return nextTick$1(this, fn)\r\n  };\r\n\r\n  MP_METHODS.forEach(function (method) {\r\n    Vue.prototype[method] = function(args) {\r\n      if (this.$scope) {\r\n        return this.$scope[method](args)\r\n      }\r\n    };\r\n  });\r\n\r\n  Vue.prototype.__init_provide = initProvide;\r\n\r\n  Vue.prototype.__init_injections = initInjections;\r\n\r\n  Vue.prototype.__call_hook = function(hook, args) {\r\n    var vm = this;\r\n    // #7573 disable dep collection when invoking lifecycle hooks\r\n    pushTarget();\r\n    var handlers = vm.$options[hook];\r\n    var info = hook + \" hook\";\r\n    var ret;\r\n    if (handlers) {\r\n      for (var i = 0, j = handlers.length; i < j; i++) {\r\n        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);\r\n      }\r\n    }\r\n    if (vm._hasHookEvent) {\r\n      vm.$emit('hook:' + hook);\r\n    }\r\n    popTarget();\r\n    return ret\r\n  };\r\n\r\n  Vue.prototype.__set_model = function(target, key, value, modifiers) {\r\n    if (Array.isArray(modifiers)) {\r\n      if (modifiers.indexOf('trim') !== -1) {\r\n        value = value.trim();\r\n      }\r\n      if (modifiers.indexOf('number') !== -1) {\r\n        value = this._n(value);\r\n      }\r\n    }\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__set_sync = function(target, key, value) {\r\n    if (!target) {\r\n      target = this;\r\n    }\r\n    target[key] = value;\r\n  };\r\n\r\n  Vue.prototype.__get_orig = function(item) {\r\n    if (isPlainObject(item)) {\r\n      return item['$orig'] || item\r\n    }\r\n    return item\r\n  };\r\n\r\n  Vue.prototype.__get_value = function(dataPath, target) {\r\n    return getTarget(target || this, dataPath)\r\n  };\r\n\r\n\r\n  Vue.prototype.__get_class = function(dynamicClass, staticClass) {\r\n    return renderClass(staticClass, dynamicClass)\r\n  };\r\n\r\n  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {\r\n    if (!dynamicStyle && !staticStyle) {\r\n      return ''\r\n    }\r\n    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);\r\n    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;\r\n    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + \":\" + (styleObj[name])); }).join(';')\r\n  };\r\n\r\n  Vue.prototype.__map = function(val, iteratee) {\r\n    //TODO 暂不考虑 string,number\r\n    var ret, i, l, keys, key;\r\n    if (Array.isArray(val)) {\r\n      ret = new Array(val.length);\r\n      for (i = 0, l = val.length; i < l; i++) {\r\n        ret[i] = iteratee(val[i], i);\r\n      }\r\n      return ret\r\n    } else if (isObject(val)) {\r\n      keys = Object.keys(val);\r\n      ret = Object.create(null);\r\n      for (i = 0, l = keys.length; i < l; i++) {\r\n        key = keys[i];\r\n        ret[key] = iteratee(val[key], key, i);\r\n      }\r\n      return ret\r\n    }\r\n    return []\r\n  };\r\n\r\n}\n\n/*  */\r\n\r\nvar LIFECYCLE_HOOKS$1 = [\r\n    //App\r\n    'onLaunch',\r\n    'onShow',\r\n    'onHide',\r\n    'onUniNViewMessage',\n    'onError',\r\n    //Page\r\n    'onLoad',\r\n    // 'onShow',\r\n    'onReady',\r\n    // 'onHide',\r\n    'onUnload',\r\n    'onPullDownRefresh',\r\n    'onReachBottom',\r\n    'onTabItemTap',\r\n    'onShareAppMessage',\n    'onResize',\r\n    'onPageScroll',\r\n    'onNavigationBarButtonTap',\r\n    'onBackPress',\r\n    'onNavigationBarSearchInputChanged',\r\n    'onNavigationBarSearchInputConfirmed',\r\n    'onNavigationBarSearchInputClicked',\r\n    //Component\r\n    // 'onReady', // 兼容旧版本，应该移除该事件\r\n    'onPageShow',\r\n    'onPageHide',\r\n    'onPageResize'\r\n];\r\nfunction lifecycleMixin$1(Vue) {\r\n\r\n    //fixed vue-class-component\r\n    var oldExtend = Vue.extend;\r\n    Vue.extend = function(extendOptions) {\r\n        extendOptions = extendOptions || {};\r\n\r\n        var methods = extendOptions.methods;\r\n        if (methods) {\r\n            Object.keys(methods).forEach(function (methodName) {\r\n                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {\r\n                    extendOptions[methodName] = methods[methodName];\r\n                    delete methods[methodName];\r\n                }\r\n            });\r\n        }\r\n\r\n        return oldExtend.call(this, extendOptions)\r\n    };\r\n\r\n    var strategies = Vue.config.optionMergeStrategies;\r\n    var mergeHook = strategies.created;\r\n    LIFECYCLE_HOOKS$1.forEach(function (hook) {\r\n        strategies[hook] = mergeHook;\r\n    });\r\n\r\n    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;\r\n}\n\n/*  */\r\n\n// install platform patch function\r\nVue.prototype.__patch__ = patch;\r\n\r\n// public mount method\r\nVue.prototype.$mount = function(\r\n    el ,\r\n    hydrating \r\n) {\r\n    return mountComponent$1(this, el, hydrating)\r\n};\r\n\r\nlifecycleMixin$1(Vue);\r\ninternalMixin(Vue);\n\n/*  */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n");

/***/ }),

/***/ 313:
/*!********************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/components/mpvue-citypicker/city-data/province.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar provinceData = [{\n  \"label\": \"北京市\",\n  \"value\": \"11\" },\n\n{\n  \"label\": \"天津市\",\n  \"value\": \"12\" },\n\n{\n  \"label\": \"河北省\",\n  \"value\": \"13\" },\n\n{\n  \"label\": \"山西省\",\n  \"value\": \"14\" },\n\n{\n  \"label\": \"内蒙古自治区\",\n  \"value\": \"15\" },\n\n{\n  \"label\": \"辽宁省\",\n  \"value\": \"21\" },\n\n{\n  \"label\": \"吉林省\",\n  \"value\": \"22\" },\n\n{\n  \"label\": \"黑龙江省\",\n  \"value\": \"23\" },\n\n{\n  \"label\": \"上海市\",\n  \"value\": \"31\" },\n\n{\n  \"label\": \"江苏省\",\n  \"value\": \"32\" },\n\n{\n  \"label\": \"浙江省\",\n  \"value\": \"33\" },\n\n{\n  \"label\": \"安徽省\",\n  \"value\": \"34\" },\n\n{\n  \"label\": \"福建省\",\n  \"value\": \"35\" },\n\n{\n  \"label\": \"江西省\",\n  \"value\": \"36\" },\n\n{\n  \"label\": \"山东省\",\n  \"value\": \"37\" },\n\n{\n  \"label\": \"河南省\",\n  \"value\": \"41\" },\n\n{\n  \"label\": \"湖北省\",\n  \"value\": \"42\" },\n\n{\n  \"label\": \"湖南省\",\n  \"value\": \"43\" },\n\n{\n  \"label\": \"广东省\",\n  \"value\": \"44\" },\n\n{\n  \"label\": \"广西壮族自治区\",\n  \"value\": \"45\" },\n\n{\n  \"label\": \"海南省\",\n  \"value\": \"46\" },\n\n{\n  \"label\": \"重庆市\",\n  \"value\": \"50\" },\n\n{\n  \"label\": \"四川省\",\n  \"value\": \"51\" },\n\n{\n  \"label\": \"贵州省\",\n  \"value\": \"52\" },\n\n{\n  \"label\": \"云南省\",\n  \"value\": \"53\" },\n\n{\n  \"label\": \"西藏自治区\",\n  \"value\": \"54\" },\n\n{\n  \"label\": \"陕西省\",\n  \"value\": \"61\" },\n\n{\n  \"label\": \"甘肃省\",\n  \"value\": \"62\" },\n\n{\n  \"label\": \"青海省\",\n  \"value\": \"63\" },\n\n{\n  \"label\": \"宁夏回族自治区\",\n  \"value\": \"64\" },\n\n{\n  \"label\": \"新疆维吾尔自治区\",\n  \"value\": \"65\" },\n\n{\n  \"label\": \"台湾\",\n  \"value\": \"66\" },\n\n{\n  \"label\": \"香港\",\n  \"value\": \"67\" },\n\n{\n  \"label\": \"澳门\",\n  \"value\": \"68\" }];var _default =\n\n\nprovinceData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy9tcHZ1ZS1jaXR5cGlja2VyL2NpdHktZGF0YS9wcm92aW5jZS5qcyJdLCJuYW1lcyI6WyJwcm92aW5jZURhdGEiXSwibWFwcGluZ3MiOiJ3RkFBQTtBQUNBLElBQUlBLFlBQVksR0FBRyxDQUFDO0FBQ2hCLFdBQVMsS0FETztBQUVoQixXQUFTLElBRk8sRUFBRDs7QUFJakI7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLElBRlgsRUFKaUI7O0FBUWpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBUmlCOztBQVlqQjtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsSUFGWCxFQVppQjs7QUFnQmpCO0FBQ0UsV0FBUyxRQURYO0FBRUUsV0FBUyxJQUZYLEVBaEJpQjs7QUFvQmpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBcEJpQjs7QUF3QmpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBeEJpQjs7QUE0QmpCO0FBQ0UsV0FBUyxNQURYO0FBRUUsV0FBUyxJQUZYLEVBNUJpQjs7QUFnQ2pCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBaENpQjs7QUFvQ2pCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBcENpQjs7QUF3Q2pCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBeENpQjs7QUE0Q2pCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBNUNpQjs7QUFnRGpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBaERpQjs7QUFvRGpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBcERpQjs7QUF3RGpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBeERpQjs7QUE0RGpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBNURpQjs7QUFnRWpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBaEVpQjs7QUFvRWpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBcEVpQjs7QUF3RWpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBeEVpQjs7QUE0RWpCO0FBQ0UsV0FBUyxTQURYO0FBRUUsV0FBUyxJQUZYLEVBNUVpQjs7QUFnRmpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBaEZpQjs7QUFvRmpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBcEZpQjs7QUF3RmpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBeEZpQjs7QUE0RmpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBNUZpQjs7QUFnR2pCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBaEdpQjs7QUFvR2pCO0FBQ0UsV0FBUyxPQURYO0FBRUUsV0FBUyxJQUZYLEVBcEdpQjs7QUF3R2pCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBeEdpQjs7QUE0R2pCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBNUdpQjs7QUFnSGpCO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxJQUZYLEVBaEhpQjs7QUFvSGpCO0FBQ0UsV0FBUyxTQURYO0FBRUUsV0FBUyxJQUZYLEVBcEhpQjs7QUF3SGpCO0FBQ0UsV0FBUyxVQURYO0FBRUUsV0FBUyxJQUZYLEVBeEhpQjs7QUE0SGpCO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxJQUZYLEVBNUhpQjs7QUFnSWpCO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxJQUZYLEVBaElpQjs7QUFvSWpCO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxJQUZYLEVBcElpQixDQUFuQixDOzs7QUF5SWVBLFkiLCJmaWxlIjoiMzEzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBwcm92aW5jZURhdGEgPSBbe1xuICAgIFwibGFiZWxcIjogXCLljJfkuqzluIJcIixcbiAgICBcInZhbHVlXCI6IFwiMTFcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuWkqea0peW4glwiLFxuICAgIFwidmFsdWVcIjogXCIxMlwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5rKz5YyX55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjEzXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlsbHopb/nnIFcIixcbiAgICBcInZhbHVlXCI6IFwiMTRcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuWGheiSmeWPpOiHquayu+WMulwiLFxuICAgIFwidmFsdWVcIjogXCIxNVwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi6L695a6B55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjIxXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlkInmnpfnnIFcIixcbiAgICBcInZhbHVlXCI6IFwiMjJcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIum7kem+meaxn+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCIyM1wiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5LiK5rW35biCXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjMxXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLmsZ/oi4/nnIFcIixcbiAgICBcInZhbHVlXCI6IFwiMzJcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIua1meaxn+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCIzM1wiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5a6J5b6955yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjM0XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLnpo/lu7rnnIFcIixcbiAgICBcInZhbHVlXCI6IFwiMzVcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuaxn+ilv+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCIzNlwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5bGx5Lic55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjM3XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLmsrPljZfnnIFcIixcbiAgICBcInZhbHVlXCI6IFwiNDFcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIua5luWMl+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCI0MlwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5rmW5Y2X55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjQzXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLlub/kuJznnIFcIixcbiAgICBcInZhbHVlXCI6IFwiNDRcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuW5v+ilv+WjruaXj+iHquayu+WMulwiLFxuICAgIFwidmFsdWVcIjogXCI0NVwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5rW35Y2X55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjQ2XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLph43luobluIJcIixcbiAgICBcInZhbHVlXCI6IFwiNTBcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuWbm+W3neecgVwiLFxuICAgIFwidmFsdWVcIjogXCI1MVwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi6LS15bee55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjUyXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLkupHljZfnnIFcIixcbiAgICBcInZhbHVlXCI6IFwiNTNcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuilv+iXj+iHquayu+WMulwiLFxuICAgIFwidmFsdWVcIjogXCI1NFwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi6ZmV6KW/55yBXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjYxXCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLnlJjogoPnnIFcIixcbiAgICBcInZhbHVlXCI6IFwiNjJcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIumdkua1t+ecgVwiLFxuICAgIFwidmFsdWVcIjogXCI2M1wiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi5a6B5aSP5Zue5peP6Ieq5rK75Yy6XCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjY0XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLmlrDnlobnu7TlkL7lsJToh6rmsrvljLpcIixcbiAgICBcInZhbHVlXCI6IFwiNjVcIlxuICB9LFxuICB7XG4gICAgXCJsYWJlbFwiOiBcIuWPsOa5vlwiLFxuICAgIFwidmFsdWVcIjogXCI2NlwiXG4gIH0sXG4gIHtcbiAgICBcImxhYmVsXCI6IFwi6aaZ5rivXCIsXG4gICAgXCJ2YWx1ZVwiOiBcIjY3XCJcbiAgfSxcbiAge1xuICAgIFwibGFiZWxcIjogXCLmvrPpl6hcIixcbiAgICBcInZhbHVlXCI6IFwiNjhcIlxuICB9XG5dXG5leHBvcnQgZGVmYXVsdCBwcm92aW5jZURhdGE7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///313\n");

/***/ }),

/***/ 314:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/components/mpvue-citypicker/city-data/city.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar cityData = [\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"1101\" }],\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"1201\" }],\n\n[{\n  \"label\": \"石家庄市\",\n  \"value\": \"1301\" },\n\n{\n  \"label\": \"唐山市\",\n  \"value\": \"1302\" },\n\n{\n  \"label\": \"秦皇岛市\",\n  \"value\": \"1303\" },\n\n{\n  \"label\": \"邯郸市\",\n  \"value\": \"1304\" },\n\n{\n  \"label\": \"邢台市\",\n  \"value\": \"1305\" },\n\n{\n  \"label\": \"保定市\",\n  \"value\": \"1306\" },\n\n{\n  \"label\": \"张家口市\",\n  \"value\": \"1307\" },\n\n{\n  \"label\": \"承德市\",\n  \"value\": \"1308\" },\n\n{\n  \"label\": \"沧州市\",\n  \"value\": \"1309\" },\n\n{\n  \"label\": \"廊坊市\",\n  \"value\": \"1310\" },\n\n{\n  \"label\": \"衡水市\",\n  \"value\": \"1311\" }],\n\n\n[{\n  \"label\": \"太原市\",\n  \"value\": \"1401\" },\n\n{\n  \"label\": \"大同市\",\n  \"value\": \"1402\" },\n\n{\n  \"label\": \"阳泉市\",\n  \"value\": \"1403\" },\n\n{\n  \"label\": \"长治市\",\n  \"value\": \"1404\" },\n\n{\n  \"label\": \"晋城市\",\n  \"value\": \"1405\" },\n\n{\n  \"label\": \"朔州市\",\n  \"value\": \"1406\" },\n\n{\n  \"label\": \"晋中市\",\n  \"value\": \"1407\" },\n\n{\n  \"label\": \"运城市\",\n  \"value\": \"1408\" },\n\n{\n  \"label\": \"忻州市\",\n  \"value\": \"1409\" },\n\n{\n  \"label\": \"临汾市\",\n  \"value\": \"1410\" },\n\n{\n  \"label\": \"吕梁市\",\n  \"value\": \"1411\" }],\n\n\n[{\n  \"label\": \"呼和浩特市\",\n  \"value\": \"1501\" },\n\n{\n  \"label\": \"包头市\",\n  \"value\": \"1502\" },\n\n{\n  \"label\": \"乌海市\",\n  \"value\": \"1503\" },\n\n{\n  \"label\": \"赤峰市\",\n  \"value\": \"1504\" },\n\n{\n  \"label\": \"通辽市\",\n  \"value\": \"1505\" },\n\n{\n  \"label\": \"鄂尔多斯市\",\n  \"value\": \"1506\" },\n\n{\n  \"label\": \"呼伦贝尔市\",\n  \"value\": \"1507\" },\n\n{\n  \"label\": \"巴彦淖尔市\",\n  \"value\": \"1508\" },\n\n{\n  \"label\": \"乌兰察布市\",\n  \"value\": \"1509\" },\n\n{\n  \"label\": \"兴安盟\",\n  \"value\": \"1522\" },\n\n{\n  \"label\": \"锡林郭勒盟\",\n  \"value\": \"1525\" },\n\n{\n  \"label\": \"阿拉善盟\",\n  \"value\": \"1529\" }],\n\n\n[{\n  \"label\": \"沈阳市\",\n  \"value\": \"2101\" },\n\n{\n  \"label\": \"大连市\",\n  \"value\": \"2102\" },\n\n{\n  \"label\": \"鞍山市\",\n  \"value\": \"2103\" },\n\n{\n  \"label\": \"抚顺市\",\n  \"value\": \"2104\" },\n\n{\n  \"label\": \"本溪市\",\n  \"value\": \"2105\" },\n\n{\n  \"label\": \"丹东市\",\n  \"value\": \"2106\" },\n\n{\n  \"label\": \"锦州市\",\n  \"value\": \"2107\" },\n\n{\n  \"label\": \"营口市\",\n  \"value\": \"2108\" },\n\n{\n  \"label\": \"阜新市\",\n  \"value\": \"2109\" },\n\n{\n  \"label\": \"辽阳市\",\n  \"value\": \"2110\" },\n\n{\n  \"label\": \"盘锦市\",\n  \"value\": \"2111\" },\n\n{\n  \"label\": \"铁岭市\",\n  \"value\": \"2112\" },\n\n{\n  \"label\": \"朝阳市\",\n  \"value\": \"2113\" },\n\n{\n  \"label\": \"葫芦岛市\",\n  \"value\": \"2114\" }],\n\n\n[{\n  \"label\": \"长春市\",\n  \"value\": \"2201\" },\n\n{\n  \"label\": \"吉林市\",\n  \"value\": \"2202\" },\n\n{\n  \"label\": \"四平市\",\n  \"value\": \"2203\" },\n\n{\n  \"label\": \"辽源市\",\n  \"value\": \"2204\" },\n\n{\n  \"label\": \"通化市\",\n  \"value\": \"2205\" },\n\n{\n  \"label\": \"白山市\",\n  \"value\": \"2206\" },\n\n{\n  \"label\": \"松原市\",\n  \"value\": \"2207\" },\n\n{\n  \"label\": \"白城市\",\n  \"value\": \"2208\" },\n\n{\n  \"label\": \"延边朝鲜族自治州\",\n  \"value\": \"2224\" }],\n\n\n[{\n  \"label\": \"哈尔滨市\",\n  \"value\": \"2301\" },\n\n{\n  \"label\": \"齐齐哈尔市\",\n  \"value\": \"2302\" },\n\n{\n  \"label\": \"鸡西市\",\n  \"value\": \"2303\" },\n\n{\n  \"label\": \"鹤岗市\",\n  \"value\": \"2304\" },\n\n{\n  \"label\": \"双鸭山市\",\n  \"value\": \"2305\" },\n\n{\n  \"label\": \"大庆市\",\n  \"value\": \"2306\" },\n\n{\n  \"label\": \"伊春市\",\n  \"value\": \"2307\" },\n\n{\n  \"label\": \"佳木斯市\",\n  \"value\": \"2308\" },\n\n{\n  \"label\": \"七台河市\",\n  \"value\": \"2309\" },\n\n{\n  \"label\": \"牡丹江市\",\n  \"value\": \"2310\" },\n\n{\n  \"label\": \"黑河市\",\n  \"value\": \"2311\" },\n\n{\n  \"label\": \"绥化市\",\n  \"value\": \"2312\" },\n\n{\n  \"label\": \"大兴安岭地区\",\n  \"value\": \"2327\" }],\n\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"3101\" }],\n\n[{\n  \"label\": \"南京市\",\n  \"value\": \"3201\" },\n\n{\n  \"label\": \"无锡市\",\n  \"value\": \"3202\" },\n\n{\n  \"label\": \"徐州市\",\n  \"value\": \"3203\" },\n\n{\n  \"label\": \"常州市\",\n  \"value\": \"3204\" },\n\n{\n  \"label\": \"苏州市\",\n  \"value\": \"3205\" },\n\n{\n  \"label\": \"南通市\",\n  \"value\": \"3206\" },\n\n{\n  \"label\": \"连云港市\",\n  \"value\": \"3207\" },\n\n{\n  \"label\": \"淮安市\",\n  \"value\": \"3208\" },\n\n{\n  \"label\": \"盐城市\",\n  \"value\": \"3209\" },\n\n{\n  \"label\": \"扬州市\",\n  \"value\": \"3210\" },\n\n{\n  \"label\": \"镇江市\",\n  \"value\": \"3211\" },\n\n{\n  \"label\": \"泰州市\",\n  \"value\": \"3212\" },\n\n{\n  \"label\": \"宿迁市\",\n  \"value\": \"3213\" }],\n\n\n[{\n  \"label\": \"杭州市\",\n  \"value\": \"3301\" },\n\n{\n  \"label\": \"宁波市\",\n  \"value\": \"3302\" },\n\n{\n  \"label\": \"温州市\",\n  \"value\": \"3303\" },\n\n{\n  \"label\": \"嘉兴市\",\n  \"value\": \"3304\" },\n\n{\n  \"label\": \"湖州市\",\n  \"value\": \"3305\" },\n\n{\n  \"label\": \"绍兴市\",\n  \"value\": \"3306\" },\n\n{\n  \"label\": \"金华市\",\n  \"value\": \"3307\" },\n\n{\n  \"label\": \"衢州市\",\n  \"value\": \"3308\" },\n\n{\n  \"label\": \"舟山市\",\n  \"value\": \"3309\" },\n\n{\n  \"label\": \"台州市\",\n  \"value\": \"3310\" },\n\n{\n  \"label\": \"丽水市\",\n  \"value\": \"3311\" }],\n\n\n[{\n  \"label\": \"合肥市\",\n  \"value\": \"3401\" },\n\n{\n  \"label\": \"芜湖市\",\n  \"value\": \"3402\" },\n\n{\n  \"label\": \"蚌埠市\",\n  \"value\": \"3403\" },\n\n{\n  \"label\": \"淮南市\",\n  \"value\": \"3404\" },\n\n{\n  \"label\": \"马鞍山市\",\n  \"value\": \"3405\" },\n\n{\n  \"label\": \"淮北市\",\n  \"value\": \"3406\" },\n\n{\n  \"label\": \"铜陵市\",\n  \"value\": \"3407\" },\n\n{\n  \"label\": \"安庆市\",\n  \"value\": \"3408\" },\n\n{\n  \"label\": \"黄山市\",\n  \"value\": \"3410\" },\n\n{\n  \"label\": \"滁州市\",\n  \"value\": \"3411\" },\n\n{\n  \"label\": \"阜阳市\",\n  \"value\": \"3412\" },\n\n{\n  \"label\": \"宿州市\",\n  \"value\": \"3413\" },\n\n{\n  \"label\": \"六安市\",\n  \"value\": \"3415\" },\n\n{\n  \"label\": \"亳州市\",\n  \"value\": \"3416\" },\n\n{\n  \"label\": \"池州市\",\n  \"value\": \"3417\" },\n\n{\n  \"label\": \"宣城市\",\n  \"value\": \"3418\" }],\n\n\n[{\n  \"label\": \"福州市\",\n  \"value\": \"3501\" },\n\n{\n  \"label\": \"厦门市\",\n  \"value\": \"3502\" },\n\n{\n  \"label\": \"莆田市\",\n  \"value\": \"3503\" },\n\n{\n  \"label\": \"三明市\",\n  \"value\": \"3504\" },\n\n{\n  \"label\": \"泉州市\",\n  \"value\": \"3505\" },\n\n{\n  \"label\": \"漳州市\",\n  \"value\": \"3506\" },\n\n{\n  \"label\": \"南平市\",\n  \"value\": \"3507\" },\n\n{\n  \"label\": \"龙岩市\",\n  \"value\": \"3508\" },\n\n{\n  \"label\": \"宁德市\",\n  \"value\": \"3509\" }],\n\n\n[{\n  \"label\": \"南昌市\",\n  \"value\": \"3601\" },\n\n{\n  \"label\": \"景德镇市\",\n  \"value\": \"3602\" },\n\n{\n  \"label\": \"萍乡市\",\n  \"value\": \"3603\" },\n\n{\n  \"label\": \"九江市\",\n  \"value\": \"3604\" },\n\n{\n  \"label\": \"新余市\",\n  \"value\": \"3605\" },\n\n{\n  \"label\": \"鹰潭市\",\n  \"value\": \"3606\" },\n\n{\n  \"label\": \"赣州市\",\n  \"value\": \"3607\" },\n\n{\n  \"label\": \"吉安市\",\n  \"value\": \"3608\" },\n\n{\n  \"label\": \"宜春市\",\n  \"value\": \"3609\" },\n\n{\n  \"label\": \"抚州市\",\n  \"value\": \"3610\" },\n\n{\n  \"label\": \"上饶市\",\n  \"value\": \"3611\" }],\n\n\n[{\n  \"label\": \"济南市\",\n  \"value\": \"3701\" },\n\n{\n  \"label\": \"青岛市\",\n  \"value\": \"3702\" },\n\n{\n  \"label\": \"淄博市\",\n  \"value\": \"3703\" },\n\n{\n  \"label\": \"枣庄市\",\n  \"value\": \"3704\" },\n\n{\n  \"label\": \"东营市\",\n  \"value\": \"3705\" },\n\n{\n  \"label\": \"烟台市\",\n  \"value\": \"3706\" },\n\n{\n  \"label\": \"潍坊市\",\n  \"value\": \"3707\" },\n\n{\n  \"label\": \"济宁市\",\n  \"value\": \"3708\" },\n\n{\n  \"label\": \"泰安市\",\n  \"value\": \"3709\" },\n\n{\n  \"label\": \"威海市\",\n  \"value\": \"3710\" },\n\n{\n  \"label\": \"日照市\",\n  \"value\": \"3711\" },\n\n{\n  \"label\": \"莱芜市\",\n  \"value\": \"3712\" },\n\n{\n  \"label\": \"临沂市\",\n  \"value\": \"3713\" },\n\n{\n  \"label\": \"德州市\",\n  \"value\": \"3714\" },\n\n{\n  \"label\": \"聊城市\",\n  \"value\": \"3715\" },\n\n{\n  \"label\": \"滨州市\",\n  \"value\": \"3716\" },\n\n{\n  \"label\": \"菏泽市\",\n  \"value\": \"3717\" }],\n\n\n[{\n  \"label\": \"郑州市\",\n  \"value\": \"4101\" },\n\n{\n  \"label\": \"开封市\",\n  \"value\": \"4102\" },\n\n{\n  \"label\": \"洛阳市\",\n  \"value\": \"4103\" },\n\n{\n  \"label\": \"平顶山市\",\n  \"value\": \"4104\" },\n\n{\n  \"label\": \"安阳市\",\n  \"value\": \"4105\" },\n\n{\n  \"label\": \"鹤壁市\",\n  \"value\": \"4106\" },\n\n{\n  \"label\": \"新乡市\",\n  \"value\": \"4107\" },\n\n{\n  \"label\": \"焦作市\",\n  \"value\": \"4108\" },\n\n{\n  \"label\": \"濮阳市\",\n  \"value\": \"4109\" },\n\n{\n  \"label\": \"许昌市\",\n  \"value\": \"4110\" },\n\n{\n  \"label\": \"漯河市\",\n  \"value\": \"4111\" },\n\n{\n  \"label\": \"三门峡市\",\n  \"value\": \"4112\" },\n\n{\n  \"label\": \"南阳市\",\n  \"value\": \"4113\" },\n\n{\n  \"label\": \"商丘市\",\n  \"value\": \"4114\" },\n\n{\n  \"label\": \"信阳市\",\n  \"value\": \"4115\" },\n\n{\n  \"label\": \"周口市\",\n  \"value\": \"4116\" },\n\n{\n  \"label\": \"驻马店市\",\n  \"value\": \"4117\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4190\" }],\n\n\n[{\n  \"label\": \"武汉市\",\n  \"value\": \"4201\" },\n\n{\n  \"label\": \"黄石市\",\n  \"value\": \"4202\" },\n\n{\n  \"label\": \"十堰市\",\n  \"value\": \"4203\" },\n\n{\n  \"label\": \"宜昌市\",\n  \"value\": \"4205\" },\n\n{\n  \"label\": \"襄阳市\",\n  \"value\": \"4206\" },\n\n{\n  \"label\": \"鄂州市\",\n  \"value\": \"4207\" },\n\n{\n  \"label\": \"荆门市\",\n  \"value\": \"4208\" },\n\n{\n  \"label\": \"孝感市\",\n  \"value\": \"4209\" },\n\n{\n  \"label\": \"荆州市\",\n  \"value\": \"4210\" },\n\n{\n  \"label\": \"黄冈市\",\n  \"value\": \"4211\" },\n\n{\n  \"label\": \"咸宁市\",\n  \"value\": \"4212\" },\n\n{\n  \"label\": \"随州市\",\n  \"value\": \"4213\" },\n\n{\n  \"label\": \"恩施土家族苗族自治州\",\n  \"value\": \"4228\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4290\" }],\n\n\n[{\n  \"label\": \"长沙市\",\n  \"value\": \"4301\" },\n\n{\n  \"label\": \"株洲市\",\n  \"value\": \"4302\" },\n\n{\n  \"label\": \"湘潭市\",\n  \"value\": \"4303\" },\n\n{\n  \"label\": \"衡阳市\",\n  \"value\": \"4304\" },\n\n{\n  \"label\": \"邵阳市\",\n  \"value\": \"4305\" },\n\n{\n  \"label\": \"岳阳市\",\n  \"value\": \"4306\" },\n\n{\n  \"label\": \"常德市\",\n  \"value\": \"4307\" },\n\n{\n  \"label\": \"张家界市\",\n  \"value\": \"4308\" },\n\n{\n  \"label\": \"益阳市\",\n  \"value\": \"4309\" },\n\n{\n  \"label\": \"郴州市\",\n  \"value\": \"4310\" },\n\n{\n  \"label\": \"永州市\",\n  \"value\": \"4311\" },\n\n{\n  \"label\": \"怀化市\",\n  \"value\": \"4312\" },\n\n{\n  \"label\": \"娄底市\",\n  \"value\": \"4313\" },\n\n{\n  \"label\": \"湘西土家族苗族自治州\",\n  \"value\": \"4331\" }],\n\n\n[{\n  \"label\": \"广州市\",\n  \"value\": \"4401\" },\n\n{\n  \"label\": \"韶关市\",\n  \"value\": \"4402\" },\n\n{\n  \"label\": \"深圳市\",\n  \"value\": \"4403\" },\n\n{\n  \"label\": \"珠海市\",\n  \"value\": \"4404\" },\n\n{\n  \"label\": \"汕头市\",\n  \"value\": \"4405\" },\n\n{\n  \"label\": \"佛山市\",\n  \"value\": \"4406\" },\n\n{\n  \"label\": \"江门市\",\n  \"value\": \"4407\" },\n\n{\n  \"label\": \"湛江市\",\n  \"value\": \"4408\" },\n\n{\n  \"label\": \"茂名市\",\n  \"value\": \"4409\" },\n\n{\n  \"label\": \"肇庆市\",\n  \"value\": \"4412\" },\n\n{\n  \"label\": \"惠州市\",\n  \"value\": \"4413\" },\n\n{\n  \"label\": \"梅州市\",\n  \"value\": \"4414\" },\n\n{\n  \"label\": \"汕尾市\",\n  \"value\": \"4415\" },\n\n{\n  \"label\": \"河源市\",\n  \"value\": \"4416\" },\n\n{\n  \"label\": \"阳江市\",\n  \"value\": \"4417\" },\n\n{\n  \"label\": \"清远市\",\n  \"value\": \"4418\" },\n\n{\n  \"label\": \"东莞市\",\n  \"value\": \"4419\" },\n\n{\n  \"label\": \"中山市\",\n  \"value\": \"4420\" },\n\n{\n  \"label\": \"潮州市\",\n  \"value\": \"4451\" },\n\n{\n  \"label\": \"揭阳市\",\n  \"value\": \"4452\" },\n\n{\n  \"label\": \"云浮市\",\n  \"value\": \"4453\" }],\n\n\n[{\n  \"label\": \"南宁市\",\n  \"value\": \"4501\" },\n\n{\n  \"label\": \"柳州市\",\n  \"value\": \"4502\" },\n\n{\n  \"label\": \"桂林市\",\n  \"value\": \"4503\" },\n\n{\n  \"label\": \"梧州市\",\n  \"value\": \"4504\" },\n\n{\n  \"label\": \"北海市\",\n  \"value\": \"4505\" },\n\n{\n  \"label\": \"防城港市\",\n  \"value\": \"4506\" },\n\n{\n  \"label\": \"钦州市\",\n  \"value\": \"4507\" },\n\n{\n  \"label\": \"贵港市\",\n  \"value\": \"4508\" },\n\n{\n  \"label\": \"玉林市\",\n  \"value\": \"4509\" },\n\n{\n  \"label\": \"百色市\",\n  \"value\": \"4510\" },\n\n{\n  \"label\": \"贺州市\",\n  \"value\": \"4511\" },\n\n{\n  \"label\": \"河池市\",\n  \"value\": \"4512\" },\n\n{\n  \"label\": \"来宾市\",\n  \"value\": \"4513\" },\n\n{\n  \"label\": \"崇左市\",\n  \"value\": \"4514\" }],\n\n\n[{\n  \"label\": \"海口市\",\n  \"value\": \"4601\" },\n\n{\n  \"label\": \"三亚市\",\n  \"value\": \"4602\" },\n\n{\n  \"label\": \"三沙市\",\n  \"value\": \"4603\" },\n\n{\n  \"label\": \"儋州市\",\n  \"value\": \"4604\" },\n\n{\n  \"label\": \"省直辖县级行政区划\",\n  \"value\": \"4690\" }],\n\n\n[{\n  \"label\": \"市辖区\",\n  \"value\": \"5001\" },\n\n{\n  \"label\": \"县\",\n  \"value\": \"5002\" }],\n\n\n[{\n  \"label\": \"成都市\",\n  \"value\": \"5101\" },\n\n{\n  \"label\": \"自贡市\",\n  \"value\": \"5103\" },\n\n{\n  \"label\": \"攀枝花市\",\n  \"value\": \"5104\" },\n\n{\n  \"label\": \"泸州市\",\n  \"value\": \"5105\" },\n\n{\n  \"label\": \"德阳市\",\n  \"value\": \"5106\" },\n\n{\n  \"label\": \"绵阳市\",\n  \"value\": \"5107\" },\n\n{\n  \"label\": \"广元市\",\n  \"value\": \"5108\" },\n\n{\n  \"label\": \"遂宁市\",\n  \"value\": \"5109\" },\n\n{\n  \"label\": \"内江市\",\n  \"value\": \"5110\" },\n\n{\n  \"label\": \"乐山市\",\n  \"value\": \"5111\" },\n\n{\n  \"label\": \"南充市\",\n  \"value\": \"5113\" },\n\n{\n  \"label\": \"眉山市\",\n  \"value\": \"5114\" },\n\n{\n  \"label\": \"宜宾市\",\n  \"value\": \"5115\" },\n\n{\n  \"label\": \"广安市\",\n  \"value\": \"5116\" },\n\n{\n  \"label\": \"达州市\",\n  \"value\": \"5117\" },\n\n{\n  \"label\": \"雅安市\",\n  \"value\": \"5118\" },\n\n{\n  \"label\": \"巴中市\",\n  \"value\": \"5119\" },\n\n{\n  \"label\": \"资阳市\",\n  \"value\": \"5120\" },\n\n{\n  \"label\": \"阿坝藏族羌族自治州\",\n  \"value\": \"5132\" },\n\n{\n  \"label\": \"甘孜藏族自治州\",\n  \"value\": \"5133\" },\n\n{\n  \"label\": \"凉山彝族自治州\",\n  \"value\": \"5134\" }],\n\n\n[{\n  \"label\": \"贵阳市\",\n  \"value\": \"5201\" },\n\n{\n  \"label\": \"六盘水市\",\n  \"value\": \"5202\" },\n\n{\n  \"label\": \"遵义市\",\n  \"value\": \"5203\" },\n\n{\n  \"label\": \"安顺市\",\n  \"value\": \"5204\" },\n\n{\n  \"label\": \"毕节市\",\n  \"value\": \"5205\" },\n\n{\n  \"label\": \"铜仁市\",\n  \"value\": \"5206\" },\n\n{\n  \"label\": \"黔西南布依族苗族自治州\",\n  \"value\": \"5223\" },\n\n{\n  \"label\": \"黔东南苗族侗族自治州\",\n  \"value\": \"5226\" },\n\n{\n  \"label\": \"黔南布依族苗族自治州\",\n  \"value\": \"5227\" }],\n\n\n[{\n  \"label\": \"昆明市\",\n  \"value\": \"5301\" },\n\n{\n  \"label\": \"曲靖市\",\n  \"value\": \"5303\" },\n\n{\n  \"label\": \"玉溪市\",\n  \"value\": \"5304\" },\n\n{\n  \"label\": \"保山市\",\n  \"value\": \"5305\" },\n\n{\n  \"label\": \"昭通市\",\n  \"value\": \"5306\" },\n\n{\n  \"label\": \"丽江市\",\n  \"value\": \"5307\" },\n\n{\n  \"label\": \"普洱市\",\n  \"value\": \"5308\" },\n\n{\n  \"label\": \"临沧市\",\n  \"value\": \"5309\" },\n\n{\n  \"label\": \"楚雄彝族自治州\",\n  \"value\": \"5323\" },\n\n{\n  \"label\": \"红河哈尼族彝族自治州\",\n  \"value\": \"5325\" },\n\n{\n  \"label\": \"文山壮族苗族自治州\",\n  \"value\": \"5326\" },\n\n{\n  \"label\": \"西双版纳傣族自治州\",\n  \"value\": \"5328\" },\n\n{\n  \"label\": \"大理白族自治州\",\n  \"value\": \"5329\" },\n\n{\n  \"label\": \"德宏傣族景颇族自治州\",\n  \"value\": \"5331\" },\n\n{\n  \"label\": \"怒江傈僳族自治州\",\n  \"value\": \"5333\" },\n\n{\n  \"label\": \"迪庆藏族自治州\",\n  \"value\": \"5334\" }],\n\n\n[{\n  \"label\": \"拉萨市\",\n  \"value\": \"5401\" },\n\n{\n  \"label\": \"日喀则市\",\n  \"value\": \"5402\" },\n\n{\n  \"label\": \"昌都市\",\n  \"value\": \"5403\" },\n\n{\n  \"label\": \"林芝市\",\n  \"value\": \"5404\" },\n\n{\n  \"label\": \"山南市\",\n  \"value\": \"5405\" },\n\n{\n  \"label\": \"那曲地区\",\n  \"value\": \"5424\" },\n\n{\n  \"label\": \"阿里地区\",\n  \"value\": \"5425\" }],\n\n\n[{\n  \"label\": \"西安市\",\n  \"value\": \"6101\" },\n\n{\n  \"label\": \"铜川市\",\n  \"value\": \"6102\" },\n\n{\n  \"label\": \"宝鸡市\",\n  \"value\": \"6103\" },\n\n{\n  \"label\": \"咸阳市\",\n  \"value\": \"6104\" },\n\n{\n  \"label\": \"渭南市\",\n  \"value\": \"6105\" },\n\n{\n  \"label\": \"延安市\",\n  \"value\": \"6106\" },\n\n{\n  \"label\": \"汉中市\",\n  \"value\": \"6107\" },\n\n{\n  \"label\": \"榆林市\",\n  \"value\": \"6108\" },\n\n{\n  \"label\": \"安康市\",\n  \"value\": \"6109\" },\n\n{\n  \"label\": \"商洛市\",\n  \"value\": \"6110\" }],\n\n\n[{\n  \"label\": \"兰州市\",\n  \"value\": \"6201\" },\n\n{\n  \"label\": \"嘉峪关市\",\n  \"value\": \"6202\" },\n\n{\n  \"label\": \"金昌市\",\n  \"value\": \"6203\" },\n\n{\n  \"label\": \"白银市\",\n  \"value\": \"6204\" },\n\n{\n  \"label\": \"天水市\",\n  \"value\": \"6205\" },\n\n{\n  \"label\": \"武威市\",\n  \"value\": \"6206\" },\n\n{\n  \"label\": \"张掖市\",\n  \"value\": \"6207\" },\n\n{\n  \"label\": \"平凉市\",\n  \"value\": \"6208\" },\n\n{\n  \"label\": \"酒泉市\",\n  \"value\": \"6209\" },\n\n{\n  \"label\": \"庆阳市\",\n  \"value\": \"6210\" },\n\n{\n  \"label\": \"定西市\",\n  \"value\": \"6211\" },\n\n{\n  \"label\": \"陇南市\",\n  \"value\": \"6212\" },\n\n{\n  \"label\": \"临夏回族自治州\",\n  \"value\": \"6229\" },\n\n{\n  \"label\": \"甘南藏族自治州\",\n  \"value\": \"6230\" }],\n\n\n[{\n  \"label\": \"西宁市\",\n  \"value\": \"6301\" },\n\n{\n  \"label\": \"海东市\",\n  \"value\": \"6302\" },\n\n{\n  \"label\": \"海北藏族自治州\",\n  \"value\": \"6322\" },\n\n{\n  \"label\": \"黄南藏族自治州\",\n  \"value\": \"6323\" },\n\n{\n  \"label\": \"海南藏族自治州\",\n  \"value\": \"6325\" },\n\n{\n  \"label\": \"果洛藏族自治州\",\n  \"value\": \"6326\" },\n\n{\n  \"label\": \"玉树藏族自治州\",\n  \"value\": \"6327\" },\n\n{\n  \"label\": \"海西蒙古族藏族自治州\",\n  \"value\": \"6328\" }],\n\n\n[{\n  \"label\": \"银川市\",\n  \"value\": \"6401\" },\n\n{\n  \"label\": \"石嘴山市\",\n  \"value\": \"6402\" },\n\n{\n  \"label\": \"吴忠市\",\n  \"value\": \"6403\" },\n\n{\n  \"label\": \"固原市\",\n  \"value\": \"6404\" },\n\n{\n  \"label\": \"中卫市\",\n  \"value\": \"6405\" }],\n\n\n[{\n  \"label\": \"乌鲁木齐市\",\n  \"value\": \"6501\" },\n\n{\n  \"label\": \"克拉玛依市\",\n  \"value\": \"6502\" },\n\n{\n  \"label\": \"吐鲁番市\",\n  \"value\": \"6504\" },\n\n{\n  \"label\": \"哈密市\",\n  \"value\": \"6505\" },\n\n{\n  \"label\": \"昌吉回族自治州\",\n  \"value\": \"6523\" },\n\n{\n  \"label\": \"博尔塔拉蒙古自治州\",\n  \"value\": \"6527\" },\n\n{\n  \"label\": \"巴音郭楞蒙古自治州\",\n  \"value\": \"6528\" },\n\n{\n  \"label\": \"阿克苏地区\",\n  \"value\": \"6529\" },\n\n{\n  \"label\": \"克孜勒苏柯尔克孜自治州\",\n  \"value\": \"6530\" },\n\n{\n  \"label\": \"喀什地区\",\n  \"value\": \"6531\" },\n\n{\n  \"label\": \"和田地区\",\n  \"value\": \"6532\" },\n\n{\n  \"label\": \"伊犁哈萨克自治州\",\n  \"value\": \"6540\" },\n\n{\n  \"label\": \"塔城地区\",\n  \"value\": \"6542\" },\n\n{\n  \"label\": \"阿勒泰地区\",\n  \"value\": \"6543\" },\n\n{\n  \"label\": \"自治区直辖县级行政区划\",\n  \"value\": \"6590\" }],\n\n\n[{\n  \"label\": \"台北\",\n  \"value\": \"6601\" },\n\n{\n  \"label\": \"高雄\",\n  \"value\": \"6602\" },\n\n{\n  \"label\": \"基隆\",\n  \"value\": \"6603\" },\n\n{\n  \"label\": \"台中\",\n  \"value\": \"6604\" },\n\n{\n  \"label\": \"台南\",\n  \"value\": \"6605\" },\n\n{\n  \"label\": \"新竹\",\n  \"value\": \"6606\" },\n\n{\n  \"label\": \"嘉义\",\n  \"value\": \"6607\" },\n\n{\n  \"label\": \"宜兰\",\n  \"value\": \"6608\" },\n\n{\n  \"label\": \"桃园\",\n  \"value\": \"6609\" },\n\n{\n  \"label\": \"苗栗\",\n  \"value\": \"6610\" },\n\n{\n  \"label\": \"彰化\",\n  \"value\": \"6611\" },\n\n{\n  \"label\": \"南投\",\n  \"value\": \"6612\" },\n\n{\n  \"label\": \"云林\",\n  \"value\": \"6613\" },\n\n{\n  \"label\": \"屏东\",\n  \"value\": \"6614\" },\n\n{\n  \"label\": \"台东\",\n  \"value\": \"6615\" },\n\n{\n  \"label\": \"花莲\",\n  \"value\": \"6616\" },\n\n{\n  \"label\": \"澎湖\",\n  \"value\": \"6617\" }],\n\n\n[{\n  \"label\": \"香港岛\",\n  \"value\": \"6701\" },\n\n{\n  \"label\": \"九龙\",\n  \"value\": \"6702\" },\n\n{\n  \"label\": \"新界\",\n  \"value\": \"6703\" }],\n\n\n[{\n  \"label\": \"澳门半岛\",\n  \"value\": \"6801\" },\n\n{\n  \"label\": \"氹仔岛\",\n  \"value\": \"6802\" },\n\n{\n  \"label\": \"路环岛\",\n  \"value\": \"6803\" },\n\n{\n  \"label\": \"路氹城\",\n  \"value\": \"6804\" }]];var _default =\n\n\n\ncityData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29tcG9uZW50cy9tcHZ1ZS1jaXR5cGlja2VyL2NpdHktZGF0YS9jaXR5LmpzIl0sIm5hbWVzIjpbImNpdHlEYXRhIl0sIm1hcHBpbmdzIjoid0ZBQUE7QUFDQSxJQUFJQSxRQUFRLEdBQUc7QUFDYixDQUFDO0FBQ0MsV0FBUyxLQURWO0FBRUMsV0FBUyxNQUZWLEVBQUQsQ0FEYTs7QUFLYixDQUFDO0FBQ0MsV0FBUyxLQURWO0FBRUMsV0FBUyxNQUZWLEVBQUQsQ0FMYTs7QUFTYixDQUFDO0FBQ0csV0FBUyxNQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGLENBVGE7OztBQXNEYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGLENBdERhOzs7QUFtR2IsQ0FBQztBQUNHLFdBQVMsT0FEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVpGOztBQWdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhCRjs7QUFvQkU7QUFDRSxXQUFTLE9BRFg7QUFFRSxXQUFTLE1BRlgsRUFwQkY7O0FBd0JFO0FBQ0UsV0FBUyxPQURYO0FBRUUsV0FBUyxNQUZYLEVBeEJGOztBQTRCRTtBQUNFLFdBQVMsT0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVCRjs7QUFnQ0U7QUFDRSxXQUFTLE9BRFg7QUFFRSxXQUFTLE1BRlgsRUFoQ0Y7O0FBb0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcENGOztBQXdDRTtBQUNFLFdBQVMsT0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhDRjs7QUE0Q0U7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUE1Q0YsQ0FuR2E7OztBQW9KYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGOztBQTRDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVDRjs7QUFnREU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoREY7O0FBb0RFO0FBQ0UsV0FBUyxNQURYO0FBRUUsV0FBUyxNQUZYLEVBcERGLENBcEphOzs7QUE2TWIsQ0FBQztBQUNHLFdBQVMsS0FEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVpGOztBQWdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhCRjs7QUFvQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQkY7O0FBd0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeEJGOztBQTRCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVCRjs7QUFnQ0U7QUFDRSxXQUFTLFVBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQ0YsQ0E3TWE7OztBQWtQYixDQUFDO0FBQ0csV0FBUyxNQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLE9BRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxNQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxNQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGOztBQTRDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVDRjs7QUFnREU7QUFDRSxXQUFTLFFBRFg7QUFFRSxXQUFTLE1BRlgsRUFoREYsQ0FsUGE7OztBQXVTYixDQUFDO0FBQ0MsV0FBUyxLQURWO0FBRUMsV0FBUyxNQUZWLEVBQUQsQ0F2U2E7O0FBMlNiLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRjs7QUE0QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1QkY7O0FBZ0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaENGOztBQW9DRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBDRjs7QUF3Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4Q0Y7O0FBNENFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUNGOztBQWdERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhERixDQTNTYTs7O0FBZ1diLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRjs7QUE0QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1QkY7O0FBZ0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaENGOztBQW9DRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBDRjs7QUF3Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4Q0YsQ0FoV2E7OztBQTZZYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxNQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGOztBQTRDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVDRjs7QUFnREU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoREY7O0FBb0RFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcERGOztBQXdERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhERjs7QUE0REU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1REYsQ0E3WWE7OztBQThjYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRixDQTljYTs7O0FBbWZiLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRjs7QUE0QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1QkY7O0FBZ0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaENGOztBQW9DRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBDRjs7QUF3Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4Q0YsQ0FuZmE7OztBQWdpQmIsQ0FBQztBQUNHLFdBQVMsS0FEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVpGOztBQWdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhCRjs7QUFvQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQkY7O0FBd0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeEJGOztBQTRCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVCRjs7QUFnQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQ0Y7O0FBb0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcENGOztBQXdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhDRjs7QUE0Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1Q0Y7O0FBZ0RFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaERGOztBQW9ERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBERjs7QUF3REU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4REY7O0FBNERFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNURGOztBQWdFRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhFRixDQWhpQmE7OztBQXFtQmIsQ0FBQztBQUNHLFdBQVMsS0FEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQVpGOztBQWdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhCRjs7QUFvQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQkY7O0FBd0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeEJGOztBQTRCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVCRjs7QUFnQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQ0Y7O0FBb0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcENGOztBQXdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhDRjs7QUE0Q0U7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUE1Q0Y7O0FBZ0RFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaERGOztBQW9ERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBERjs7QUF3REU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4REY7O0FBNERFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNURGOztBQWdFRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQWhFRjs7QUFvRUU7QUFDRSxXQUFTLFdBRFg7QUFFRSxXQUFTLE1BRlgsRUFwRUYsQ0FybUJhOzs7QUE4cUJiLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRjs7QUE0QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1QkY7O0FBZ0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaENGOztBQW9DRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBDRjs7QUF3Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4Q0Y7O0FBNENFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUNGOztBQWdERTtBQUNFLFdBQVMsWUFEWDtBQUVFLFdBQVMsTUFGWCxFQWhERjs7QUFvREU7QUFDRSxXQUFTLFdBRFg7QUFFRSxXQUFTLE1BRlgsRUFwREYsQ0E5cUJhOzs7QUF1dUJiLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRjs7QUE0QkU7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUE1QkY7O0FBZ0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaENGOztBQW9DRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBDRjs7QUF3Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4Q0Y7O0FBNENFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUNGOztBQWdERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhERjs7QUFvREU7QUFDRSxXQUFTLFlBRFg7QUFFRSxXQUFTLE1BRlgsRUFwREYsQ0F2dUJhOzs7QUFneUJiLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRjs7QUE0QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1QkY7O0FBZ0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaENGOztBQW9DRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBDRjs7QUF3Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4Q0Y7O0FBNENFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUNGOztBQWdERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhERjs7QUFvREU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwREY7O0FBd0RFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeERGOztBQTRERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVERjs7QUFnRUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoRUY7O0FBb0VFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEVGOztBQXdFRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhFRjs7QUE0RUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1RUY7O0FBZ0ZFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEZGLENBaHlCYTs7O0FBcTNCYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGOztBQTRDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVDRjs7QUFnREU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoREY7O0FBb0RFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcERGLENBcjNCYTs7O0FBODZCYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxXQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGLENBOTZCYTs7O0FBbThCYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEdBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRixDQW44QmE7OztBQTQ4QmIsQ0FBQztBQUNHLFdBQVMsS0FEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVpGOztBQWdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhCRjs7QUFvQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQkY7O0FBd0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeEJGOztBQTRCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVCRjs7QUFnQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQ0Y7O0FBb0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcENGOztBQXdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXhDRjs7QUE0Q0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUE1Q0Y7O0FBZ0RFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaERGOztBQW9ERTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBERjs7QUF3REU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4REY7O0FBNERFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNURGOztBQWdFRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhFRjs7QUFvRUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwRUY7O0FBd0VFO0FBQ0UsV0FBUyxXQURYO0FBRUUsV0FBUyxNQUZYLEVBeEVGOztBQTRFRTtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVFRjs7QUFnRkU7QUFDRSxXQUFTLFNBRFg7QUFFRSxXQUFTLE1BRlgsRUFoRkYsQ0E1OEJhOzs7QUFpaUNiLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsYUFEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRjs7QUE0QkU7QUFDRSxXQUFTLFlBRFg7QUFFRSxXQUFTLE1BRlgsRUE1QkY7O0FBZ0NFO0FBQ0UsV0FBUyxZQURYO0FBRUUsV0FBUyxNQUZYLEVBaENGLENBamlDYTs7O0FBc2tDYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLFlBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxXQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGOztBQTRDRTtBQUNFLFdBQVMsV0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVDRjs7QUFnREU7QUFDRSxXQUFTLFNBRFg7QUFFRSxXQUFTLE1BRlgsRUFoREY7O0FBb0RFO0FBQ0UsV0FBUyxZQURYO0FBRUUsV0FBUyxNQUZYLEVBcERGOztBQXdERTtBQUNFLFdBQVMsVUFEWDtBQUVFLFdBQVMsTUFGWCxFQXhERjs7QUE0REU7QUFDRSxXQUFTLFNBRFg7QUFFRSxXQUFTLE1BRlgsRUE1REYsQ0F0a0NhOzs7QUF1b0NiLENBQUM7QUFDRyxXQUFTLEtBRFo7QUFFRyxXQUFTLE1BRlosRUFBRDs7QUFJRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQUpGOztBQVFFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBUkY7O0FBWUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFaRjs7QUFnQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQkY7O0FBb0JFO0FBQ0UsV0FBUyxNQURYO0FBRUUsV0FBUyxNQUZYLEVBcEJGOztBQXdCRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQXhCRixDQXZvQ2E7OztBQW9xQ2IsQ0FBQztBQUNHLFdBQVMsS0FEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVpGOztBQWdCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhCRjs7QUFvQkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQkY7O0FBd0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeEJGOztBQTRCRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVCRjs7QUFnQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQ0Y7O0FBb0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBcENGLENBcHFDYTs7O0FBNnNDYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGOztBQTRDRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQTVDRjs7QUFnREU7QUFDRSxXQUFTLFNBRFg7QUFFRSxXQUFTLE1BRlgsRUFoREY7O0FBb0RFO0FBQ0UsV0FBUyxTQURYO0FBRUUsV0FBUyxNQUZYLEVBcERGLENBN3NDYTs7O0FBc3dDYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxTQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxTQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsU0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLFNBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxZQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGLENBdHdDYTs7O0FBdXlDYixDQUFDO0FBQ0csV0FBUyxLQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGLENBdnlDYTs7O0FBNHpDYixDQUFDO0FBQ0csV0FBUyxPQURaO0FBRUcsV0FBUyxNQUZaLEVBQUQ7O0FBSUU7QUFDRSxXQUFTLE9BRFg7QUFFRSxXQUFTLE1BRlgsRUFKRjs7QUFRRTtBQUNFLFdBQVMsTUFEWDtBQUVFLFdBQVMsTUFGWCxFQVJGOztBQVlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBWkY7O0FBZ0JFO0FBQ0UsV0FBUyxTQURYO0FBRUUsV0FBUyxNQUZYLEVBaEJGOztBQW9CRTtBQUNFLFdBQVMsV0FEWDtBQUVFLFdBQVMsTUFGWCxFQXBCRjs7QUF3QkU7QUFDRSxXQUFTLFdBRFg7QUFFRSxXQUFTLE1BRlgsRUF4QkY7O0FBNEJFO0FBQ0UsV0FBUyxPQURYO0FBRUUsV0FBUyxNQUZYLEVBNUJGOztBQWdDRTtBQUNFLFdBQVMsYUFEWDtBQUVFLFdBQVMsTUFGWCxFQWhDRjs7QUFvQ0U7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUFwQ0Y7O0FBd0NFO0FBQ0UsV0FBUyxNQURYO0FBRUUsV0FBUyxNQUZYLEVBeENGOztBQTRDRTtBQUNFLFdBQVMsVUFEWDtBQUVFLFdBQVMsTUFGWCxFQTVDRjs7QUFnREU7QUFDRSxXQUFTLE1BRFg7QUFFRSxXQUFTLE1BRlgsRUFoREY7O0FBb0RFO0FBQ0UsV0FBUyxPQURYO0FBRUUsV0FBUyxNQUZYLEVBcERGOztBQXdERTtBQUNFLFdBQVMsYUFEWDtBQUVFLFdBQVMsTUFGWCxFQXhERixDQTV6Q2E7OztBQXkzQ2IsQ0FBQztBQUNHLFdBQVMsSUFEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLElBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsTUFGWCxFQVpGOztBQWdCRTtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsTUFGWCxFQWhCRjs7QUFvQkU7QUFDRSxXQUFTLElBRFg7QUFFRSxXQUFTLE1BRlgsRUFwQkY7O0FBd0JFO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxNQUZYLEVBeEJGOztBQTRCRTtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsTUFGWCxFQTVCRjs7QUFnQ0U7QUFDRSxXQUFTLElBRFg7QUFFRSxXQUFTLE1BRlgsRUFoQ0Y7O0FBb0NFO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxNQUZYLEVBcENGOztBQXdDRTtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsTUFGWCxFQXhDRjs7QUE0Q0U7QUFDRSxXQUFTLElBRFg7QUFFRSxXQUFTLE1BRlgsRUE1Q0Y7O0FBZ0RFO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxNQUZYLEVBaERGOztBQW9ERTtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsTUFGWCxFQXBERjs7QUF3REU7QUFDRSxXQUFTLElBRFg7QUFFRSxXQUFTLE1BRlgsRUF4REY7O0FBNERFO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxNQUZYLEVBNURGOztBQWdFRTtBQUNFLFdBQVMsSUFEWDtBQUVFLFdBQVMsTUFGWCxFQWhFRixDQXozQ2E7OztBQTg3Q2IsQ0FBQztBQUNHLFdBQVMsS0FEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxJQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLElBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRixDQTk3Q2E7OztBQTI4Q2IsQ0FBQztBQUNHLFdBQVMsTUFEWjtBQUVHLFdBQVMsTUFGWixFQUFEOztBQUlFO0FBQ0UsV0FBUyxLQURYO0FBRUUsV0FBUyxNQUZYLEVBSkY7O0FBUUU7QUFDRSxXQUFTLEtBRFg7QUFFRSxXQUFTLE1BRlgsRUFSRjs7QUFZRTtBQUNFLFdBQVMsS0FEWDtBQUVFLFdBQVMsTUFGWCxFQVpGLENBMzhDYSxDQUFmLEM7Ozs7QUE2OUNlQSxRIiwiZmlsZSI6IjMxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlICovXG52YXIgY2l0eURhdGEgPSBbXG4gIFt7XG4gICAgXCJsYWJlbFwiOiBcIuW4gui+luWMulwiLFxuICAgIFwidmFsdWVcIjogXCIxMTAxXCJcbiAgfV0sXG4gIFt7XG4gICAgXCJsYWJlbFwiOiBcIuW4gui+luWMulwiLFxuICAgIFwidmFsdWVcIjogXCIxMjAxXCJcbiAgfV0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi55+z5a625bqE5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZSQ5bGx5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi56em55qH5bKb5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6YKv6YO45biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6YKi5Y+w5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5L+d5a6a5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5byg5a625Y+j5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5om/5b635biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rKn5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMwOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5buK5Z2K5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMxMFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6KGh5rC05biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMTMxMVwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuWkquWOn+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWkp+WQjOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumYs+azieW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumVv+ayu+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaZi+WfjuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaclOW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaZi+S4reW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIui/kOWfjuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW/u+W3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MDlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuS4tOaxvuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MTBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWQleaigeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjE0MTFcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLlkbzlkozmtannibnluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLljIXlpLTluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuYzmtbfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLotaTls7DluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpgJrovr3luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTA1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLphILlsJTlpJrmlq/luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTA2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlkbzkvKbotJ3lsJTluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTA3XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlt7Tlvabmt5blsJTluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTA4XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuYzlhbDlr5/luIPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTA5XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlhbTlronnm59cIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTIyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLplKHmnpfpg63li5Lnm59cIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTI1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpmL/mi4nlloTnm59cIixcbiAgICAgIFwidmFsdWVcIjogXCIxNTI5XCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5rKI6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5aSn6L+e5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Z6N5bGx5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5oqa6aG65biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5pys5rqq5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Li55Lic5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6ZSm5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6JCl5Y+j5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Zic5paw5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjEwOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6L696Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjExMFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi55uY6ZSm5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjExMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6ZOB5bKt5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjExMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5pyd6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjExM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6JGr6Iqm5bKb5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMjExNFwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIumVv+aYpeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWQieael+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWbm+W5s+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIui+vea6kOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumAmuWMluW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIueZveWxseW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuadvuWOn+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIueZveWfjuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW7tui+ueacnemynOaXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjIyMjRcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLlk4jlsJTmu6jluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpvZDpvZDlk4jlsJTluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpuKHopb/luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpuaTlspfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlj4zpuK3lsbHluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzA1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlpKfluobluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzA2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkvIrmmKXluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzA3XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkvbPmnKjmlq/luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzA4XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuIPlj7DmsrPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzA5XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLniaHkuLnmsZ/luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzEwXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpu5HmsrPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzExXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLnu6XljJbluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzEyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlpKflhbTlronlsq3lnLDljLpcIixcbiAgICAgIFwidmFsdWVcIjogXCIyMzI3XCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgXCJsYWJlbFwiOiBcIuW4gui+luWMulwiLFxuICAgIFwidmFsdWVcIjogXCIzMTAxXCJcbiAgfV0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5Y2X5Lqs5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5peg6ZSh5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5b6Q5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5bi45bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6IuP5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Y2X6YCa5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6L+e5LqR5riv5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5reu5a6J5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi55uQ5Z+O5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIwOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5oms5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIxMFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6ZWH5rGf5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIxMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rOw5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIxMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5a6/6L+B5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzIxM1wiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuadreW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWugeazouW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIua4qeW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWYieWFtOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIua5luW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIue7jeWFtOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumHkeWNjuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuihouW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuiIn+WxseW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMDlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWPsOW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMTBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuS4veawtOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjMzMTFcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLlkIjogqXluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLoipzmuZbluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLomozln6DluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmt67ljZfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpqazpno3lsbHluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDA1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmt67ljJfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDA2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpk5zpmbXluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDA3XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlronluobluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDA4XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpu4TlsbHluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDEwXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmu4Hlt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDExXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpmJzpmLPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDEyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlrr/lt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDEzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlha3lronluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDE1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkurPlt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDE2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmsaDlt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDE3XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlrqPln47luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNDE4XCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi56aP5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Y6m6Zeo5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6I6G55Sw5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5LiJ5piO5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rOJ5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ryz5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Y2X5bmz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6b6Z5bKp5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5a6B5b635biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiMzUwOVwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuWNl+aYjOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaZr+W+t+mVh+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuiQjeS5oeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuS5neaxn+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaWsOS9meW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIum5sOa9reW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIui1o+W3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWQieWuieW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWunOaYpeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MDlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaKmuW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MTBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuS4iumltuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjM2MTFcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLmtY7ljZfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpnZLlspvluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmt4TljZrluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmnqPluoTluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuJzokKXluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzA1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLng5/lj7DluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzA2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmvY3lnYrluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzA3XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmtY7lroHluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzA4XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLms7DlronluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzA5XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlqIHmtbfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzEwXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLml6XnhafluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzExXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLojrHoipzluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzEyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuLTmsoLluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzEzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlvrflt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzE0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLogYrln47luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzE1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmu6jlt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzE2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLoj4/ms73luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCIzNzE3XCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi6YOR5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5byA5bCB5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rSb6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5bmz6aG25bGx5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5a6J6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6bmk5aOB5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5paw5Lmh5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi54Sm5L2c5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5r+u6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDEwOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6K645piM5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExMFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ryv5rKz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5LiJ6Zeo5bOh5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Y2X6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZWG5LiY5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5L+h6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZGo5Y+j5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6am76ams5bqX5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDExN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi55yB55u06L6W5Y6/57qn6KGM5pS/5Yy65YiSXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDE5MFwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuatpuaxieW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIum7hOefs+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWNgeWgsOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWunOaYjOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuilhOmYs+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumEguW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuiNhumXqOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWtneaEn+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMDlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuiNhuW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMTBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIum7hOWGiOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMTFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWSuOWugeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMTJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumaj+W3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMTNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaBqeaWveWcn+WutuaXj+iLl+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyMjhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuecgeebtOi+luWOv+e6p+ihjOaUv+WMuuWIklwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQyOTBcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLplb/mspnluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmoKrmtLLluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmuZjmva3luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLooaHpmLPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpgrXpmLPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzA1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlsrPpmLPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzA2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLluLjlvrfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzA3XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlvKDlrrbnlYzluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzA4XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLnm4rpmLPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzA5XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpg7Tlt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzEwXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmsLjlt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzExXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmgIDljJbluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzEyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlqITlupXluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzEzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmuZjopb/lnJ/lrrbml4/oi5fml4/oh6rmsrvlt55cIixcbiAgICAgIFwidmFsdWVcIjogXCI0MzMxXCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5bm/5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Z+25YWz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rex5Zyz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi54+g5rW35biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rGV5aS05biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5L2b5bGx5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rGf6Zeo5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rmb5rGf5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6IyC5ZCN5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQwOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6IKH5bqG5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5oOg5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5qKF5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rGV5bC+5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rKz5rqQ5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Ziz5rGf5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5riF6L+c5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Lic6I6e5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQxOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Lit5bGx5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQyMFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5r2u5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQ1MVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5o+t6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQ1MlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5LqR5rWu5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNDQ1M1wiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuWNl+WugeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuafs+W3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuahguael+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaip+W3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWMl+a1t+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumYsuWfjua4r+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumSpuW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIui0tea4r+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIueOieael+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MDlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIueZvuiJsuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MTBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIui0uuW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MTFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuays+axoOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MTJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuadpeWuvuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MTNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW0h+W3puW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjQ1MTRcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLmtbflj6PluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0NjAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuInkuprluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0NjAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuInmspnluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0NjAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlhIvlt57luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0NjA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLnnIHnm7Tovpbljr/nuqfooYzmlL/ljLrliJJcIixcbiAgICAgIFwidmFsdWVcIjogXCI0NjkwXCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5biC6L6W5Yy6XCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTAwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Y6/XCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTAwMlwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuaIkOmDveW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuiHqui0oeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaUgOaeneiKseW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuazuOW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW+t+mYs+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIue7temYs+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW5v+WFg+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumBguWugeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMDlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWGheaxn+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuS5kOWxseW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWNl+WFheW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuecieWxseW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWunOWuvuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW5v+WuieW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIui+vuW3nuW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumbheWuieW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMThcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW3tOS4reW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMTlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIui1hOmYs+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMjBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumYv+WdneiXj+aXj+e+jOaXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMzJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIueUmOWtnOiXj+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMzNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWHieWxseW9neaXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjUxMzRcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLotLXpmLPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlha3nm5jmsLTluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpgbXkuYnluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlronpobrluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmr5XoioLluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjA1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpk5zku4HluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjA2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpu5Topb/ljZfluIPkvp3ml4/oi5fml4/oh6rmsrvlt55cIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjIzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpu5TkuJzljZfoi5fml4/kvpfml4/oh6rmsrvlt55cIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjI2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpu5TljZfluIPkvp3ml4/oi5fml4/oh6rmsrvlt55cIixcbiAgICAgIFwidmFsdWVcIjogXCI1MjI3XCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5piG5piO5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5puy6Z2W5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi546J5rqq5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5L+d5bGx5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5pit6YCa5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Li95rGf5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5pmu5rSx5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Li05rKn5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMwOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5qWa6ZuE5b2d5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMyM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi57qi5rKz5ZOI5bC85peP5b2d5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMyNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5paH5bGx5aOu5peP6IuX5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMyNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6KW/5Y+M54mI57qz5YKj5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMyOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5aSn55CG55m95peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMyOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5b635a6P5YKj5peP5pmv6aKH5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMzMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5oCS5rGf5YKI5YOz5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMzM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6L+q5bqG6JeP5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNTMzNFwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuaLieiQqOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjU0MDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaXpeWWgOWImeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjU0MDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaYjOmDveW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjU0MDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuael+iKneW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjU0MDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWxseWNl+W4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjU0MDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumCo+absuWcsOWMulwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjU0MjRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumYv+mHjOWcsOWMulwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjU0MjVcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLopb/lronluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLpk5zlt53luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlrp3puKHluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlkrjpmLPluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmuK3ljZfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTA1XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlu7blronluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTA2XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmsYnkuK3luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTA3XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmpobmnpfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTA4XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlronlurfluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTA5XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLllYbmtJvluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2MTEwXCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5YWw5bee5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZiJ5bOq5YWz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6YeR5piM5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi55m96ZO25biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5aSp5rC05biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5q2m5aiB5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwNlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5byg5o6W5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5bmz5YeJ5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6YWS5rOJ5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIwOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5bqG6Ziz5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIxMFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5a6a6KW/5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIxMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6ZmH5Y2X5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIxMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Li05aSP5Zue5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIyOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi55SY5Y2X6JeP5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjIzMFwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuilv+WugeW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIua1t+S4nOW4glwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIua1t+WMl+iXj+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMjJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIum7hOWNl+iXj+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMjNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIua1t+WNl+iXj+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMjVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaenOa0m+iXj+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMjZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIueOieagkeiXj+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMjdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIua1t+ilv+iSmeWPpOaXj+iXj+aXj+iHquayu+W3nlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjYzMjhcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLpk7blt53luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NDAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLnn7PlmLTlsbHluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NDAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlkLTlv6DluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NDAzXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLlm7rljp/luIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NDA0XCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuK3ljavluIJcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NDA1XCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5LmM6bKB5pyo6b2Q5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5YWL5ouJ546b5L6d5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZCQ6bKB55Wq5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUwNFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZOI5a+G5biCXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUwNVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5piM5ZCJ5Zue5peP6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUyM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5Y2a5bCU5aGU5ouJ6JKZ5Y+k6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUyN1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5be06Z+z6YOt5qWe6JKZ5Y+k6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUyOFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Zi/5YWL6IuP5Zyw5Yy6XCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUyOVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5YWL5a2c5YuS6IuP5p+v5bCU5YWL5a2c6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUzMFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZaA5LuA5Zyw5Yy6XCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUzMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5ZKM55Sw5Zyw5Yy6XCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjUzMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5LyK54qB5ZOI6JCo5YWL6Ieq5rK75beeXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjU0MFwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5aGU5Z+O5Zyw5Yy6XCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjU0MlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Zi/5YuS5rOw5Zyw5Yy6XCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjU0M1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Ieq5rK75Yy655u06L6W5Y6/57qn6KGM5pS/5Yy65YiSXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjU5MFwiXG4gICAgfVxuICBdLFxuICBbe1xuICAgICAgXCJsYWJlbFwiOiBcIuWPsOWMl1wiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIumrmOmbhFwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWfuumahlwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWPsOS4rVwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWPsOWNl1wiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuaWsOeruVwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWYieS5iVwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDdcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWunOWFsFwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDhcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuahg+WbrVwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MDlcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuiLl+agl1wiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTBcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuW9sOWMllwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTFcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWNl+aKlVwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTJcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuS6keael1wiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTNcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWxj+S4nFwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTRcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuWPsOS4nFwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTVcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIuiKseiOslwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTZcIlxuICAgIH0sXG4gICAge1xuICAgICAgXCJsYWJlbFwiOiBcIua+jua5llwiLFxuICAgICAgXCJ2YWx1ZVwiOiBcIjY2MTdcIlxuICAgIH1cbiAgXSxcbiAgW3tcbiAgICAgIFwibGFiZWxcIjogXCLpppnmuK/lsptcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NzAxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLkuZ3pvplcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NzAyXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIFwibGFiZWxcIjogXCLmlrDnlYxcIixcbiAgICAgIFwidmFsdWVcIjogXCI2NzAzXCJcbiAgICB9XG4gIF0sXG4gIFt7XG4gICAgICBcImxhYmVsXCI6IFwi5r6z6Zeo5Y2K5bKbXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjgwMVwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi5rC55LuU5bKbXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjgwMlwiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Lev546v5bKbXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjgwM1wiXG4gICAgfSxcbiAgICB7XG4gICAgICBcImxhYmVsXCI6IFwi6Lev5rC55Z+OXCIsXG4gICAgICBcInZhbHVlXCI6IFwiNjgwNFwiXG4gICAgfVxuICBdXG5dXG5leHBvcnQgZGVmYXVsdCBjaXR5RGF0YTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///314\n");

/***/ }),

/***/ 315:
/*!****************************************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/components/mpvue-citypicker/city-data/area.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* eslint-disable */\nvar areaData = [\n[\n[{\n  \"label\": \"东城区\",\n  \"value\": \"110101\" },\n\n{\n  \"label\": \"西城区\",\n  \"value\": \"110102\" },\n\n{\n  \"label\": \"朝阳区\",\n  \"value\": \"110105\" },\n\n{\n  \"label\": \"丰台区\",\n  \"value\": \"110106\" },\n\n{\n  \"label\": \"石景山区\",\n  \"value\": \"110107\" },\n\n{\n  \"label\": \"海淀区\",\n  \"value\": \"110108\" },\n\n{\n  \"label\": \"门头沟区\",\n  \"value\": \"110109\" },\n\n{\n  \"label\": \"房山区\",\n  \"value\": \"110111\" },\n\n{\n  \"label\": \"通州区\",\n  \"value\": \"110112\" },\n\n{\n  \"label\": \"顺义区\",\n  \"value\": \"110113\" },\n\n{\n  \"label\": \"昌平区\",\n  \"value\": \"110114\" },\n\n{\n  \"label\": \"大兴区\",\n  \"value\": \"110115\" },\n\n{\n  \"label\": \"怀柔区\",\n  \"value\": \"110116\" },\n\n{\n  \"label\": \"平谷区\",\n  \"value\": \"110117\" },\n\n{\n  \"label\": \"密云区\",\n  \"value\": \"110118\" },\n\n{\n  \"label\": \"延庆区\",\n  \"value\": \"110119\" }]],\n\n\n\n[\n[{\n  \"label\": \"和平区\",\n  \"value\": \"120101\" },\n\n{\n  \"label\": \"河东区\",\n  \"value\": \"120102\" },\n\n{\n  \"label\": \"河西区\",\n  \"value\": \"120103\" },\n\n{\n  \"label\": \"南开区\",\n  \"value\": \"120104\" },\n\n{\n  \"label\": \"河北区\",\n  \"value\": \"120105\" },\n\n{\n  \"label\": \"红桥区\",\n  \"value\": \"120106\" },\n\n{\n  \"label\": \"东丽区\",\n  \"value\": \"120110\" },\n\n{\n  \"label\": \"西青区\",\n  \"value\": \"120111\" },\n\n{\n  \"label\": \"津南区\",\n  \"value\": \"120112\" },\n\n{\n  \"label\": \"北辰区\",\n  \"value\": \"120113\" },\n\n{\n  \"label\": \"武清区\",\n  \"value\": \"120114\" },\n\n{\n  \"label\": \"宝坻区\",\n  \"value\": \"120115\" },\n\n{\n  \"label\": \"滨海新区\",\n  \"value\": \"120116\" },\n\n{\n  \"label\": \"宁河区\",\n  \"value\": \"120117\" },\n\n{\n  \"label\": \"静海区\",\n  \"value\": \"120118\" },\n\n{\n  \"label\": \"蓟州区\",\n  \"value\": \"120119\" }]],\n\n\n\n[\n[{\n  \"label\": \"长安区\",\n  \"value\": \"130102\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130104\" },\n\n{\n  \"label\": \"新华区\",\n  \"value\": \"130105\" },\n\n{\n  \"label\": \"井陉矿区\",\n  \"value\": \"130107\" },\n\n{\n  \"label\": \"裕华区\",\n  \"value\": \"130108\" },\n\n{\n  \"label\": \"藁城区\",\n  \"value\": \"130109\" },\n\n{\n  \"label\": \"鹿泉区\",\n  \"value\": \"130110\" },\n\n{\n  \"label\": \"栾城区\",\n  \"value\": \"130111\" },\n\n{\n  \"label\": \"井陉县\",\n  \"value\": \"130121\" },\n\n{\n  \"label\": \"正定县\",\n  \"value\": \"130123\" },\n\n{\n  \"label\": \"行唐县\",\n  \"value\": \"130125\" },\n\n{\n  \"label\": \"灵寿县\",\n  \"value\": \"130126\" },\n\n{\n  \"label\": \"高邑县\",\n  \"value\": \"130127\" },\n\n{\n  \"label\": \"深泽县\",\n  \"value\": \"130128\" },\n\n{\n  \"label\": \"赞皇县\",\n  \"value\": \"130129\" },\n\n{\n  \"label\": \"无极县\",\n  \"value\": \"130130\" },\n\n{\n  \"label\": \"平山县\",\n  \"value\": \"130131\" },\n\n{\n  \"label\": \"元氏县\",\n  \"value\": \"130132\" },\n\n{\n  \"label\": \"赵县\",\n  \"value\": \"130133\" },\n\n{\n  \"label\": \"石家庄高新技术产业开发区\",\n  \"value\": \"130171\" },\n\n{\n  \"label\": \"石家庄循环化工园区\",\n  \"value\": \"130172\" },\n\n{\n  \"label\": \"辛集市\",\n  \"value\": \"130181\" },\n\n{\n  \"label\": \"晋州市\",\n  \"value\": \"130183\" },\n\n{\n  \"label\": \"新乐市\",\n  \"value\": \"130184\" }],\n\n\n[{\n  \"label\": \"路南区\",\n  \"value\": \"130202\" },\n\n{\n  \"label\": \"路北区\",\n  \"value\": \"130203\" },\n\n{\n  \"label\": \"古冶区\",\n  \"value\": \"130204\" },\n\n{\n  \"label\": \"开平区\",\n  \"value\": \"130205\" },\n\n{\n  \"label\": \"丰南区\",\n  \"value\": \"130207\" },\n\n{\n  \"label\": \"丰润区\",\n  \"value\": \"130208\" },\n\n{\n  \"label\": \"曹妃甸区\",\n  \"value\": \"130209\" },\n\n{\n  \"label\": \"滦县\",\n  \"value\": \"130223\" },\n\n{\n  \"label\": \"滦南县\",\n  \"value\": \"130224\" },\n\n{\n  \"label\": \"乐亭县\",\n  \"value\": \"130225\" },\n\n{\n  \"label\": \"迁西县\",\n  \"value\": \"130227\" },\n\n{\n  \"label\": \"玉田县\",\n  \"value\": \"130229\" },\n\n{\n  \"label\": \"唐山市芦台经济技术开发区\",\n  \"value\": \"130271\" },\n\n{\n  \"label\": \"唐山市汉沽管理区\",\n  \"value\": \"130272\" },\n\n{\n  \"label\": \"唐山高新技术产业开发区\",\n  \"value\": \"130273\" },\n\n{\n  \"label\": \"河北唐山海港经济开发区\",\n  \"value\": \"130274\" },\n\n{\n  \"label\": \"遵化市\",\n  \"value\": \"130281\" },\n\n{\n  \"label\": \"迁安市\",\n  \"value\": \"130283\" }],\n\n\n[{\n  \"label\": \"海港区\",\n  \"value\": \"130302\" },\n\n{\n  \"label\": \"山海关区\",\n  \"value\": \"130303\" },\n\n{\n  \"label\": \"北戴河区\",\n  \"value\": \"130304\" },\n\n{\n  \"label\": \"抚宁区\",\n  \"value\": \"130306\" },\n\n{\n  \"label\": \"青龙满族自治县\",\n  \"value\": \"130321\" },\n\n{\n  \"label\": \"昌黎县\",\n  \"value\": \"130322\" },\n\n{\n  \"label\": \"卢龙县\",\n  \"value\": \"130324\" },\n\n{\n  \"label\": \"秦皇岛市经济技术开发区\",\n  \"value\": \"130371\" },\n\n{\n  \"label\": \"北戴河新区\",\n  \"value\": \"130372\" }],\n\n\n[{\n  \"label\": \"邯山区\",\n  \"value\": \"130402\" },\n\n{\n  \"label\": \"丛台区\",\n  \"value\": \"130403\" },\n\n{\n  \"label\": \"复兴区\",\n  \"value\": \"130404\" },\n\n{\n  \"label\": \"峰峰矿区\",\n  \"value\": \"130406\" },\n\n{\n  \"label\": \"肥乡区\",\n  \"value\": \"130407\" },\n\n{\n  \"label\": \"永年区\",\n  \"value\": \"130408\" },\n\n{\n  \"label\": \"临漳县\",\n  \"value\": \"130423\" },\n\n{\n  \"label\": \"成安县\",\n  \"value\": \"130424\" },\n\n{\n  \"label\": \"大名县\",\n  \"value\": \"130425\" },\n\n{\n  \"label\": \"涉县\",\n  \"value\": \"130426\" },\n\n{\n  \"label\": \"磁县\",\n  \"value\": \"130427\" },\n\n{\n  \"label\": \"邱县\",\n  \"value\": \"130430\" },\n\n{\n  \"label\": \"鸡泽县\",\n  \"value\": \"130431\" },\n\n{\n  \"label\": \"广平县\",\n  \"value\": \"130432\" },\n\n{\n  \"label\": \"馆陶县\",\n  \"value\": \"130433\" },\n\n{\n  \"label\": \"魏县\",\n  \"value\": \"130434\" },\n\n{\n  \"label\": \"曲周县\",\n  \"value\": \"130435\" },\n\n{\n  \"label\": \"邯郸经济技术开发区\",\n  \"value\": \"130471\" },\n\n{\n  \"label\": \"邯郸冀南新区\",\n  \"value\": \"130473\" },\n\n{\n  \"label\": \"武安市\",\n  \"value\": \"130481\" }],\n\n\n[{\n  \"label\": \"桥东区\",\n  \"value\": \"130502\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130503\" },\n\n{\n  \"label\": \"邢台县\",\n  \"value\": \"130521\" },\n\n{\n  \"label\": \"临城县\",\n  \"value\": \"130522\" },\n\n{\n  \"label\": \"内丘县\",\n  \"value\": \"130523\" },\n\n{\n  \"label\": \"柏乡县\",\n  \"value\": \"130524\" },\n\n{\n  \"label\": \"隆尧县\",\n  \"value\": \"130525\" },\n\n{\n  \"label\": \"任县\",\n  \"value\": \"130526\" },\n\n{\n  \"label\": \"南和县\",\n  \"value\": \"130527\" },\n\n{\n  \"label\": \"宁晋县\",\n  \"value\": \"130528\" },\n\n{\n  \"label\": \"巨鹿县\",\n  \"value\": \"130529\" },\n\n{\n  \"label\": \"新河县\",\n  \"value\": \"130530\" },\n\n{\n  \"label\": \"广宗县\",\n  \"value\": \"130531\" },\n\n{\n  \"label\": \"平乡县\",\n  \"value\": \"130532\" },\n\n{\n  \"label\": \"威县\",\n  \"value\": \"130533\" },\n\n{\n  \"label\": \"清河县\",\n  \"value\": \"130534\" },\n\n{\n  \"label\": \"临西县\",\n  \"value\": \"130535\" },\n\n{\n  \"label\": \"河北邢台经济开发区\",\n  \"value\": \"130571\" },\n\n{\n  \"label\": \"南宫市\",\n  \"value\": \"130581\" },\n\n{\n  \"label\": \"沙河市\",\n  \"value\": \"130582\" }],\n\n\n[{\n  \"label\": \"竞秀区\",\n  \"value\": \"130602\" },\n\n{\n  \"label\": \"莲池区\",\n  \"value\": \"130606\" },\n\n{\n  \"label\": \"满城区\",\n  \"value\": \"130607\" },\n\n{\n  \"label\": \"清苑区\",\n  \"value\": \"130608\" },\n\n{\n  \"label\": \"徐水区\",\n  \"value\": \"130609\" },\n\n{\n  \"label\": \"涞水县\",\n  \"value\": \"130623\" },\n\n{\n  \"label\": \"阜平县\",\n  \"value\": \"130624\" },\n\n{\n  \"label\": \"定兴县\",\n  \"value\": \"130626\" },\n\n{\n  \"label\": \"唐县\",\n  \"value\": \"130627\" },\n\n{\n  \"label\": \"高阳县\",\n  \"value\": \"130628\" },\n\n{\n  \"label\": \"容城县\",\n  \"value\": \"130629\" },\n\n{\n  \"label\": \"涞源县\",\n  \"value\": \"130630\" },\n\n{\n  \"label\": \"望都县\",\n  \"value\": \"130631\" },\n\n{\n  \"label\": \"安新县\",\n  \"value\": \"130632\" },\n\n{\n  \"label\": \"易县\",\n  \"value\": \"130633\" },\n\n{\n  \"label\": \"曲阳县\",\n  \"value\": \"130634\" },\n\n{\n  \"label\": \"蠡县\",\n  \"value\": \"130635\" },\n\n{\n  \"label\": \"顺平县\",\n  \"value\": \"130636\" },\n\n{\n  \"label\": \"博野县\",\n  \"value\": \"130637\" },\n\n{\n  \"label\": \"雄县\",\n  \"value\": \"130638\" },\n\n{\n  \"label\": \"保定高新技术产业开发区\",\n  \"value\": \"130671\" },\n\n{\n  \"label\": \"保定白沟新城\",\n  \"value\": \"130672\" },\n\n{\n  \"label\": \"涿州市\",\n  \"value\": \"130681\" },\n\n{\n  \"label\": \"定州市\",\n  \"value\": \"130682\" },\n\n{\n  \"label\": \"安国市\",\n  \"value\": \"130683\" },\n\n{\n  \"label\": \"高碑店市\",\n  \"value\": \"130684\" }],\n\n\n[{\n  \"label\": \"桥东区\",\n  \"value\": \"130702\" },\n\n{\n  \"label\": \"桥西区\",\n  \"value\": \"130703\" },\n\n{\n  \"label\": \"宣化区\",\n  \"value\": \"130705\" },\n\n{\n  \"label\": \"下花园区\",\n  \"value\": \"130706\" },\n\n{\n  \"label\": \"万全区\",\n  \"value\": \"130708\" },\n\n{\n  \"label\": \"崇礼区\",\n  \"value\": \"130709\" },\n\n{\n  \"label\": \"张北县\",\n  \"value\": \"130722\" },\n\n{\n  \"label\": \"康保县\",\n  \"value\": \"130723\" },\n\n{\n  \"label\": \"沽源县\",\n  \"value\": \"130724\" },\n\n{\n  \"label\": \"尚义县\",\n  \"value\": \"130725\" },\n\n{\n  \"label\": \"蔚县\",\n  \"value\": \"130726\" },\n\n{\n  \"label\": \"阳原县\",\n  \"value\": \"130727\" },\n\n{\n  \"label\": \"怀安县\",\n  \"value\": \"130728\" },\n\n{\n  \"label\": \"怀来县\",\n  \"value\": \"130730\" },\n\n{\n  \"label\": \"涿鹿县\",\n  \"value\": \"130731\" },\n\n{\n  \"label\": \"赤城县\",\n  \"value\": \"130732\" },\n\n{\n  \"label\": \"张家口市高新技术产业开发区\",\n  \"value\": \"130771\" },\n\n{\n  \"label\": \"张家口市察北管理区\",\n  \"value\": \"130772\" },\n\n{\n  \"label\": \"张家口市塞北管理区\",\n  \"value\": \"130773\" }],\n\n\n[{\n  \"label\": \"双桥区\",\n  \"value\": \"130802\" },\n\n{\n  \"label\": \"双滦区\",\n  \"value\": \"130803\" },\n\n{\n  \"label\": \"鹰手营子矿区\",\n  \"value\": \"130804\" },\n\n{\n  \"label\": \"承德县\",\n  \"value\": \"130821\" },\n\n{\n  \"label\": \"兴隆县\",\n  \"value\": \"130822\" },\n\n{\n  \"label\": \"滦平县\",\n  \"value\": \"130824\" },\n\n{\n  \"label\": \"隆化县\",\n  \"value\": \"130825\" },\n\n{\n  \"label\": \"丰宁满族自治县\",\n  \"value\": \"130826\" },\n\n{\n  \"label\": \"宽城满族自治县\",\n  \"value\": \"130827\" },\n\n{\n  \"label\": \"围场满族蒙古族自治县\",\n  \"value\": \"130828\" },\n\n{\n  \"label\": \"承德高新技术产业开发区\",\n  \"value\": \"130871\" },\n\n{\n  \"label\": \"平泉市\",\n  \"value\": \"130881\" }],\n\n\n[{\n  \"label\": \"新华区\",\n  \"value\": \"130902\" },\n\n{\n  \"label\": \"运河区\",\n  \"value\": \"130903\" },\n\n{\n  \"label\": \"沧县\",\n  \"value\": \"130921\" },\n\n{\n  \"label\": \"青县\",\n  \"value\": \"130922\" },\n\n{\n  \"label\": \"东光县\",\n  \"value\": \"130923\" },\n\n{\n  \"label\": \"海兴县\",\n  \"value\": \"130924\" },\n\n{\n  \"label\": \"盐山县\",\n  \"value\": \"130925\" },\n\n{\n  \"label\": \"肃宁县\",\n  \"value\": \"130926\" },\n\n{\n  \"label\": \"南皮县\",\n  \"value\": \"130927\" },\n\n{\n  \"label\": \"吴桥县\",\n  \"value\": \"130928\" },\n\n{\n  \"label\": \"献县\",\n  \"value\": \"130929\" },\n\n{\n  \"label\": \"孟村回族自治县\",\n  \"value\": \"130930\" },\n\n{\n  \"label\": \"河北沧州经济开发区\",\n  \"value\": \"130971\" },\n\n{\n  \"label\": \"沧州高新技术产业开发区\",\n  \"value\": \"130972\" },\n\n{\n  \"label\": \"沧州渤海新区\",\n  \"value\": \"130973\" },\n\n{\n  \"label\": \"泊头市\",\n  \"value\": \"130981\" },\n\n{\n  \"label\": \"任丘市\",\n  \"value\": \"130982\" },\n\n{\n  \"label\": \"黄骅市\",\n  \"value\": \"130983\" },\n\n{\n  \"label\": \"河间市\",\n  \"value\": \"130984\" }],\n\n\n[{\n  \"label\": \"安次区\",\n  \"value\": \"131002\" },\n\n{\n  \"label\": \"广阳区\",\n  \"value\": \"131003\" },\n\n{\n  \"label\": \"固安县\",\n  \"value\": \"131022\" },\n\n{\n  \"label\": \"永清县\",\n  \"value\": \"131023\" },\n\n{\n  \"label\": \"香河县\",\n  \"value\": \"131024\" },\n\n{\n  \"label\": \"大城县\",\n  \"value\": \"131025\" },\n\n{\n  \"label\": \"文安县\",\n  \"value\": \"131026\" },\n\n{\n  \"label\": \"大厂回族自治县\",\n  \"value\": \"131028\" },\n\n{\n  \"label\": \"廊坊经济技术开发区\",\n  \"value\": \"131071\" },\n\n{\n  \"label\": \"霸州市\",\n  \"value\": \"131081\" },\n\n{\n  \"label\": \"三河市\",\n  \"value\": \"131082\" }],\n\n\n[{\n  \"label\": \"桃城区\",\n  \"value\": \"131102\" },\n\n{\n  \"label\": \"冀州区\",\n  \"value\": \"131103\" },\n\n{\n  \"label\": \"枣强县\",\n  \"value\": \"131121\" },\n\n{\n  \"label\": \"武邑县\",\n  \"value\": \"131122\" },\n\n{\n  \"label\": \"武强县\",\n  \"value\": \"131123\" },\n\n{\n  \"label\": \"饶阳县\",\n  \"value\": \"131124\" },\n\n{\n  \"label\": \"安平县\",\n  \"value\": \"131125\" },\n\n{\n  \"label\": \"故城县\",\n  \"value\": \"131126\" },\n\n{\n  \"label\": \"景县\",\n  \"value\": \"131127\" },\n\n{\n  \"label\": \"阜城县\",\n  \"value\": \"131128\" },\n\n{\n  \"label\": \"河北衡水经济开发区\",\n  \"value\": \"131171\" },\n\n{\n  \"label\": \"衡水滨湖新区\",\n  \"value\": \"131172\" },\n\n{\n  \"label\": \"深州市\",\n  \"value\": \"131182\" }]],\n\n\n\n[\n[{\n  \"label\": \"小店区\",\n  \"value\": \"140105\" },\n\n{\n  \"label\": \"迎泽区\",\n  \"value\": \"140106\" },\n\n{\n  \"label\": \"杏花岭区\",\n  \"value\": \"140107\" },\n\n{\n  \"label\": \"尖草坪区\",\n  \"value\": \"140108\" },\n\n{\n  \"label\": \"万柏林区\",\n  \"value\": \"140109\" },\n\n{\n  \"label\": \"晋源区\",\n  \"value\": \"140110\" },\n\n{\n  \"label\": \"清徐县\",\n  \"value\": \"140121\" },\n\n{\n  \"label\": \"阳曲县\",\n  \"value\": \"140122\" },\n\n{\n  \"label\": \"娄烦县\",\n  \"value\": \"140123\" },\n\n{\n  \"label\": \"山西转型综合改革示范区\",\n  \"value\": \"140171\" },\n\n{\n  \"label\": \"古交市\",\n  \"value\": \"140181\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140202\" },\n\n{\n  \"label\": \"矿区\",\n  \"value\": \"140203\" },\n\n{\n  \"label\": \"南郊区\",\n  \"value\": \"140211\" },\n\n{\n  \"label\": \"新荣区\",\n  \"value\": \"140212\" },\n\n{\n  \"label\": \"阳高县\",\n  \"value\": \"140221\" },\n\n{\n  \"label\": \"天镇县\",\n  \"value\": \"140222\" },\n\n{\n  \"label\": \"广灵县\",\n  \"value\": \"140223\" },\n\n{\n  \"label\": \"灵丘县\",\n  \"value\": \"140224\" },\n\n{\n  \"label\": \"浑源县\",\n  \"value\": \"140225\" },\n\n{\n  \"label\": \"左云县\",\n  \"value\": \"140226\" },\n\n{\n  \"label\": \"大同县\",\n  \"value\": \"140227\" },\n\n{\n  \"label\": \"山西大同经济开发区\",\n  \"value\": \"140271\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140302\" },\n\n{\n  \"label\": \"矿区\",\n  \"value\": \"140303\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"140311\" },\n\n{\n  \"label\": \"平定县\",\n  \"value\": \"140321\" },\n\n{\n  \"label\": \"盂县\",\n  \"value\": \"140322\" },\n\n{\n  \"label\": \"山西阳泉经济开发区\",\n  \"value\": \"140371\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140402\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"140411\" },\n\n{\n  \"label\": \"长治县\",\n  \"value\": \"140421\" },\n\n{\n  \"label\": \"襄垣县\",\n  \"value\": \"140423\" },\n\n{\n  \"label\": \"屯留县\",\n  \"value\": \"140424\" },\n\n{\n  \"label\": \"平顺县\",\n  \"value\": \"140425\" },\n\n{\n  \"label\": \"黎城县\",\n  \"value\": \"140426\" },\n\n{\n  \"label\": \"壶关县\",\n  \"value\": \"140427\" },\n\n{\n  \"label\": \"长子县\",\n  \"value\": \"140428\" },\n\n{\n  \"label\": \"武乡县\",\n  \"value\": \"140429\" },\n\n{\n  \"label\": \"沁县\",\n  \"value\": \"140430\" },\n\n{\n  \"label\": \"沁源县\",\n  \"value\": \"140431\" },\n\n{\n  \"label\": \"山西长治高新技术产业园区\",\n  \"value\": \"140471\" },\n\n{\n  \"label\": \"潞城市\",\n  \"value\": \"140481\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"140502\" },\n\n{\n  \"label\": \"沁水县\",\n  \"value\": \"140521\" },\n\n{\n  \"label\": \"阳城县\",\n  \"value\": \"140522\" },\n\n{\n  \"label\": \"陵川县\",\n  \"value\": \"140524\" },\n\n{\n  \"label\": \"泽州县\",\n  \"value\": \"140525\" },\n\n{\n  \"label\": \"高平市\",\n  \"value\": \"140581\" }],\n\n\n[{\n  \"label\": \"朔城区\",\n  \"value\": \"140602\" },\n\n{\n  \"label\": \"平鲁区\",\n  \"value\": \"140603\" },\n\n{\n  \"label\": \"山阴县\",\n  \"value\": \"140621\" },\n\n{\n  \"label\": \"应县\",\n  \"value\": \"140622\" },\n\n{\n  \"label\": \"右玉县\",\n  \"value\": \"140623\" },\n\n{\n  \"label\": \"怀仁县\",\n  \"value\": \"140624\" },\n\n{\n  \"label\": \"山西朔州经济开发区\",\n  \"value\": \"140671\" }],\n\n\n[{\n  \"label\": \"榆次区\",\n  \"value\": \"140702\" },\n\n{\n  \"label\": \"榆社县\",\n  \"value\": \"140721\" },\n\n{\n  \"label\": \"左权县\",\n  \"value\": \"140722\" },\n\n{\n  \"label\": \"和顺县\",\n  \"value\": \"140723\" },\n\n{\n  \"label\": \"昔阳县\",\n  \"value\": \"140724\" },\n\n{\n  \"label\": \"寿阳县\",\n  \"value\": \"140725\" },\n\n{\n  \"label\": \"太谷县\",\n  \"value\": \"140726\" },\n\n{\n  \"label\": \"祁县\",\n  \"value\": \"140727\" },\n\n{\n  \"label\": \"平遥县\",\n  \"value\": \"140728\" },\n\n{\n  \"label\": \"灵石县\",\n  \"value\": \"140729\" },\n\n{\n  \"label\": \"介休市\",\n  \"value\": \"140781\" }],\n\n\n[{\n  \"label\": \"盐湖区\",\n  \"value\": \"140802\" },\n\n{\n  \"label\": \"临猗县\",\n  \"value\": \"140821\" },\n\n{\n  \"label\": \"万荣县\",\n  \"value\": \"140822\" },\n\n{\n  \"label\": \"闻喜县\",\n  \"value\": \"140823\" },\n\n{\n  \"label\": \"稷山县\",\n  \"value\": \"140824\" },\n\n{\n  \"label\": \"新绛县\",\n  \"value\": \"140825\" },\n\n{\n  \"label\": \"绛县\",\n  \"value\": \"140826\" },\n\n{\n  \"label\": \"垣曲县\",\n  \"value\": \"140827\" },\n\n{\n  \"label\": \"夏县\",\n  \"value\": \"140828\" },\n\n{\n  \"label\": \"平陆县\",\n  \"value\": \"140829\" },\n\n{\n  \"label\": \"芮城县\",\n  \"value\": \"140830\" },\n\n{\n  \"label\": \"永济市\",\n  \"value\": \"140881\" },\n\n{\n  \"label\": \"河津市\",\n  \"value\": \"140882\" }],\n\n\n[{\n  \"label\": \"忻府区\",\n  \"value\": \"140902\" },\n\n{\n  \"label\": \"定襄县\",\n  \"value\": \"140921\" },\n\n{\n  \"label\": \"五台县\",\n  \"value\": \"140922\" },\n\n{\n  \"label\": \"代县\",\n  \"value\": \"140923\" },\n\n{\n  \"label\": \"繁峙县\",\n  \"value\": \"140924\" },\n\n{\n  \"label\": \"宁武县\",\n  \"value\": \"140925\" },\n\n{\n  \"label\": \"静乐县\",\n  \"value\": \"140926\" },\n\n{\n  \"label\": \"神池县\",\n  \"value\": \"140927\" },\n\n{\n  \"label\": \"五寨县\",\n  \"value\": \"140928\" },\n\n{\n  \"label\": \"岢岚县\",\n  \"value\": \"140929\" },\n\n{\n  \"label\": \"河曲县\",\n  \"value\": \"140930\" },\n\n{\n  \"label\": \"保德县\",\n  \"value\": \"140931\" },\n\n{\n  \"label\": \"偏关县\",\n  \"value\": \"140932\" },\n\n{\n  \"label\": \"五台山风景名胜区\",\n  \"value\": \"140971\" },\n\n{\n  \"label\": \"原平市\",\n  \"value\": \"140981\" }],\n\n\n[{\n  \"label\": \"尧都区\",\n  \"value\": \"141002\" },\n\n{\n  \"label\": \"曲沃县\",\n  \"value\": \"141021\" },\n\n{\n  \"label\": \"翼城县\",\n  \"value\": \"141022\" },\n\n{\n  \"label\": \"襄汾县\",\n  \"value\": \"141023\" },\n\n{\n  \"label\": \"洪洞县\",\n  \"value\": \"141024\" },\n\n{\n  \"label\": \"古县\",\n  \"value\": \"141025\" },\n\n{\n  \"label\": \"安泽县\",\n  \"value\": \"141026\" },\n\n{\n  \"label\": \"浮山县\",\n  \"value\": \"141027\" },\n\n{\n  \"label\": \"吉县\",\n  \"value\": \"141028\" },\n\n{\n  \"label\": \"乡宁县\",\n  \"value\": \"141029\" },\n\n{\n  \"label\": \"大宁县\",\n  \"value\": \"141030\" },\n\n{\n  \"label\": \"隰县\",\n  \"value\": \"141031\" },\n\n{\n  \"label\": \"永和县\",\n  \"value\": \"141032\" },\n\n{\n  \"label\": \"蒲县\",\n  \"value\": \"141033\" },\n\n{\n  \"label\": \"汾西县\",\n  \"value\": \"141034\" },\n\n{\n  \"label\": \"侯马市\",\n  \"value\": \"141081\" },\n\n{\n  \"label\": \"霍州市\",\n  \"value\": \"141082\" }],\n\n\n[{\n  \"label\": \"离石区\",\n  \"value\": \"141102\" },\n\n{\n  \"label\": \"文水县\",\n  \"value\": \"141121\" },\n\n{\n  \"label\": \"交城县\",\n  \"value\": \"141122\" },\n\n{\n  \"label\": \"兴县\",\n  \"value\": \"141123\" },\n\n{\n  \"label\": \"临县\",\n  \"value\": \"141124\" },\n\n{\n  \"label\": \"柳林县\",\n  \"value\": \"141125\" },\n\n{\n  \"label\": \"石楼县\",\n  \"value\": \"141126\" },\n\n{\n  \"label\": \"岚县\",\n  \"value\": \"141127\" },\n\n{\n  \"label\": \"方山县\",\n  \"value\": \"141128\" },\n\n{\n  \"label\": \"中阳县\",\n  \"value\": \"141129\" },\n\n{\n  \"label\": \"交口县\",\n  \"value\": \"141130\" },\n\n{\n  \"label\": \"孝义市\",\n  \"value\": \"141181\" },\n\n{\n  \"label\": \"汾阳市\",\n  \"value\": \"141182\" }]],\n\n\n\n[\n[{\n  \"label\": \"新城区\",\n  \"value\": \"150102\" },\n\n{\n  \"label\": \"回民区\",\n  \"value\": \"150103\" },\n\n{\n  \"label\": \"玉泉区\",\n  \"value\": \"150104\" },\n\n{\n  \"label\": \"赛罕区\",\n  \"value\": \"150105\" },\n\n{\n  \"label\": \"土默特左旗\",\n  \"value\": \"150121\" },\n\n{\n  \"label\": \"托克托县\",\n  \"value\": \"150122\" },\n\n{\n  \"label\": \"和林格尔县\",\n  \"value\": \"150123\" },\n\n{\n  \"label\": \"清水河县\",\n  \"value\": \"150124\" },\n\n{\n  \"label\": \"武川县\",\n  \"value\": \"150125\" },\n\n{\n  \"label\": \"呼和浩特金海工业园区\",\n  \"value\": \"150171\" },\n\n{\n  \"label\": \"呼和浩特经济技术开发区\",\n  \"value\": \"150172\" }],\n\n\n[{\n  \"label\": \"东河区\",\n  \"value\": \"150202\" },\n\n{\n  \"label\": \"昆都仑区\",\n  \"value\": \"150203\" },\n\n{\n  \"label\": \"青山区\",\n  \"value\": \"150204\" },\n\n{\n  \"label\": \"石拐区\",\n  \"value\": \"150205\" },\n\n{\n  \"label\": \"白云鄂博矿区\",\n  \"value\": \"150206\" },\n\n{\n  \"label\": \"九原区\",\n  \"value\": \"150207\" },\n\n{\n  \"label\": \"土默特右旗\",\n  \"value\": \"150221\" },\n\n{\n  \"label\": \"固阳县\",\n  \"value\": \"150222\" },\n\n{\n  \"label\": \"达尔罕茂明安联合旗\",\n  \"value\": \"150223\" },\n\n{\n  \"label\": \"包头稀土高新技术产业开发区\",\n  \"value\": \"150271\" }],\n\n\n[{\n  \"label\": \"海勃湾区\",\n  \"value\": \"150302\" },\n\n{\n  \"label\": \"海南区\",\n  \"value\": \"150303\" },\n\n{\n  \"label\": \"乌达区\",\n  \"value\": \"150304\" }],\n\n\n[{\n  \"label\": \"红山区\",\n  \"value\": \"150402\" },\n\n{\n  \"label\": \"元宝山区\",\n  \"value\": \"150403\" },\n\n{\n  \"label\": \"松山区\",\n  \"value\": \"150404\" },\n\n{\n  \"label\": \"阿鲁科尔沁旗\",\n  \"value\": \"150421\" },\n\n{\n  \"label\": \"巴林左旗\",\n  \"value\": \"150422\" },\n\n{\n  \"label\": \"巴林右旗\",\n  \"value\": \"150423\" },\n\n{\n  \"label\": \"林西县\",\n  \"value\": \"150424\" },\n\n{\n  \"label\": \"克什克腾旗\",\n  \"value\": \"150425\" },\n\n{\n  \"label\": \"翁牛特旗\",\n  \"value\": \"150426\" },\n\n{\n  \"label\": \"喀喇沁旗\",\n  \"value\": \"150428\" },\n\n{\n  \"label\": \"宁城县\",\n  \"value\": \"150429\" },\n\n{\n  \"label\": \"敖汉旗\",\n  \"value\": \"150430\" }],\n\n\n[{\n  \"label\": \"科尔沁区\",\n  \"value\": \"150502\" },\n\n{\n  \"label\": \"科尔沁左翼中旗\",\n  \"value\": \"150521\" },\n\n{\n  \"label\": \"科尔沁左翼后旗\",\n  \"value\": \"150522\" },\n\n{\n  \"label\": \"开鲁县\",\n  \"value\": \"150523\" },\n\n{\n  \"label\": \"库伦旗\",\n  \"value\": \"150524\" },\n\n{\n  \"label\": \"奈曼旗\",\n  \"value\": \"150525\" },\n\n{\n  \"label\": \"扎鲁特旗\",\n  \"value\": \"150526\" },\n\n{\n  \"label\": \"通辽经济技术开发区\",\n  \"value\": \"150571\" },\n\n{\n  \"label\": \"霍林郭勒市\",\n  \"value\": \"150581\" }],\n\n\n[{\n  \"label\": \"东胜区\",\n  \"value\": \"150602\" },\n\n{\n  \"label\": \"康巴什区\",\n  \"value\": \"150603\" },\n\n{\n  \"label\": \"达拉特旗\",\n  \"value\": \"150621\" },\n\n{\n  \"label\": \"准格尔旗\",\n  \"value\": \"150622\" },\n\n{\n  \"label\": \"鄂托克前旗\",\n  \"value\": \"150623\" },\n\n{\n  \"label\": \"鄂托克旗\",\n  \"value\": \"150624\" },\n\n{\n  \"label\": \"杭锦旗\",\n  \"value\": \"150625\" },\n\n{\n  \"label\": \"乌审旗\",\n  \"value\": \"150626\" },\n\n{\n  \"label\": \"伊金霍洛旗\",\n  \"value\": \"150627\" }],\n\n\n[{\n  \"label\": \"海拉尔区\",\n  \"value\": \"150702\" },\n\n{\n  \"label\": \"扎赉诺尔区\",\n  \"value\": \"150703\" },\n\n{\n  \"label\": \"阿荣旗\",\n  \"value\": \"150721\" },\n\n{\n  \"label\": \"莫力达瓦达斡尔族自治旗\",\n  \"value\": \"150722\" },\n\n{\n  \"label\": \"鄂伦春自治旗\",\n  \"value\": \"150723\" },\n\n{\n  \"label\": \"鄂温克族自治旗\",\n  \"value\": \"150724\" },\n\n{\n  \"label\": \"陈巴尔虎旗\",\n  \"value\": \"150725\" },\n\n{\n  \"label\": \"新巴尔虎左旗\",\n  \"value\": \"150726\" },\n\n{\n  \"label\": \"新巴尔虎右旗\",\n  \"value\": \"150727\" },\n\n{\n  \"label\": \"满洲里市\",\n  \"value\": \"150781\" },\n\n{\n  \"label\": \"牙克石市\",\n  \"value\": \"150782\" },\n\n{\n  \"label\": \"扎兰屯市\",\n  \"value\": \"150783\" },\n\n{\n  \"label\": \"额尔古纳市\",\n  \"value\": \"150784\" },\n\n{\n  \"label\": \"根河市\",\n  \"value\": \"150785\" }],\n\n\n[{\n  \"label\": \"临河区\",\n  \"value\": \"150802\" },\n\n{\n  \"label\": \"五原县\",\n  \"value\": \"150821\" },\n\n{\n  \"label\": \"磴口县\",\n  \"value\": \"150822\" },\n\n{\n  \"label\": \"乌拉特前旗\",\n  \"value\": \"150823\" },\n\n{\n  \"label\": \"乌拉特中旗\",\n  \"value\": \"150824\" },\n\n{\n  \"label\": \"乌拉特后旗\",\n  \"value\": \"150825\" },\n\n{\n  \"label\": \"杭锦后旗\",\n  \"value\": \"150826\" }],\n\n\n[{\n  \"label\": \"集宁区\",\n  \"value\": \"150902\" },\n\n{\n  \"label\": \"卓资县\",\n  \"value\": \"150921\" },\n\n{\n  \"label\": \"化德县\",\n  \"value\": \"150922\" },\n\n{\n  \"label\": \"商都县\",\n  \"value\": \"150923\" },\n\n{\n  \"label\": \"兴和县\",\n  \"value\": \"150924\" },\n\n{\n  \"label\": \"凉城县\",\n  \"value\": \"150925\" },\n\n{\n  \"label\": \"察哈尔右翼前旗\",\n  \"value\": \"150926\" },\n\n{\n  \"label\": \"察哈尔右翼中旗\",\n  \"value\": \"150927\" },\n\n{\n  \"label\": \"察哈尔右翼后旗\",\n  \"value\": \"150928\" },\n\n{\n  \"label\": \"四子王旗\",\n  \"value\": \"150929\" },\n\n{\n  \"label\": \"丰镇市\",\n  \"value\": \"150981\" }],\n\n\n[{\n  \"label\": \"乌兰浩特市\",\n  \"value\": \"152201\" },\n\n{\n  \"label\": \"阿尔山市\",\n  \"value\": \"152202\" },\n\n{\n  \"label\": \"科尔沁右翼前旗\",\n  \"value\": \"152221\" },\n\n{\n  \"label\": \"科尔沁右翼中旗\",\n  \"value\": \"152222\" },\n\n{\n  \"label\": \"扎赉特旗\",\n  \"value\": \"152223\" },\n\n{\n  \"label\": \"突泉县\",\n  \"value\": \"152224\" }],\n\n\n[{\n  \"label\": \"二连浩特市\",\n  \"value\": \"152501\" },\n\n{\n  \"label\": \"锡林浩特市\",\n  \"value\": \"152502\" },\n\n{\n  \"label\": \"阿巴嘎旗\",\n  \"value\": \"152522\" },\n\n{\n  \"label\": \"苏尼特左旗\",\n  \"value\": \"152523\" },\n\n{\n  \"label\": \"苏尼特右旗\",\n  \"value\": \"152524\" },\n\n{\n  \"label\": \"东乌珠穆沁旗\",\n  \"value\": \"152525\" },\n\n{\n  \"label\": \"西乌珠穆沁旗\",\n  \"value\": \"152526\" },\n\n{\n  \"label\": \"太仆寺旗\",\n  \"value\": \"152527\" },\n\n{\n  \"label\": \"镶黄旗\",\n  \"value\": \"152528\" },\n\n{\n  \"label\": \"正镶白旗\",\n  \"value\": \"152529\" },\n\n{\n  \"label\": \"正蓝旗\",\n  \"value\": \"152530\" },\n\n{\n  \"label\": \"多伦县\",\n  \"value\": \"152531\" },\n\n{\n  \"label\": \"乌拉盖管委会\",\n  \"value\": \"152571\" }],\n\n\n[{\n  \"label\": \"阿拉善左旗\",\n  \"value\": \"152921\" },\n\n{\n  \"label\": \"阿拉善右旗\",\n  \"value\": \"152922\" },\n\n{\n  \"label\": \"额济纳旗\",\n  \"value\": \"152923\" },\n\n{\n  \"label\": \"内蒙古阿拉善经济开发区\",\n  \"value\": \"152971\" }]],\n\n\n\n[\n[{\n  \"label\": \"和平区\",\n  \"value\": \"210102\" },\n\n{\n  \"label\": \"沈河区\",\n  \"value\": \"210103\" },\n\n{\n  \"label\": \"大东区\",\n  \"value\": \"210104\" },\n\n{\n  \"label\": \"皇姑区\",\n  \"value\": \"210105\" },\n\n{\n  \"label\": \"铁西区\",\n  \"value\": \"210106\" },\n\n{\n  \"label\": \"苏家屯区\",\n  \"value\": \"210111\" },\n\n{\n  \"label\": \"浑南区\",\n  \"value\": \"210112\" },\n\n{\n  \"label\": \"沈北新区\",\n  \"value\": \"210113\" },\n\n{\n  \"label\": \"于洪区\",\n  \"value\": \"210114\" },\n\n{\n  \"label\": \"辽中区\",\n  \"value\": \"210115\" },\n\n{\n  \"label\": \"康平县\",\n  \"value\": \"210123\" },\n\n{\n  \"label\": \"法库县\",\n  \"value\": \"210124\" },\n\n{\n  \"label\": \"新民市\",\n  \"value\": \"210181\" }],\n\n\n[{\n  \"label\": \"中山区\",\n  \"value\": \"210202\" },\n\n{\n  \"label\": \"西岗区\",\n  \"value\": \"210203\" },\n\n{\n  \"label\": \"沙河口区\",\n  \"value\": \"210204\" },\n\n{\n  \"label\": \"甘井子区\",\n  \"value\": \"210211\" },\n\n{\n  \"label\": \"旅顺口区\",\n  \"value\": \"210212\" },\n\n{\n  \"label\": \"金州区\",\n  \"value\": \"210213\" },\n\n{\n  \"label\": \"普兰店区\",\n  \"value\": \"210214\" },\n\n{\n  \"label\": \"长海县\",\n  \"value\": \"210224\" },\n\n{\n  \"label\": \"瓦房店市\",\n  \"value\": \"210281\" },\n\n{\n  \"label\": \"庄河市\",\n  \"value\": \"210283\" }],\n\n\n[{\n  \"label\": \"铁东区\",\n  \"value\": \"210302\" },\n\n{\n  \"label\": \"铁西区\",\n  \"value\": \"210303\" },\n\n{\n  \"label\": \"立山区\",\n  \"value\": \"210304\" },\n\n{\n  \"label\": \"千山区\",\n  \"value\": \"210311\" },\n\n{\n  \"label\": \"台安县\",\n  \"value\": \"210321\" },\n\n{\n  \"label\": \"岫岩满族自治县\",\n  \"value\": \"210323\" },\n\n{\n  \"label\": \"海城市\",\n  \"value\": \"210381\" }],\n\n\n[{\n  \"label\": \"新抚区\",\n  \"value\": \"210402\" },\n\n{\n  \"label\": \"东洲区\",\n  \"value\": \"210403\" },\n\n{\n  \"label\": \"望花区\",\n  \"value\": \"210404\" },\n\n{\n  \"label\": \"顺城区\",\n  \"value\": \"210411\" },\n\n{\n  \"label\": \"抚顺县\",\n  \"value\": \"210421\" },\n\n{\n  \"label\": \"新宾满族自治县\",\n  \"value\": \"210422\" },\n\n{\n  \"label\": \"清原满族自治县\",\n  \"value\": \"210423\" }],\n\n\n[{\n  \"label\": \"平山区\",\n  \"value\": \"210502\" },\n\n{\n  \"label\": \"溪湖区\",\n  \"value\": \"210503\" },\n\n{\n  \"label\": \"明山区\",\n  \"value\": \"210504\" },\n\n{\n  \"label\": \"南芬区\",\n  \"value\": \"210505\" },\n\n{\n  \"label\": \"本溪满族自治县\",\n  \"value\": \"210521\" },\n\n{\n  \"label\": \"桓仁满族自治县\",\n  \"value\": \"210522\" }],\n\n\n[{\n  \"label\": \"元宝区\",\n  \"value\": \"210602\" },\n\n{\n  \"label\": \"振兴区\",\n  \"value\": \"210603\" },\n\n{\n  \"label\": \"振安区\",\n  \"value\": \"210604\" },\n\n{\n  \"label\": \"宽甸满族自治县\",\n  \"value\": \"210624\" },\n\n{\n  \"label\": \"东港市\",\n  \"value\": \"210681\" },\n\n{\n  \"label\": \"凤城市\",\n  \"value\": \"210682\" }],\n\n\n[{\n  \"label\": \"古塔区\",\n  \"value\": \"210702\" },\n\n{\n  \"label\": \"凌河区\",\n  \"value\": \"210703\" },\n\n{\n  \"label\": \"太和区\",\n  \"value\": \"210711\" },\n\n{\n  \"label\": \"黑山县\",\n  \"value\": \"210726\" },\n\n{\n  \"label\": \"义县\",\n  \"value\": \"210727\" },\n\n{\n  \"label\": \"凌海市\",\n  \"value\": \"210781\" },\n\n{\n  \"label\": \"北镇市\",\n  \"value\": \"210782\" }],\n\n\n[{\n  \"label\": \"站前区\",\n  \"value\": \"210802\" },\n\n{\n  \"label\": \"西市区\",\n  \"value\": \"210803\" },\n\n{\n  \"label\": \"鲅鱼圈区\",\n  \"value\": \"210804\" },\n\n{\n  \"label\": \"老边区\",\n  \"value\": \"210811\" },\n\n{\n  \"label\": \"盖州市\",\n  \"value\": \"210881\" },\n\n{\n  \"label\": \"大石桥市\",\n  \"value\": \"210882\" }],\n\n\n[{\n  \"label\": \"海州区\",\n  \"value\": \"210902\" },\n\n{\n  \"label\": \"新邱区\",\n  \"value\": \"210903\" },\n\n{\n  \"label\": \"太平区\",\n  \"value\": \"210904\" },\n\n{\n  \"label\": \"清河门区\",\n  \"value\": \"210905\" },\n\n{\n  \"label\": \"细河区\",\n  \"value\": \"210911\" },\n\n{\n  \"label\": \"阜新蒙古族自治县\",\n  \"value\": \"210921\" },\n\n{\n  \"label\": \"彰武县\",\n  \"value\": \"210922\" }],\n\n\n[{\n  \"label\": \"白塔区\",\n  \"value\": \"211002\" },\n\n{\n  \"label\": \"文圣区\",\n  \"value\": \"211003\" },\n\n{\n  \"label\": \"宏伟区\",\n  \"value\": \"211004\" },\n\n{\n  \"label\": \"弓长岭区\",\n  \"value\": \"211005\" },\n\n{\n  \"label\": \"太子河区\",\n  \"value\": \"211011\" },\n\n{\n  \"label\": \"辽阳县\",\n  \"value\": \"211021\" },\n\n{\n  \"label\": \"灯塔市\",\n  \"value\": \"211081\" }],\n\n\n[{\n  \"label\": \"双台子区\",\n  \"value\": \"211102\" },\n\n{\n  \"label\": \"兴隆台区\",\n  \"value\": \"211103\" },\n\n{\n  \"label\": \"大洼区\",\n  \"value\": \"211104\" },\n\n{\n  \"label\": \"盘山县\",\n  \"value\": \"211122\" }],\n\n\n[{\n  \"label\": \"银州区\",\n  \"value\": \"211202\" },\n\n{\n  \"label\": \"清河区\",\n  \"value\": \"211204\" },\n\n{\n  \"label\": \"铁岭县\",\n  \"value\": \"211221\" },\n\n{\n  \"label\": \"西丰县\",\n  \"value\": \"211223\" },\n\n{\n  \"label\": \"昌图县\",\n  \"value\": \"211224\" },\n\n{\n  \"label\": \"调兵山市\",\n  \"value\": \"211281\" },\n\n{\n  \"label\": \"开原市\",\n  \"value\": \"211282\" }],\n\n\n[{\n  \"label\": \"双塔区\",\n  \"value\": \"211302\" },\n\n{\n  \"label\": \"龙城区\",\n  \"value\": \"211303\" },\n\n{\n  \"label\": \"朝阳县\",\n  \"value\": \"211321\" },\n\n{\n  \"label\": \"建平县\",\n  \"value\": \"211322\" },\n\n{\n  \"label\": \"喀喇沁左翼蒙古族自治县\",\n  \"value\": \"211324\" },\n\n{\n  \"label\": \"北票市\",\n  \"value\": \"211381\" },\n\n{\n  \"label\": \"凌源市\",\n  \"value\": \"211382\" }],\n\n\n[{\n  \"label\": \"连山区\",\n  \"value\": \"211402\" },\n\n{\n  \"label\": \"龙港区\",\n  \"value\": \"211403\" },\n\n{\n  \"label\": \"南票区\",\n  \"value\": \"211404\" },\n\n{\n  \"label\": \"绥中县\",\n  \"value\": \"211421\" },\n\n{\n  \"label\": \"建昌县\",\n  \"value\": \"211422\" },\n\n{\n  \"label\": \"兴城市\",\n  \"value\": \"211481\" }]],\n\n\n\n[\n[{\n  \"label\": \"南关区\",\n  \"value\": \"220102\" },\n\n{\n  \"label\": \"宽城区\",\n  \"value\": \"220103\" },\n\n{\n  \"label\": \"朝阳区\",\n  \"value\": \"220104\" },\n\n{\n  \"label\": \"二道区\",\n  \"value\": \"220105\" },\n\n{\n  \"label\": \"绿园区\",\n  \"value\": \"220106\" },\n\n{\n  \"label\": \"双阳区\",\n  \"value\": \"220112\" },\n\n{\n  \"label\": \"九台区\",\n  \"value\": \"220113\" },\n\n{\n  \"label\": \"农安县\",\n  \"value\": \"220122\" },\n\n{\n  \"label\": \"长春经济技术开发区\",\n  \"value\": \"220171\" },\n\n{\n  \"label\": \"长春净月高新技术产业开发区\",\n  \"value\": \"220172\" },\n\n{\n  \"label\": \"长春高新技术产业开发区\",\n  \"value\": \"220173\" },\n\n{\n  \"label\": \"长春汽车经济技术开发区\",\n  \"value\": \"220174\" },\n\n{\n  \"label\": \"榆树市\",\n  \"value\": \"220182\" },\n\n{\n  \"label\": \"德惠市\",\n  \"value\": \"220183\" }],\n\n\n[{\n  \"label\": \"昌邑区\",\n  \"value\": \"220202\" },\n\n{\n  \"label\": \"龙潭区\",\n  \"value\": \"220203\" },\n\n{\n  \"label\": \"船营区\",\n  \"value\": \"220204\" },\n\n{\n  \"label\": \"丰满区\",\n  \"value\": \"220211\" },\n\n{\n  \"label\": \"永吉县\",\n  \"value\": \"220221\" },\n\n{\n  \"label\": \"吉林经济开发区\",\n  \"value\": \"220271\" },\n\n{\n  \"label\": \"吉林高新技术产业开发区\",\n  \"value\": \"220272\" },\n\n{\n  \"label\": \"吉林中国新加坡食品区\",\n  \"value\": \"220273\" },\n\n{\n  \"label\": \"蛟河市\",\n  \"value\": \"220281\" },\n\n{\n  \"label\": \"桦甸市\",\n  \"value\": \"220282\" },\n\n{\n  \"label\": \"舒兰市\",\n  \"value\": \"220283\" },\n\n{\n  \"label\": \"磐石市\",\n  \"value\": \"220284\" }],\n\n\n[{\n  \"label\": \"铁西区\",\n  \"value\": \"220302\" },\n\n{\n  \"label\": \"铁东区\",\n  \"value\": \"220303\" },\n\n{\n  \"label\": \"梨树县\",\n  \"value\": \"220322\" },\n\n{\n  \"label\": \"伊通满族自治县\",\n  \"value\": \"220323\" },\n\n{\n  \"label\": \"公主岭市\",\n  \"value\": \"220381\" },\n\n{\n  \"label\": \"双辽市\",\n  \"value\": \"220382\" }],\n\n\n[{\n  \"label\": \"龙山区\",\n  \"value\": \"220402\" },\n\n{\n  \"label\": \"西安区\",\n  \"value\": \"220403\" },\n\n{\n  \"label\": \"东丰县\",\n  \"value\": \"220421\" },\n\n{\n  \"label\": \"东辽县\",\n  \"value\": \"220422\" }],\n\n\n[{\n  \"label\": \"东昌区\",\n  \"value\": \"220502\" },\n\n{\n  \"label\": \"二道江区\",\n  \"value\": \"220503\" },\n\n{\n  \"label\": \"通化县\",\n  \"value\": \"220521\" },\n\n{\n  \"label\": \"辉南县\",\n  \"value\": \"220523\" },\n\n{\n  \"label\": \"柳河县\",\n  \"value\": \"220524\" },\n\n{\n  \"label\": \"梅河口市\",\n  \"value\": \"220581\" },\n\n{\n  \"label\": \"集安市\",\n  \"value\": \"220582\" }],\n\n\n[{\n  \"label\": \"浑江区\",\n  \"value\": \"220602\" },\n\n{\n  \"label\": \"江源区\",\n  \"value\": \"220605\" },\n\n{\n  \"label\": \"抚松县\",\n  \"value\": \"220621\" },\n\n{\n  \"label\": \"靖宇县\",\n  \"value\": \"220622\" },\n\n{\n  \"label\": \"长白朝鲜族自治县\",\n  \"value\": \"220623\" },\n\n{\n  \"label\": \"临江市\",\n  \"value\": \"220681\" }],\n\n\n[{\n  \"label\": \"宁江区\",\n  \"value\": \"220702\" },\n\n{\n  \"label\": \"前郭尔罗斯蒙古族自治县\",\n  \"value\": \"220721\" },\n\n{\n  \"label\": \"长岭县\",\n  \"value\": \"220722\" },\n\n{\n  \"label\": \"乾安县\",\n  \"value\": \"220723\" },\n\n{\n  \"label\": \"吉林松原经济开发区\",\n  \"value\": \"220771\" },\n\n{\n  \"label\": \"扶余市\",\n  \"value\": \"220781\" }],\n\n\n[{\n  \"label\": \"洮北区\",\n  \"value\": \"220802\" },\n\n{\n  \"label\": \"镇赉县\",\n  \"value\": \"220821\" },\n\n{\n  \"label\": \"通榆县\",\n  \"value\": \"220822\" },\n\n{\n  \"label\": \"吉林白城经济开发区\",\n  \"value\": \"220871\" },\n\n{\n  \"label\": \"洮南市\",\n  \"value\": \"220881\" },\n\n{\n  \"label\": \"大安市\",\n  \"value\": \"220882\" }],\n\n\n[{\n  \"label\": \"延吉市\",\n  \"value\": \"222401\" },\n\n{\n  \"label\": \"图们市\",\n  \"value\": \"222402\" },\n\n{\n  \"label\": \"敦化市\",\n  \"value\": \"222403\" },\n\n{\n  \"label\": \"珲春市\",\n  \"value\": \"222404\" },\n\n{\n  \"label\": \"龙井市\",\n  \"value\": \"222405\" },\n\n{\n  \"label\": \"和龙市\",\n  \"value\": \"222406\" },\n\n{\n  \"label\": \"汪清县\",\n  \"value\": \"222424\" },\n\n{\n  \"label\": \"安图县\",\n  \"value\": \"222426\" }]],\n\n\n\n[\n[{\n  \"label\": \"道里区\",\n  \"value\": \"230102\" },\n\n{\n  \"label\": \"南岗区\",\n  \"value\": \"230103\" },\n\n{\n  \"label\": \"道外区\",\n  \"value\": \"230104\" },\n\n{\n  \"label\": \"平房区\",\n  \"value\": \"230108\" },\n\n{\n  \"label\": \"松北区\",\n  \"value\": \"230109\" },\n\n{\n  \"label\": \"香坊区\",\n  \"value\": \"230110\" },\n\n{\n  \"label\": \"呼兰区\",\n  \"value\": \"230111\" },\n\n{\n  \"label\": \"阿城区\",\n  \"value\": \"230112\" },\n\n{\n  \"label\": \"双城区\",\n  \"value\": \"230113\" },\n\n{\n  \"label\": \"依兰县\",\n  \"value\": \"230123\" },\n\n{\n  \"label\": \"方正县\",\n  \"value\": \"230124\" },\n\n{\n  \"label\": \"宾县\",\n  \"value\": \"230125\" },\n\n{\n  \"label\": \"巴彦县\",\n  \"value\": \"230126\" },\n\n{\n  \"label\": \"木兰县\",\n  \"value\": \"230127\" },\n\n{\n  \"label\": \"通河县\",\n  \"value\": \"230128\" },\n\n{\n  \"label\": \"延寿县\",\n  \"value\": \"230129\" },\n\n{\n  \"label\": \"尚志市\",\n  \"value\": \"230183\" },\n\n{\n  \"label\": \"五常市\",\n  \"value\": \"230184\" }],\n\n\n[{\n  \"label\": \"龙沙区\",\n  \"value\": \"230202\" },\n\n{\n  \"label\": \"建华区\",\n  \"value\": \"230203\" },\n\n{\n  \"label\": \"铁锋区\",\n  \"value\": \"230204\" },\n\n{\n  \"label\": \"昂昂溪区\",\n  \"value\": \"230205\" },\n\n{\n  \"label\": \"富拉尔基区\",\n  \"value\": \"230206\" },\n\n{\n  \"label\": \"碾子山区\",\n  \"value\": \"230207\" },\n\n{\n  \"label\": \"梅里斯达斡尔族区\",\n  \"value\": \"230208\" },\n\n{\n  \"label\": \"龙江县\",\n  \"value\": \"230221\" },\n\n{\n  \"label\": \"依安县\",\n  \"value\": \"230223\" },\n\n{\n  \"label\": \"泰来县\",\n  \"value\": \"230224\" },\n\n{\n  \"label\": \"甘南县\",\n  \"value\": \"230225\" },\n\n{\n  \"label\": \"富裕县\",\n  \"value\": \"230227\" },\n\n{\n  \"label\": \"克山县\",\n  \"value\": \"230229\" },\n\n{\n  \"label\": \"克东县\",\n  \"value\": \"230230\" },\n\n{\n  \"label\": \"拜泉县\",\n  \"value\": \"230231\" },\n\n{\n  \"label\": \"讷河市\",\n  \"value\": \"230281\" }],\n\n\n[{\n  \"label\": \"鸡冠区\",\n  \"value\": \"230302\" },\n\n{\n  \"label\": \"恒山区\",\n  \"value\": \"230303\" },\n\n{\n  \"label\": \"滴道区\",\n  \"value\": \"230304\" },\n\n{\n  \"label\": \"梨树区\",\n  \"value\": \"230305\" },\n\n{\n  \"label\": \"城子河区\",\n  \"value\": \"230306\" },\n\n{\n  \"label\": \"麻山区\",\n  \"value\": \"230307\" },\n\n{\n  \"label\": \"鸡东县\",\n  \"value\": \"230321\" },\n\n{\n  \"label\": \"虎林市\",\n  \"value\": \"230381\" },\n\n{\n  \"label\": \"密山市\",\n  \"value\": \"230382\" }],\n\n\n[{\n  \"label\": \"向阳区\",\n  \"value\": \"230402\" },\n\n{\n  \"label\": \"工农区\",\n  \"value\": \"230403\" },\n\n{\n  \"label\": \"南山区\",\n  \"value\": \"230404\" },\n\n{\n  \"label\": \"兴安区\",\n  \"value\": \"230405\" },\n\n{\n  \"label\": \"东山区\",\n  \"value\": \"230406\" },\n\n{\n  \"label\": \"兴山区\",\n  \"value\": \"230407\" },\n\n{\n  \"label\": \"萝北县\",\n  \"value\": \"230421\" },\n\n{\n  \"label\": \"绥滨县\",\n  \"value\": \"230422\" }],\n\n\n[{\n  \"label\": \"尖山区\",\n  \"value\": \"230502\" },\n\n{\n  \"label\": \"岭东区\",\n  \"value\": \"230503\" },\n\n{\n  \"label\": \"四方台区\",\n  \"value\": \"230505\" },\n\n{\n  \"label\": \"宝山区\",\n  \"value\": \"230506\" },\n\n{\n  \"label\": \"集贤县\",\n  \"value\": \"230521\" },\n\n{\n  \"label\": \"友谊县\",\n  \"value\": \"230522\" },\n\n{\n  \"label\": \"宝清县\",\n  \"value\": \"230523\" },\n\n{\n  \"label\": \"饶河县\",\n  \"value\": \"230524\" }],\n\n\n[{\n  \"label\": \"萨尔图区\",\n  \"value\": \"230602\" },\n\n{\n  \"label\": \"龙凤区\",\n  \"value\": \"230603\" },\n\n{\n  \"label\": \"让胡路区\",\n  \"value\": \"230604\" },\n\n{\n  \"label\": \"红岗区\",\n  \"value\": \"230605\" },\n\n{\n  \"label\": \"大同区\",\n  \"value\": \"230606\" },\n\n{\n  \"label\": \"肇州县\",\n  \"value\": \"230621\" },\n\n{\n  \"label\": \"肇源县\",\n  \"value\": \"230622\" },\n\n{\n  \"label\": \"林甸县\",\n  \"value\": \"230623\" },\n\n{\n  \"label\": \"杜尔伯特蒙古族自治县\",\n  \"value\": \"230624\" },\n\n{\n  \"label\": \"大庆高新技术产业开发区\",\n  \"value\": \"230671\" }],\n\n\n[{\n  \"label\": \"伊春区\",\n  \"value\": \"230702\" },\n\n{\n  \"label\": \"南岔区\",\n  \"value\": \"230703\" },\n\n{\n  \"label\": \"友好区\",\n  \"value\": \"230704\" },\n\n{\n  \"label\": \"西林区\",\n  \"value\": \"230705\" },\n\n{\n  \"label\": \"翠峦区\",\n  \"value\": \"230706\" },\n\n{\n  \"label\": \"新青区\",\n  \"value\": \"230707\" },\n\n{\n  \"label\": \"美溪区\",\n  \"value\": \"230708\" },\n\n{\n  \"label\": \"金山屯区\",\n  \"value\": \"230709\" },\n\n{\n  \"label\": \"五营区\",\n  \"value\": \"230710\" },\n\n{\n  \"label\": \"乌马河区\",\n  \"value\": \"230711\" },\n\n{\n  \"label\": \"汤旺河区\",\n  \"value\": \"230712\" },\n\n{\n  \"label\": \"带岭区\",\n  \"value\": \"230713\" },\n\n{\n  \"label\": \"乌伊岭区\",\n  \"value\": \"230714\" },\n\n{\n  \"label\": \"红星区\",\n  \"value\": \"230715\" },\n\n{\n  \"label\": \"上甘岭区\",\n  \"value\": \"230716\" },\n\n{\n  \"label\": \"嘉荫县\",\n  \"value\": \"230722\" },\n\n{\n  \"label\": \"铁力市\",\n  \"value\": \"230781\" }],\n\n\n[{\n  \"label\": \"向阳区\",\n  \"value\": \"230803\" },\n\n{\n  \"label\": \"前进区\",\n  \"value\": \"230804\" },\n\n{\n  \"label\": \"东风区\",\n  \"value\": \"230805\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"230811\" },\n\n{\n  \"label\": \"桦南县\",\n  \"value\": \"230822\" },\n\n{\n  \"label\": \"桦川县\",\n  \"value\": \"230826\" },\n\n{\n  \"label\": \"汤原县\",\n  \"value\": \"230828\" },\n\n{\n  \"label\": \"同江市\",\n  \"value\": \"230881\" },\n\n{\n  \"label\": \"富锦市\",\n  \"value\": \"230882\" },\n\n{\n  \"label\": \"抚远市\",\n  \"value\": \"230883\" }],\n\n\n[{\n  \"label\": \"新兴区\",\n  \"value\": \"230902\" },\n\n{\n  \"label\": \"桃山区\",\n  \"value\": \"230903\" },\n\n{\n  \"label\": \"茄子河区\",\n  \"value\": \"230904\" },\n\n{\n  \"label\": \"勃利县\",\n  \"value\": \"230921\" }],\n\n\n[{\n  \"label\": \"东安区\",\n  \"value\": \"231002\" },\n\n{\n  \"label\": \"阳明区\",\n  \"value\": \"231003\" },\n\n{\n  \"label\": \"爱民区\",\n  \"value\": \"231004\" },\n\n{\n  \"label\": \"西安区\",\n  \"value\": \"231005\" },\n\n{\n  \"label\": \"林口县\",\n  \"value\": \"231025\" },\n\n{\n  \"label\": \"牡丹江经济技术开发区\",\n  \"value\": \"231071\" },\n\n{\n  \"label\": \"绥芬河市\",\n  \"value\": \"231081\" },\n\n{\n  \"label\": \"海林市\",\n  \"value\": \"231083\" },\n\n{\n  \"label\": \"宁安市\",\n  \"value\": \"231084\" },\n\n{\n  \"label\": \"穆棱市\",\n  \"value\": \"231085\" },\n\n{\n  \"label\": \"东宁市\",\n  \"value\": \"231086\" }],\n\n\n[{\n  \"label\": \"爱辉区\",\n  \"value\": \"231102\" },\n\n{\n  \"label\": \"嫩江县\",\n  \"value\": \"231121\" },\n\n{\n  \"label\": \"逊克县\",\n  \"value\": \"231123\" },\n\n{\n  \"label\": \"孙吴县\",\n  \"value\": \"231124\" },\n\n{\n  \"label\": \"北安市\",\n  \"value\": \"231181\" },\n\n{\n  \"label\": \"五大连池市\",\n  \"value\": \"231182\" }],\n\n\n[{\n  \"label\": \"北林区\",\n  \"value\": \"231202\" },\n\n{\n  \"label\": \"望奎县\",\n  \"value\": \"231221\" },\n\n{\n  \"label\": \"兰西县\",\n  \"value\": \"231222\" },\n\n{\n  \"label\": \"青冈县\",\n  \"value\": \"231223\" },\n\n{\n  \"label\": \"庆安县\",\n  \"value\": \"231224\" },\n\n{\n  \"label\": \"明水县\",\n  \"value\": \"231225\" },\n\n{\n  \"label\": \"绥棱县\",\n  \"value\": \"231226\" },\n\n{\n  \"label\": \"安达市\",\n  \"value\": \"231281\" },\n\n{\n  \"label\": \"肇东市\",\n  \"value\": \"231282\" },\n\n{\n  \"label\": \"海伦市\",\n  \"value\": \"231283\" }],\n\n\n[{\n  \"label\": \"加格达奇区\",\n  \"value\": \"232701\" },\n\n{\n  \"label\": \"松岭区\",\n  \"value\": \"232702\" },\n\n{\n  \"label\": \"新林区\",\n  \"value\": \"232703\" },\n\n{\n  \"label\": \"呼中区\",\n  \"value\": \"232704\" },\n\n{\n  \"label\": \"呼玛县\",\n  \"value\": \"232721\" },\n\n{\n  \"label\": \"塔河县\",\n  \"value\": \"232722\" },\n\n{\n  \"label\": \"漠河县\",\n  \"value\": \"232723\" }]],\n\n\n\n[\n[{\n  \"label\": \"黄浦区\",\n  \"value\": \"310101\" },\n\n{\n  \"label\": \"徐汇区\",\n  \"value\": \"310104\" },\n\n{\n  \"label\": \"长宁区\",\n  \"value\": \"310105\" },\n\n{\n  \"label\": \"静安区\",\n  \"value\": \"310106\" },\n\n{\n  \"label\": \"普陀区\",\n  \"value\": \"310107\" },\n\n{\n  \"label\": \"虹口区\",\n  \"value\": \"310109\" },\n\n{\n  \"label\": \"杨浦区\",\n  \"value\": \"310110\" },\n\n{\n  \"label\": \"闵行区\",\n  \"value\": \"310112\" },\n\n{\n  \"label\": \"宝山区\",\n  \"value\": \"310113\" },\n\n{\n  \"label\": \"嘉定区\",\n  \"value\": \"310114\" },\n\n{\n  \"label\": \"浦东新区\",\n  \"value\": \"310115\" },\n\n{\n  \"label\": \"金山区\",\n  \"value\": \"310116\" },\n\n{\n  \"label\": \"松江区\",\n  \"value\": \"310117\" },\n\n{\n  \"label\": \"青浦区\",\n  \"value\": \"310118\" },\n\n{\n  \"label\": \"奉贤区\",\n  \"value\": \"310120\" },\n\n{\n  \"label\": \"崇明区\",\n  \"value\": \"310151\" }]],\n\n\n\n[\n[{\n  \"label\": \"玄武区\",\n  \"value\": \"320102\" },\n\n{\n  \"label\": \"秦淮区\",\n  \"value\": \"320104\" },\n\n{\n  \"label\": \"建邺区\",\n  \"value\": \"320105\" },\n\n{\n  \"label\": \"鼓楼区\",\n  \"value\": \"320106\" },\n\n{\n  \"label\": \"浦口区\",\n  \"value\": \"320111\" },\n\n{\n  \"label\": \"栖霞区\",\n  \"value\": \"320113\" },\n\n{\n  \"label\": \"雨花台区\",\n  \"value\": \"320114\" },\n\n{\n  \"label\": \"江宁区\",\n  \"value\": \"320115\" },\n\n{\n  \"label\": \"六合区\",\n  \"value\": \"320116\" },\n\n{\n  \"label\": \"溧水区\",\n  \"value\": \"320117\" },\n\n{\n  \"label\": \"高淳区\",\n  \"value\": \"320118\" }],\n\n\n[{\n  \"label\": \"锡山区\",\n  \"value\": \"320205\" },\n\n{\n  \"label\": \"惠山区\",\n  \"value\": \"320206\" },\n\n{\n  \"label\": \"滨湖区\",\n  \"value\": \"320211\" },\n\n{\n  \"label\": \"梁溪区\",\n  \"value\": \"320213\" },\n\n{\n  \"label\": \"新吴区\",\n  \"value\": \"320214\" },\n\n{\n  \"label\": \"江阴市\",\n  \"value\": \"320281\" },\n\n{\n  \"label\": \"宜兴市\",\n  \"value\": \"320282\" }],\n\n\n[{\n  \"label\": \"鼓楼区\",\n  \"value\": \"320302\" },\n\n{\n  \"label\": \"云龙区\",\n  \"value\": \"320303\" },\n\n{\n  \"label\": \"贾汪区\",\n  \"value\": \"320305\" },\n\n{\n  \"label\": \"泉山区\",\n  \"value\": \"320311\" },\n\n{\n  \"label\": \"铜山区\",\n  \"value\": \"320312\" },\n\n{\n  \"label\": \"丰县\",\n  \"value\": \"320321\" },\n\n{\n  \"label\": \"沛县\",\n  \"value\": \"320322\" },\n\n{\n  \"label\": \"睢宁县\",\n  \"value\": \"320324\" },\n\n{\n  \"label\": \"徐州经济技术开发区\",\n  \"value\": \"320371\" },\n\n{\n  \"label\": \"新沂市\",\n  \"value\": \"320381\" },\n\n{\n  \"label\": \"邳州市\",\n  \"value\": \"320382\" }],\n\n\n[{\n  \"label\": \"天宁区\",\n  \"value\": \"320402\" },\n\n{\n  \"label\": \"钟楼区\",\n  \"value\": \"320404\" },\n\n{\n  \"label\": \"新北区\",\n  \"value\": \"320411\" },\n\n{\n  \"label\": \"武进区\",\n  \"value\": \"320412\" },\n\n{\n  \"label\": \"金坛区\",\n  \"value\": \"320413\" },\n\n{\n  \"label\": \"溧阳市\",\n  \"value\": \"320481\" }],\n\n\n[{\n  \"label\": \"虎丘区\",\n  \"value\": \"320505\" },\n\n{\n  \"label\": \"吴中区\",\n  \"value\": \"320506\" },\n\n{\n  \"label\": \"相城区\",\n  \"value\": \"320507\" },\n\n{\n  \"label\": \"姑苏区\",\n  \"value\": \"320508\" },\n\n{\n  \"label\": \"吴江区\",\n  \"value\": \"320509\" },\n\n{\n  \"label\": \"苏州工业园区\",\n  \"value\": \"320571\" },\n\n{\n  \"label\": \"常熟市\",\n  \"value\": \"320581\" },\n\n{\n  \"label\": \"张家港市\",\n  \"value\": \"320582\" },\n\n{\n  \"label\": \"昆山市\",\n  \"value\": \"320583\" },\n\n{\n  \"label\": \"太仓市\",\n  \"value\": \"320585\" }],\n\n\n[{\n  \"label\": \"崇川区\",\n  \"value\": \"320602\" },\n\n{\n  \"label\": \"港闸区\",\n  \"value\": \"320611\" },\n\n{\n  \"label\": \"通州区\",\n  \"value\": \"320612\" },\n\n{\n  \"label\": \"海安县\",\n  \"value\": \"320621\" },\n\n{\n  \"label\": \"如东县\",\n  \"value\": \"320623\" },\n\n{\n  \"label\": \"南通经济技术开发区\",\n  \"value\": \"320671\" },\n\n{\n  \"label\": \"启东市\",\n  \"value\": \"320681\" },\n\n{\n  \"label\": \"如皋市\",\n  \"value\": \"320682\" },\n\n{\n  \"label\": \"海门市\",\n  \"value\": \"320684\" }],\n\n\n[{\n  \"label\": \"连云区\",\n  \"value\": \"320703\" },\n\n{\n  \"label\": \"海州区\",\n  \"value\": \"320706\" },\n\n{\n  \"label\": \"赣榆区\",\n  \"value\": \"320707\" },\n\n{\n  \"label\": \"东海县\",\n  \"value\": \"320722\" },\n\n{\n  \"label\": \"灌云县\",\n  \"value\": \"320723\" },\n\n{\n  \"label\": \"灌南县\",\n  \"value\": \"320724\" },\n\n{\n  \"label\": \"连云港经济技术开发区\",\n  \"value\": \"320771\" },\n\n{\n  \"label\": \"连云港高新技术产业开发区\",\n  \"value\": \"320772\" }],\n\n\n[{\n  \"label\": \"淮安区\",\n  \"value\": \"320803\" },\n\n{\n  \"label\": \"淮阴区\",\n  \"value\": \"320804\" },\n\n{\n  \"label\": \"清江浦区\",\n  \"value\": \"320812\" },\n\n{\n  \"label\": \"洪泽区\",\n  \"value\": \"320813\" },\n\n{\n  \"label\": \"涟水县\",\n  \"value\": \"320826\" },\n\n{\n  \"label\": \"盱眙县\",\n  \"value\": \"320830\" },\n\n{\n  \"label\": \"金湖县\",\n  \"value\": \"320831\" },\n\n{\n  \"label\": \"淮安经济技术开发区\",\n  \"value\": \"320871\" }],\n\n\n[{\n  \"label\": \"亭湖区\",\n  \"value\": \"320902\" },\n\n{\n  \"label\": \"盐都区\",\n  \"value\": \"320903\" },\n\n{\n  \"label\": \"大丰区\",\n  \"value\": \"320904\" },\n\n{\n  \"label\": \"响水县\",\n  \"value\": \"320921\" },\n\n{\n  \"label\": \"滨海县\",\n  \"value\": \"320922\" },\n\n{\n  \"label\": \"阜宁县\",\n  \"value\": \"320923\" },\n\n{\n  \"label\": \"射阳县\",\n  \"value\": \"320924\" },\n\n{\n  \"label\": \"建湖县\",\n  \"value\": \"320925\" },\n\n{\n  \"label\": \"盐城经济技术开发区\",\n  \"value\": \"320971\" },\n\n{\n  \"label\": \"东台市\",\n  \"value\": \"320981\" }],\n\n\n[{\n  \"label\": \"广陵区\",\n  \"value\": \"321002\" },\n\n{\n  \"label\": \"邗江区\",\n  \"value\": \"321003\" },\n\n{\n  \"label\": \"江都区\",\n  \"value\": \"321012\" },\n\n{\n  \"label\": \"宝应县\",\n  \"value\": \"321023\" },\n\n{\n  \"label\": \"扬州经济技术开发区\",\n  \"value\": \"321071\" },\n\n{\n  \"label\": \"仪征市\",\n  \"value\": \"321081\" },\n\n{\n  \"label\": \"高邮市\",\n  \"value\": \"321084\" }],\n\n\n[{\n  \"label\": \"京口区\",\n  \"value\": \"321102\" },\n\n{\n  \"label\": \"润州区\",\n  \"value\": \"321111\" },\n\n{\n  \"label\": \"丹徒区\",\n  \"value\": \"321112\" },\n\n{\n  \"label\": \"镇江新区\",\n  \"value\": \"321171\" },\n\n{\n  \"label\": \"丹阳市\",\n  \"value\": \"321181\" },\n\n{\n  \"label\": \"扬中市\",\n  \"value\": \"321182\" },\n\n{\n  \"label\": \"句容市\",\n  \"value\": \"321183\" }],\n\n\n[{\n  \"label\": \"海陵区\",\n  \"value\": \"321202\" },\n\n{\n  \"label\": \"高港区\",\n  \"value\": \"321203\" },\n\n{\n  \"label\": \"姜堰区\",\n  \"value\": \"321204\" },\n\n{\n  \"label\": \"泰州医药高新技术产业开发区\",\n  \"value\": \"321271\" },\n\n{\n  \"label\": \"兴化市\",\n  \"value\": \"321281\" },\n\n{\n  \"label\": \"靖江市\",\n  \"value\": \"321282\" },\n\n{\n  \"label\": \"泰兴市\",\n  \"value\": \"321283\" }],\n\n\n[{\n  \"label\": \"宿城区\",\n  \"value\": \"321302\" },\n\n{\n  \"label\": \"宿豫区\",\n  \"value\": \"321311\" },\n\n{\n  \"label\": \"沭阳县\",\n  \"value\": \"321322\" },\n\n{\n  \"label\": \"泗阳县\",\n  \"value\": \"321323\" },\n\n{\n  \"label\": \"泗洪县\",\n  \"value\": \"321324\" },\n\n{\n  \"label\": \"宿迁经济技术开发区\",\n  \"value\": \"321371\" }]],\n\n\n\n[\n[{\n  \"label\": \"上城区\",\n  \"value\": \"330102\" },\n\n{\n  \"label\": \"下城区\",\n  \"value\": \"330103\" },\n\n{\n  \"label\": \"江干区\",\n  \"value\": \"330104\" },\n\n{\n  \"label\": \"拱墅区\",\n  \"value\": \"330105\" },\n\n{\n  \"label\": \"西湖区\",\n  \"value\": \"330106\" },\n\n{\n  \"label\": \"滨江区\",\n  \"value\": \"330108\" },\n\n{\n  \"label\": \"萧山区\",\n  \"value\": \"330109\" },\n\n{\n  \"label\": \"余杭区\",\n  \"value\": \"330110\" },\n\n{\n  \"label\": \"富阳区\",\n  \"value\": \"330111\" },\n\n{\n  \"label\": \"临安区\",\n  \"value\": \"330112\" },\n\n{\n  \"label\": \"桐庐县\",\n  \"value\": \"330122\" },\n\n{\n  \"label\": \"淳安县\",\n  \"value\": \"330127\" },\n\n{\n  \"label\": \"建德市\",\n  \"value\": \"330182\" }],\n\n\n[{\n  \"label\": \"海曙区\",\n  \"value\": \"330203\" },\n\n{\n  \"label\": \"江北区\",\n  \"value\": \"330205\" },\n\n{\n  \"label\": \"北仑区\",\n  \"value\": \"330206\" },\n\n{\n  \"label\": \"镇海区\",\n  \"value\": \"330211\" },\n\n{\n  \"label\": \"鄞州区\",\n  \"value\": \"330212\" },\n\n{\n  \"label\": \"奉化区\",\n  \"value\": \"330213\" },\n\n{\n  \"label\": \"象山县\",\n  \"value\": \"330225\" },\n\n{\n  \"label\": \"宁海县\",\n  \"value\": \"330226\" },\n\n{\n  \"label\": \"余姚市\",\n  \"value\": \"330281\" },\n\n{\n  \"label\": \"慈溪市\",\n  \"value\": \"330282\" }],\n\n\n[{\n  \"label\": \"鹿城区\",\n  \"value\": \"330302\" },\n\n{\n  \"label\": \"龙湾区\",\n  \"value\": \"330303\" },\n\n{\n  \"label\": \"瓯海区\",\n  \"value\": \"330304\" },\n\n{\n  \"label\": \"洞头区\",\n  \"value\": \"330305\" },\n\n{\n  \"label\": \"永嘉县\",\n  \"value\": \"330324\" },\n\n{\n  \"label\": \"平阳县\",\n  \"value\": \"330326\" },\n\n{\n  \"label\": \"苍南县\",\n  \"value\": \"330327\" },\n\n{\n  \"label\": \"文成县\",\n  \"value\": \"330328\" },\n\n{\n  \"label\": \"泰顺县\",\n  \"value\": \"330329\" },\n\n{\n  \"label\": \"温州经济技术开发区\",\n  \"value\": \"330371\" },\n\n{\n  \"label\": \"瑞安市\",\n  \"value\": \"330381\" },\n\n{\n  \"label\": \"乐清市\",\n  \"value\": \"330382\" }],\n\n\n[{\n  \"label\": \"南湖区\",\n  \"value\": \"330402\" },\n\n{\n  \"label\": \"秀洲区\",\n  \"value\": \"330411\" },\n\n{\n  \"label\": \"嘉善县\",\n  \"value\": \"330421\" },\n\n{\n  \"label\": \"海盐县\",\n  \"value\": \"330424\" },\n\n{\n  \"label\": \"海宁市\",\n  \"value\": \"330481\" },\n\n{\n  \"label\": \"平湖市\",\n  \"value\": \"330482\" },\n\n{\n  \"label\": \"桐乡市\",\n  \"value\": \"330483\" }],\n\n\n[{\n  \"label\": \"吴兴区\",\n  \"value\": \"330502\" },\n\n{\n  \"label\": \"南浔区\",\n  \"value\": \"330503\" },\n\n{\n  \"label\": \"德清县\",\n  \"value\": \"330521\" },\n\n{\n  \"label\": \"长兴县\",\n  \"value\": \"330522\" },\n\n{\n  \"label\": \"安吉县\",\n  \"value\": \"330523\" }],\n\n\n[{\n  \"label\": \"越城区\",\n  \"value\": \"330602\" },\n\n{\n  \"label\": \"柯桥区\",\n  \"value\": \"330603\" },\n\n{\n  \"label\": \"上虞区\",\n  \"value\": \"330604\" },\n\n{\n  \"label\": \"新昌县\",\n  \"value\": \"330624\" },\n\n{\n  \"label\": \"诸暨市\",\n  \"value\": \"330681\" },\n\n{\n  \"label\": \"嵊州市\",\n  \"value\": \"330683\" }],\n\n\n[{\n  \"label\": \"婺城区\",\n  \"value\": \"330702\" },\n\n{\n  \"label\": \"金东区\",\n  \"value\": \"330703\" },\n\n{\n  \"label\": \"武义县\",\n  \"value\": \"330723\" },\n\n{\n  \"label\": \"浦江县\",\n  \"value\": \"330726\" },\n\n{\n  \"label\": \"磐安县\",\n  \"value\": \"330727\" },\n\n{\n  \"label\": \"兰溪市\",\n  \"value\": \"330781\" },\n\n{\n  \"label\": \"义乌市\",\n  \"value\": \"330782\" },\n\n{\n  \"label\": \"东阳市\",\n  \"value\": \"330783\" },\n\n{\n  \"label\": \"永康市\",\n  \"value\": \"330784\" }],\n\n\n[{\n  \"label\": \"柯城区\",\n  \"value\": \"330802\" },\n\n{\n  \"label\": \"衢江区\",\n  \"value\": \"330803\" },\n\n{\n  \"label\": \"常山县\",\n  \"value\": \"330822\" },\n\n{\n  \"label\": \"开化县\",\n  \"value\": \"330824\" },\n\n{\n  \"label\": \"龙游县\",\n  \"value\": \"330825\" },\n\n{\n  \"label\": \"江山市\",\n  \"value\": \"330881\" }],\n\n\n[{\n  \"label\": \"定海区\",\n  \"value\": \"330902\" },\n\n{\n  \"label\": \"普陀区\",\n  \"value\": \"330903\" },\n\n{\n  \"label\": \"岱山县\",\n  \"value\": \"330921\" },\n\n{\n  \"label\": \"嵊泗县\",\n  \"value\": \"330922\" }],\n\n\n[{\n  \"label\": \"椒江区\",\n  \"value\": \"331002\" },\n\n{\n  \"label\": \"黄岩区\",\n  \"value\": \"331003\" },\n\n{\n  \"label\": \"路桥区\",\n  \"value\": \"331004\" },\n\n{\n  \"label\": \"三门县\",\n  \"value\": \"331022\" },\n\n{\n  \"label\": \"天台县\",\n  \"value\": \"331023\" },\n\n{\n  \"label\": \"仙居县\",\n  \"value\": \"331024\" },\n\n{\n  \"label\": \"温岭市\",\n  \"value\": \"331081\" },\n\n{\n  \"label\": \"临海市\",\n  \"value\": \"331082\" },\n\n{\n  \"label\": \"玉环市\",\n  \"value\": \"331083\" }],\n\n\n[{\n  \"label\": \"莲都区\",\n  \"value\": \"331102\" },\n\n{\n  \"label\": \"青田县\",\n  \"value\": \"331121\" },\n\n{\n  \"label\": \"缙云县\",\n  \"value\": \"331122\" },\n\n{\n  \"label\": \"遂昌县\",\n  \"value\": \"331123\" },\n\n{\n  \"label\": \"松阳县\",\n  \"value\": \"331124\" },\n\n{\n  \"label\": \"云和县\",\n  \"value\": \"331125\" },\n\n{\n  \"label\": \"庆元县\",\n  \"value\": \"331126\" },\n\n{\n  \"label\": \"景宁畲族自治县\",\n  \"value\": \"331127\" },\n\n{\n  \"label\": \"龙泉市\",\n  \"value\": \"331181\" }]],\n\n\n\n[\n[{\n  \"label\": \"瑶海区\",\n  \"value\": \"340102\" },\n\n{\n  \"label\": \"庐阳区\",\n  \"value\": \"340103\" },\n\n{\n  \"label\": \"蜀山区\",\n  \"value\": \"340104\" },\n\n{\n  \"label\": \"包河区\",\n  \"value\": \"340111\" },\n\n{\n  \"label\": \"长丰县\",\n  \"value\": \"340121\" },\n\n{\n  \"label\": \"肥东县\",\n  \"value\": \"340122\" },\n\n{\n  \"label\": \"肥西县\",\n  \"value\": \"340123\" },\n\n{\n  \"label\": \"庐江县\",\n  \"value\": \"340124\" },\n\n{\n  \"label\": \"合肥高新技术产业开发区\",\n  \"value\": \"340171\" },\n\n{\n  \"label\": \"合肥经济技术开发区\",\n  \"value\": \"340172\" },\n\n{\n  \"label\": \"合肥新站高新技术产业开发区\",\n  \"value\": \"340173\" },\n\n{\n  \"label\": \"巢湖市\",\n  \"value\": \"340181\" }],\n\n\n[{\n  \"label\": \"镜湖区\",\n  \"value\": \"340202\" },\n\n{\n  \"label\": \"弋江区\",\n  \"value\": \"340203\" },\n\n{\n  \"label\": \"鸠江区\",\n  \"value\": \"340207\" },\n\n{\n  \"label\": \"三山区\",\n  \"value\": \"340208\" },\n\n{\n  \"label\": \"芜湖县\",\n  \"value\": \"340221\" },\n\n{\n  \"label\": \"繁昌县\",\n  \"value\": \"340222\" },\n\n{\n  \"label\": \"南陵县\",\n  \"value\": \"340223\" },\n\n{\n  \"label\": \"无为县\",\n  \"value\": \"340225\" },\n\n{\n  \"label\": \"芜湖经济技术开发区\",\n  \"value\": \"340271\" },\n\n{\n  \"label\": \"安徽芜湖长江大桥经济开发区\",\n  \"value\": \"340272\" }],\n\n\n[{\n  \"label\": \"龙子湖区\",\n  \"value\": \"340302\" },\n\n{\n  \"label\": \"蚌山区\",\n  \"value\": \"340303\" },\n\n{\n  \"label\": \"禹会区\",\n  \"value\": \"340304\" },\n\n{\n  \"label\": \"淮上区\",\n  \"value\": \"340311\" },\n\n{\n  \"label\": \"怀远县\",\n  \"value\": \"340321\" },\n\n{\n  \"label\": \"五河县\",\n  \"value\": \"340322\" },\n\n{\n  \"label\": \"固镇县\",\n  \"value\": \"340323\" },\n\n{\n  \"label\": \"蚌埠市高新技术开发区\",\n  \"value\": \"340371\" },\n\n{\n  \"label\": \"蚌埠市经济开发区\",\n  \"value\": \"340372\" }],\n\n\n[{\n  \"label\": \"大通区\",\n  \"value\": \"340402\" },\n\n{\n  \"label\": \"田家庵区\",\n  \"value\": \"340403\" },\n\n{\n  \"label\": \"谢家集区\",\n  \"value\": \"340404\" },\n\n{\n  \"label\": \"八公山区\",\n  \"value\": \"340405\" },\n\n{\n  \"label\": \"潘集区\",\n  \"value\": \"340406\" },\n\n{\n  \"label\": \"凤台县\",\n  \"value\": \"340421\" },\n\n{\n  \"label\": \"寿县\",\n  \"value\": \"340422\" }],\n\n\n[{\n  \"label\": \"花山区\",\n  \"value\": \"340503\" },\n\n{\n  \"label\": \"雨山区\",\n  \"value\": \"340504\" },\n\n{\n  \"label\": \"博望区\",\n  \"value\": \"340506\" },\n\n{\n  \"label\": \"当涂县\",\n  \"value\": \"340521\" },\n\n{\n  \"label\": \"含山县\",\n  \"value\": \"340522\" },\n\n{\n  \"label\": \"和县\",\n  \"value\": \"340523\" }],\n\n\n[{\n  \"label\": \"杜集区\",\n  \"value\": \"340602\" },\n\n{\n  \"label\": \"相山区\",\n  \"value\": \"340603\" },\n\n{\n  \"label\": \"烈山区\",\n  \"value\": \"340604\" },\n\n{\n  \"label\": \"濉溪县\",\n  \"value\": \"340621\" }],\n\n\n[{\n  \"label\": \"铜官区\",\n  \"value\": \"340705\" },\n\n{\n  \"label\": \"义安区\",\n  \"value\": \"340706\" },\n\n{\n  \"label\": \"郊区\",\n  \"value\": \"340711\" },\n\n{\n  \"label\": \"枞阳县\",\n  \"value\": \"340722\" }],\n\n\n[{\n  \"label\": \"迎江区\",\n  \"value\": \"340802\" },\n\n{\n  \"label\": \"大观区\",\n  \"value\": \"340803\" },\n\n{\n  \"label\": \"宜秀区\",\n  \"value\": \"340811\" },\n\n{\n  \"label\": \"怀宁县\",\n  \"value\": \"340822\" },\n\n{\n  \"label\": \"潜山县\",\n  \"value\": \"340824\" },\n\n{\n  \"label\": \"太湖县\",\n  \"value\": \"340825\" },\n\n{\n  \"label\": \"宿松县\",\n  \"value\": \"340826\" },\n\n{\n  \"label\": \"望江县\",\n  \"value\": \"340827\" },\n\n{\n  \"label\": \"岳西县\",\n  \"value\": \"340828\" },\n\n{\n  \"label\": \"安徽安庆经济开发区\",\n  \"value\": \"340871\" },\n\n{\n  \"label\": \"桐城市\",\n  \"value\": \"340881\" }],\n\n\n[{\n  \"label\": \"屯溪区\",\n  \"value\": \"341002\" },\n\n{\n  \"label\": \"黄山区\",\n  \"value\": \"341003\" },\n\n{\n  \"label\": \"徽州区\",\n  \"value\": \"341004\" },\n\n{\n  \"label\": \"歙县\",\n  \"value\": \"341021\" },\n\n{\n  \"label\": \"休宁县\",\n  \"value\": \"341022\" },\n\n{\n  \"label\": \"黟县\",\n  \"value\": \"341023\" },\n\n{\n  \"label\": \"祁门县\",\n  \"value\": \"341024\" }],\n\n\n[{\n  \"label\": \"琅琊区\",\n  \"value\": \"341102\" },\n\n{\n  \"label\": \"南谯区\",\n  \"value\": \"341103\" },\n\n{\n  \"label\": \"来安县\",\n  \"value\": \"341122\" },\n\n{\n  \"label\": \"全椒县\",\n  \"value\": \"341124\" },\n\n{\n  \"label\": \"定远县\",\n  \"value\": \"341125\" },\n\n{\n  \"label\": \"凤阳县\",\n  \"value\": \"341126\" },\n\n{\n  \"label\": \"苏滁现代产业园\",\n  \"value\": \"341171\" },\n\n{\n  \"label\": \"滁州经济技术开发区\",\n  \"value\": \"341172\" },\n\n{\n  \"label\": \"天长市\",\n  \"value\": \"341181\" },\n\n{\n  \"label\": \"明光市\",\n  \"value\": \"341182\" }],\n\n\n[{\n  \"label\": \"颍州区\",\n  \"value\": \"341202\" },\n\n{\n  \"label\": \"颍东区\",\n  \"value\": \"341203\" },\n\n{\n  \"label\": \"颍泉区\",\n  \"value\": \"341204\" },\n\n{\n  \"label\": \"临泉县\",\n  \"value\": \"341221\" },\n\n{\n  \"label\": \"太和县\",\n  \"value\": \"341222\" },\n\n{\n  \"label\": \"阜南县\",\n  \"value\": \"341225\" },\n\n{\n  \"label\": \"颍上县\",\n  \"value\": \"341226\" },\n\n{\n  \"label\": \"阜阳合肥现代产业园区\",\n  \"value\": \"341271\" },\n\n{\n  \"label\": \"阜阳经济技术开发区\",\n  \"value\": \"341272\" },\n\n{\n  \"label\": \"界首市\",\n  \"value\": \"341282\" }],\n\n\n[{\n  \"label\": \"埇桥区\",\n  \"value\": \"341302\" },\n\n{\n  \"label\": \"砀山县\",\n  \"value\": \"341321\" },\n\n{\n  \"label\": \"萧县\",\n  \"value\": \"341322\" },\n\n{\n  \"label\": \"灵璧县\",\n  \"value\": \"341323\" },\n\n{\n  \"label\": \"泗县\",\n  \"value\": \"341324\" },\n\n{\n  \"label\": \"宿州马鞍山现代产业园区\",\n  \"value\": \"341371\" },\n\n{\n  \"label\": \"宿州经济技术开发区\",\n  \"value\": \"341372\" }],\n\n\n[{\n  \"label\": \"金安区\",\n  \"value\": \"341502\" },\n\n{\n  \"label\": \"裕安区\",\n  \"value\": \"341503\" },\n\n{\n  \"label\": \"叶集区\",\n  \"value\": \"341504\" },\n\n{\n  \"label\": \"霍邱县\",\n  \"value\": \"341522\" },\n\n{\n  \"label\": \"舒城县\",\n  \"value\": \"341523\" },\n\n{\n  \"label\": \"金寨县\",\n  \"value\": \"341524\" },\n\n{\n  \"label\": \"霍山县\",\n  \"value\": \"341525\" }],\n\n\n[{\n  \"label\": \"谯城区\",\n  \"value\": \"341602\" },\n\n{\n  \"label\": \"涡阳县\",\n  \"value\": \"341621\" },\n\n{\n  \"label\": \"蒙城县\",\n  \"value\": \"341622\" },\n\n{\n  \"label\": \"利辛县\",\n  \"value\": \"341623\" }],\n\n\n[{\n  \"label\": \"贵池区\",\n  \"value\": \"341702\" },\n\n{\n  \"label\": \"东至县\",\n  \"value\": \"341721\" },\n\n{\n  \"label\": \"石台县\",\n  \"value\": \"341722\" },\n\n{\n  \"label\": \"青阳县\",\n  \"value\": \"341723\" }],\n\n\n[{\n  \"label\": \"宣州区\",\n  \"value\": \"341802\" },\n\n{\n  \"label\": \"郎溪县\",\n  \"value\": \"341821\" },\n\n{\n  \"label\": \"广德县\",\n  \"value\": \"341822\" },\n\n{\n  \"label\": \"泾县\",\n  \"value\": \"341823\" },\n\n{\n  \"label\": \"绩溪县\",\n  \"value\": \"341824\" },\n\n{\n  \"label\": \"旌德县\",\n  \"value\": \"341825\" },\n\n{\n  \"label\": \"宣城市经济开发区\",\n  \"value\": \"341871\" },\n\n{\n  \"label\": \"宁国市\",\n  \"value\": \"341881\" }]],\n\n\n\n[\n[{\n  \"label\": \"鼓楼区\",\n  \"value\": \"350102\" },\n\n{\n  \"label\": \"台江区\",\n  \"value\": \"350103\" },\n\n{\n  \"label\": \"仓山区\",\n  \"value\": \"350104\" },\n\n{\n  \"label\": \"马尾区\",\n  \"value\": \"350105\" },\n\n{\n  \"label\": \"晋安区\",\n  \"value\": \"350111\" },\n\n{\n  \"label\": \"闽侯县\",\n  \"value\": \"350121\" },\n\n{\n  \"label\": \"连江县\",\n  \"value\": \"350122\" },\n\n{\n  \"label\": \"罗源县\",\n  \"value\": \"350123\" },\n\n{\n  \"label\": \"闽清县\",\n  \"value\": \"350124\" },\n\n{\n  \"label\": \"永泰县\",\n  \"value\": \"350125\" },\n\n{\n  \"label\": \"平潭县\",\n  \"value\": \"350128\" },\n\n{\n  \"label\": \"福清市\",\n  \"value\": \"350181\" },\n\n{\n  \"label\": \"长乐市\",\n  \"value\": \"350182\" }],\n\n\n[{\n  \"label\": \"思明区\",\n  \"value\": \"350203\" },\n\n{\n  \"label\": \"海沧区\",\n  \"value\": \"350205\" },\n\n{\n  \"label\": \"湖里区\",\n  \"value\": \"350206\" },\n\n{\n  \"label\": \"集美区\",\n  \"value\": \"350211\" },\n\n{\n  \"label\": \"同安区\",\n  \"value\": \"350212\" },\n\n{\n  \"label\": \"翔安区\",\n  \"value\": \"350213\" }],\n\n\n[{\n  \"label\": \"城厢区\",\n  \"value\": \"350302\" },\n\n{\n  \"label\": \"涵江区\",\n  \"value\": \"350303\" },\n\n{\n  \"label\": \"荔城区\",\n  \"value\": \"350304\" },\n\n{\n  \"label\": \"秀屿区\",\n  \"value\": \"350305\" },\n\n{\n  \"label\": \"仙游县\",\n  \"value\": \"350322\" }],\n\n\n[{\n  \"label\": \"梅列区\",\n  \"value\": \"350402\" },\n\n{\n  \"label\": \"三元区\",\n  \"value\": \"350403\" },\n\n{\n  \"label\": \"明溪县\",\n  \"value\": \"350421\" },\n\n{\n  \"label\": \"清流县\",\n  \"value\": \"350423\" },\n\n{\n  \"label\": \"宁化县\",\n  \"value\": \"350424\" },\n\n{\n  \"label\": \"大田县\",\n  \"value\": \"350425\" },\n\n{\n  \"label\": \"尤溪县\",\n  \"value\": \"350426\" },\n\n{\n  \"label\": \"沙县\",\n  \"value\": \"350427\" },\n\n{\n  \"label\": \"将乐县\",\n  \"value\": \"350428\" },\n\n{\n  \"label\": \"泰宁县\",\n  \"value\": \"350429\" },\n\n{\n  \"label\": \"建宁县\",\n  \"value\": \"350430\" },\n\n{\n  \"label\": \"永安市\",\n  \"value\": \"350481\" }],\n\n\n[{\n  \"label\": \"鲤城区\",\n  \"value\": \"350502\" },\n\n{\n  \"label\": \"丰泽区\",\n  \"value\": \"350503\" },\n\n{\n  \"label\": \"洛江区\",\n  \"value\": \"350504\" },\n\n{\n  \"label\": \"泉港区\",\n  \"value\": \"350505\" },\n\n{\n  \"label\": \"惠安县\",\n  \"value\": \"350521\" },\n\n{\n  \"label\": \"安溪县\",\n  \"value\": \"350524\" },\n\n{\n  \"label\": \"永春县\",\n  \"value\": \"350525\" },\n\n{\n  \"label\": \"德化县\",\n  \"value\": \"350526\" },\n\n{\n  \"label\": \"金门县\",\n  \"value\": \"350527\" },\n\n{\n  \"label\": \"石狮市\",\n  \"value\": \"350581\" },\n\n{\n  \"label\": \"晋江市\",\n  \"value\": \"350582\" },\n\n{\n  \"label\": \"南安市\",\n  \"value\": \"350583\" }],\n\n\n[{\n  \"label\": \"芗城区\",\n  \"value\": \"350602\" },\n\n{\n  \"label\": \"龙文区\",\n  \"value\": \"350603\" },\n\n{\n  \"label\": \"云霄县\",\n  \"value\": \"350622\" },\n\n{\n  \"label\": \"漳浦县\",\n  \"value\": \"350623\" },\n\n{\n  \"label\": \"诏安县\",\n  \"value\": \"350624\" },\n\n{\n  \"label\": \"长泰县\",\n  \"value\": \"350625\" },\n\n{\n  \"label\": \"东山县\",\n  \"value\": \"350626\" },\n\n{\n  \"label\": \"南靖县\",\n  \"value\": \"350627\" },\n\n{\n  \"label\": \"平和县\",\n  \"value\": \"350628\" },\n\n{\n  \"label\": \"华安县\",\n  \"value\": \"350629\" },\n\n{\n  \"label\": \"龙海市\",\n  \"value\": \"350681\" }],\n\n\n[{\n  \"label\": \"延平区\",\n  \"value\": \"350702\" },\n\n{\n  \"label\": \"建阳区\",\n  \"value\": \"350703\" },\n\n{\n  \"label\": \"顺昌县\",\n  \"value\": \"350721\" },\n\n{\n  \"label\": \"浦城县\",\n  \"value\": \"350722\" },\n\n{\n  \"label\": \"光泽县\",\n  \"value\": \"350723\" },\n\n{\n  \"label\": \"松溪县\",\n  \"value\": \"350724\" },\n\n{\n  \"label\": \"政和县\",\n  \"value\": \"350725\" },\n\n{\n  \"label\": \"邵武市\",\n  \"value\": \"350781\" },\n\n{\n  \"label\": \"武夷山市\",\n  \"value\": \"350782\" },\n\n{\n  \"label\": \"建瓯市\",\n  \"value\": \"350783\" }],\n\n\n[{\n  \"label\": \"新罗区\",\n  \"value\": \"350802\" },\n\n{\n  \"label\": \"永定区\",\n  \"value\": \"350803\" },\n\n{\n  \"label\": \"长汀县\",\n  \"value\": \"350821\" },\n\n{\n  \"label\": \"上杭县\",\n  \"value\": \"350823\" },\n\n{\n  \"label\": \"武平县\",\n  \"value\": \"350824\" },\n\n{\n  \"label\": \"连城县\",\n  \"value\": \"350825\" },\n\n{\n  \"label\": \"漳平市\",\n  \"value\": \"350881\" }],\n\n\n[{\n  \"label\": \"蕉城区\",\n  \"value\": \"350902\" },\n\n{\n  \"label\": \"霞浦县\",\n  \"value\": \"350921\" },\n\n{\n  \"label\": \"古田县\",\n  \"value\": \"350922\" },\n\n{\n  \"label\": \"屏南县\",\n  \"value\": \"350923\" },\n\n{\n  \"label\": \"寿宁县\",\n  \"value\": \"350924\" },\n\n{\n  \"label\": \"周宁县\",\n  \"value\": \"350925\" },\n\n{\n  \"label\": \"柘荣县\",\n  \"value\": \"350926\" },\n\n{\n  \"label\": \"福安市\",\n  \"value\": \"350981\" },\n\n{\n  \"label\": \"福鼎市\",\n  \"value\": \"350982\" }]],\n\n\n\n[\n[{\n  \"label\": \"东湖区\",\n  \"value\": \"360102\" },\n\n{\n  \"label\": \"西湖区\",\n  \"value\": \"360103\" },\n\n{\n  \"label\": \"青云谱区\",\n  \"value\": \"360104\" },\n\n{\n  \"label\": \"湾里区\",\n  \"value\": \"360105\" },\n\n{\n  \"label\": \"青山湖区\",\n  \"value\": \"360111\" },\n\n{\n  \"label\": \"新建区\",\n  \"value\": \"360112\" },\n\n{\n  \"label\": \"南昌县\",\n  \"value\": \"360121\" },\n\n{\n  \"label\": \"安义县\",\n  \"value\": \"360123\" },\n\n{\n  \"label\": \"进贤县\",\n  \"value\": \"360124\" }],\n\n\n[{\n  \"label\": \"昌江区\",\n  \"value\": \"360202\" },\n\n{\n  \"label\": \"珠山区\",\n  \"value\": \"360203\" },\n\n{\n  \"label\": \"浮梁县\",\n  \"value\": \"360222\" },\n\n{\n  \"label\": \"乐平市\",\n  \"value\": \"360281\" }],\n\n\n[{\n  \"label\": \"安源区\",\n  \"value\": \"360302\" },\n\n{\n  \"label\": \"湘东区\",\n  \"value\": \"360313\" },\n\n{\n  \"label\": \"莲花县\",\n  \"value\": \"360321\" },\n\n{\n  \"label\": \"上栗县\",\n  \"value\": \"360322\" },\n\n{\n  \"label\": \"芦溪县\",\n  \"value\": \"360323\" }],\n\n\n[{\n  \"label\": \"濂溪区\",\n  \"value\": \"360402\" },\n\n{\n  \"label\": \"浔阳区\",\n  \"value\": \"360403\" },\n\n{\n  \"label\": \"柴桑区\",\n  \"value\": \"360404\" },\n\n{\n  \"label\": \"武宁县\",\n  \"value\": \"360423\" },\n\n{\n  \"label\": \"修水县\",\n  \"value\": \"360424\" },\n\n{\n  \"label\": \"永修县\",\n  \"value\": \"360425\" },\n\n{\n  \"label\": \"德安县\",\n  \"value\": \"360426\" },\n\n{\n  \"label\": \"都昌县\",\n  \"value\": \"360428\" },\n\n{\n  \"label\": \"湖口县\",\n  \"value\": \"360429\" },\n\n{\n  \"label\": \"彭泽县\",\n  \"value\": \"360430\" },\n\n{\n  \"label\": \"瑞昌市\",\n  \"value\": \"360481\" },\n\n{\n  \"label\": \"共青城市\",\n  \"value\": \"360482\" },\n\n{\n  \"label\": \"庐山市\",\n  \"value\": \"360483\" }],\n\n\n[{\n  \"label\": \"渝水区\",\n  \"value\": \"360502\" },\n\n{\n  \"label\": \"分宜县\",\n  \"value\": \"360521\" }],\n\n\n[{\n  \"label\": \"月湖区\",\n  \"value\": \"360602\" },\n\n{\n  \"label\": \"余江县\",\n  \"value\": \"360622\" },\n\n{\n  \"label\": \"贵溪市\",\n  \"value\": \"360681\" }],\n\n\n[{\n  \"label\": \"章贡区\",\n  \"value\": \"360702\" },\n\n{\n  \"label\": \"南康区\",\n  \"value\": \"360703\" },\n\n{\n  \"label\": \"赣县区\",\n  \"value\": \"360704\" },\n\n{\n  \"label\": \"信丰县\",\n  \"value\": \"360722\" },\n\n{\n  \"label\": \"大余县\",\n  \"value\": \"360723\" },\n\n{\n  \"label\": \"上犹县\",\n  \"value\": \"360724\" },\n\n{\n  \"label\": \"崇义县\",\n  \"value\": \"360725\" },\n\n{\n  \"label\": \"安远县\",\n  \"value\": \"360726\" },\n\n{\n  \"label\": \"龙南县\",\n  \"value\": \"360727\" },\n\n{\n  \"label\": \"定南县\",\n  \"value\": \"360728\" },\n\n{\n  \"label\": \"全南县\",\n  \"value\": \"360729\" },\n\n{\n  \"label\": \"宁都县\",\n  \"value\": \"360730\" },\n\n{\n  \"label\": \"于都县\",\n  \"value\": \"360731\" },\n\n{\n  \"label\": \"兴国县\",\n  \"value\": \"360732\" },\n\n{\n  \"label\": \"会昌县\",\n  \"value\": \"360733\" },\n\n{\n  \"label\": \"寻乌县\",\n  \"value\": \"360734\" },\n\n{\n  \"label\": \"石城县\",\n  \"value\": \"360735\" },\n\n{\n  \"label\": \"瑞金市\",\n  \"value\": \"360781\" }],\n\n\n[{\n  \"label\": \"吉州区\",\n  \"value\": \"360802\" },\n\n{\n  \"label\": \"青原区\",\n  \"value\": \"360803\" },\n\n{\n  \"label\": \"吉安县\",\n  \"value\": \"360821\" },\n\n{\n  \"label\": \"吉水县\",\n  \"value\": \"360822\" },\n\n{\n  \"label\": \"峡江县\",\n  \"value\": \"360823\" },\n\n{\n  \"label\": \"新干县\",\n  \"value\": \"360824\" },\n\n{\n  \"label\": \"永丰县\",\n  \"value\": \"360825\" },\n\n{\n  \"label\": \"泰和县\",\n  \"value\": \"360826\" },\n\n{\n  \"label\": \"遂川县\",\n  \"value\": \"360827\" },\n\n{\n  \"label\": \"万安县\",\n  \"value\": \"360828\" },\n\n{\n  \"label\": \"安福县\",\n  \"value\": \"360829\" },\n\n{\n  \"label\": \"永新县\",\n  \"value\": \"360830\" },\n\n{\n  \"label\": \"井冈山市\",\n  \"value\": \"360881\" }],\n\n\n[{\n  \"label\": \"袁州区\",\n  \"value\": \"360902\" },\n\n{\n  \"label\": \"奉新县\",\n  \"value\": \"360921\" },\n\n{\n  \"label\": \"万载县\",\n  \"value\": \"360922\" },\n\n{\n  \"label\": \"上高县\",\n  \"value\": \"360923\" },\n\n{\n  \"label\": \"宜丰县\",\n  \"value\": \"360924\" },\n\n{\n  \"label\": \"靖安县\",\n  \"value\": \"360925\" },\n\n{\n  \"label\": \"铜鼓县\",\n  \"value\": \"360926\" },\n\n{\n  \"label\": \"丰城市\",\n  \"value\": \"360981\" },\n\n{\n  \"label\": \"樟树市\",\n  \"value\": \"360982\" },\n\n{\n  \"label\": \"高安市\",\n  \"value\": \"360983\" }],\n\n\n[{\n  \"label\": \"临川区\",\n  \"value\": \"361002\" },\n\n{\n  \"label\": \"东乡区\",\n  \"value\": \"361003\" },\n\n{\n  \"label\": \"南城县\",\n  \"value\": \"361021\" },\n\n{\n  \"label\": \"黎川县\",\n  \"value\": \"361022\" },\n\n{\n  \"label\": \"南丰县\",\n  \"value\": \"361023\" },\n\n{\n  \"label\": \"崇仁县\",\n  \"value\": \"361024\" },\n\n{\n  \"label\": \"乐安县\",\n  \"value\": \"361025\" },\n\n{\n  \"label\": \"宜黄县\",\n  \"value\": \"361026\" },\n\n{\n  \"label\": \"金溪县\",\n  \"value\": \"361027\" },\n\n{\n  \"label\": \"资溪县\",\n  \"value\": \"361028\" },\n\n{\n  \"label\": \"广昌县\",\n  \"value\": \"361030\" }],\n\n\n[{\n  \"label\": \"信州区\",\n  \"value\": \"361102\" },\n\n{\n  \"label\": \"广丰区\",\n  \"value\": \"361103\" },\n\n{\n  \"label\": \"上饶县\",\n  \"value\": \"361121\" },\n\n{\n  \"label\": \"玉山县\",\n  \"value\": \"361123\" },\n\n{\n  \"label\": \"铅山县\",\n  \"value\": \"361124\" },\n\n{\n  \"label\": \"横峰县\",\n  \"value\": \"361125\" },\n\n{\n  \"label\": \"弋阳县\",\n  \"value\": \"361126\" },\n\n{\n  \"label\": \"余干县\",\n  \"value\": \"361127\" },\n\n{\n  \"label\": \"鄱阳县\",\n  \"value\": \"361128\" },\n\n{\n  \"label\": \"万年县\",\n  \"value\": \"361129\" },\n\n{\n  \"label\": \"婺源县\",\n  \"value\": \"361130\" },\n\n{\n  \"label\": \"德兴市\",\n  \"value\": \"361181\" }]],\n\n\n\n[\n[{\n  \"label\": \"历下区\",\n  \"value\": \"370102\" },\n\n{\n  \"label\": \"市中区\",\n  \"value\": \"370103\" },\n\n{\n  \"label\": \"槐荫区\",\n  \"value\": \"370104\" },\n\n{\n  \"label\": \"天桥区\",\n  \"value\": \"370105\" },\n\n{\n  \"label\": \"历城区\",\n  \"value\": \"370112\" },\n\n{\n  \"label\": \"长清区\",\n  \"value\": \"370113\" },\n\n{\n  \"label\": \"章丘区\",\n  \"value\": \"370114\" },\n\n{\n  \"label\": \"平阴县\",\n  \"value\": \"370124\" },\n\n{\n  \"label\": \"济阳县\",\n  \"value\": \"370125\" },\n\n{\n  \"label\": \"商河县\",\n  \"value\": \"370126\" },\n\n{\n  \"label\": \"济南高新技术产业开发区\",\n  \"value\": \"370171\" }],\n\n\n[{\n  \"label\": \"市南区\",\n  \"value\": \"370202\" },\n\n{\n  \"label\": \"市北区\",\n  \"value\": \"370203\" },\n\n{\n  \"label\": \"黄岛区\",\n  \"value\": \"370211\" },\n\n{\n  \"label\": \"崂山区\",\n  \"value\": \"370212\" },\n\n{\n  \"label\": \"李沧区\",\n  \"value\": \"370213\" },\n\n{\n  \"label\": \"城阳区\",\n  \"value\": \"370214\" },\n\n{\n  \"label\": \"即墨区\",\n  \"value\": \"370215\" },\n\n{\n  \"label\": \"青岛高新技术产业开发区\",\n  \"value\": \"370271\" },\n\n{\n  \"label\": \"胶州市\",\n  \"value\": \"370281\" },\n\n{\n  \"label\": \"平度市\",\n  \"value\": \"370283\" },\n\n{\n  \"label\": \"莱西市\",\n  \"value\": \"370285\" }],\n\n\n[{\n  \"label\": \"淄川区\",\n  \"value\": \"370302\" },\n\n{\n  \"label\": \"张店区\",\n  \"value\": \"370303\" },\n\n{\n  \"label\": \"博山区\",\n  \"value\": \"370304\" },\n\n{\n  \"label\": \"临淄区\",\n  \"value\": \"370305\" },\n\n{\n  \"label\": \"周村区\",\n  \"value\": \"370306\" },\n\n{\n  \"label\": \"桓台县\",\n  \"value\": \"370321\" },\n\n{\n  \"label\": \"高青县\",\n  \"value\": \"370322\" },\n\n{\n  \"label\": \"沂源县\",\n  \"value\": \"370323\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"370402\" },\n\n{\n  \"label\": \"薛城区\",\n  \"value\": \"370403\" },\n\n{\n  \"label\": \"峄城区\",\n  \"value\": \"370404\" },\n\n{\n  \"label\": \"台儿庄区\",\n  \"value\": \"370405\" },\n\n{\n  \"label\": \"山亭区\",\n  \"value\": \"370406\" },\n\n{\n  \"label\": \"滕州市\",\n  \"value\": \"370481\" }],\n\n\n[{\n  \"label\": \"东营区\",\n  \"value\": \"370502\" },\n\n{\n  \"label\": \"河口区\",\n  \"value\": \"370503\" },\n\n{\n  \"label\": \"垦利区\",\n  \"value\": \"370505\" },\n\n{\n  \"label\": \"利津县\",\n  \"value\": \"370522\" },\n\n{\n  \"label\": \"广饶县\",\n  \"value\": \"370523\" },\n\n{\n  \"label\": \"东营经济技术开发区\",\n  \"value\": \"370571\" },\n\n{\n  \"label\": \"东营港经济开发区\",\n  \"value\": \"370572\" }],\n\n\n[{\n  \"label\": \"芝罘区\",\n  \"value\": \"370602\" },\n\n{\n  \"label\": \"福山区\",\n  \"value\": \"370611\" },\n\n{\n  \"label\": \"牟平区\",\n  \"value\": \"370612\" },\n\n{\n  \"label\": \"莱山区\",\n  \"value\": \"370613\" },\n\n{\n  \"label\": \"长岛县\",\n  \"value\": \"370634\" },\n\n{\n  \"label\": \"烟台高新技术产业开发区\",\n  \"value\": \"370671\" },\n\n{\n  \"label\": \"烟台经济技术开发区\",\n  \"value\": \"370672\" },\n\n{\n  \"label\": \"龙口市\",\n  \"value\": \"370681\" },\n\n{\n  \"label\": \"莱阳市\",\n  \"value\": \"370682\" },\n\n{\n  \"label\": \"莱州市\",\n  \"value\": \"370683\" },\n\n{\n  \"label\": \"蓬莱市\",\n  \"value\": \"370684\" },\n\n{\n  \"label\": \"招远市\",\n  \"value\": \"370685\" },\n\n{\n  \"label\": \"栖霞市\",\n  \"value\": \"370686\" },\n\n{\n  \"label\": \"海阳市\",\n  \"value\": \"370687\" }],\n\n\n[{\n  \"label\": \"潍城区\",\n  \"value\": \"370702\" },\n\n{\n  \"label\": \"寒亭区\",\n  \"value\": \"370703\" },\n\n{\n  \"label\": \"坊子区\",\n  \"value\": \"370704\" },\n\n{\n  \"label\": \"奎文区\",\n  \"value\": \"370705\" },\n\n{\n  \"label\": \"临朐县\",\n  \"value\": \"370724\" },\n\n{\n  \"label\": \"昌乐县\",\n  \"value\": \"370725\" },\n\n{\n  \"label\": \"潍坊滨海经济技术开发区\",\n  \"value\": \"370772\" },\n\n{\n  \"label\": \"青州市\",\n  \"value\": \"370781\" },\n\n{\n  \"label\": \"诸城市\",\n  \"value\": \"370782\" },\n\n{\n  \"label\": \"寿光市\",\n  \"value\": \"370783\" },\n\n{\n  \"label\": \"安丘市\",\n  \"value\": \"370784\" },\n\n{\n  \"label\": \"高密市\",\n  \"value\": \"370785\" },\n\n{\n  \"label\": \"昌邑市\",\n  \"value\": \"370786\" }],\n\n\n[{\n  \"label\": \"任城区\",\n  \"value\": \"370811\" },\n\n{\n  \"label\": \"兖州区\",\n  \"value\": \"370812\" },\n\n{\n  \"label\": \"微山县\",\n  \"value\": \"370826\" },\n\n{\n  \"label\": \"鱼台县\",\n  \"value\": \"370827\" },\n\n{\n  \"label\": \"金乡县\",\n  \"value\": \"370828\" },\n\n{\n  \"label\": \"嘉祥县\",\n  \"value\": \"370829\" },\n\n{\n  \"label\": \"汶上县\",\n  \"value\": \"370830\" },\n\n{\n  \"label\": \"泗水县\",\n  \"value\": \"370831\" },\n\n{\n  \"label\": \"梁山县\",\n  \"value\": \"370832\" },\n\n{\n  \"label\": \"济宁高新技术产业开发区\",\n  \"value\": \"370871\" },\n\n{\n  \"label\": \"曲阜市\",\n  \"value\": \"370881\" },\n\n{\n  \"label\": \"邹城市\",\n  \"value\": \"370883\" }],\n\n\n[{\n  \"label\": \"泰山区\",\n  \"value\": \"370902\" },\n\n{\n  \"label\": \"岱岳区\",\n  \"value\": \"370911\" },\n\n{\n  \"label\": \"宁阳县\",\n  \"value\": \"370921\" },\n\n{\n  \"label\": \"东平县\",\n  \"value\": \"370923\" },\n\n{\n  \"label\": \"新泰市\",\n  \"value\": \"370982\" },\n\n{\n  \"label\": \"肥城市\",\n  \"value\": \"370983\" }],\n\n\n[{\n  \"label\": \"环翠区\",\n  \"value\": \"371002\" },\n\n{\n  \"label\": \"文登区\",\n  \"value\": \"371003\" },\n\n{\n  \"label\": \"威海火炬高技术产业开发区\",\n  \"value\": \"371071\" },\n\n{\n  \"label\": \"威海经济技术开发区\",\n  \"value\": \"371072\" },\n\n{\n  \"label\": \"威海临港经济技术开发区\",\n  \"value\": \"371073\" },\n\n{\n  \"label\": \"荣成市\",\n  \"value\": \"371082\" },\n\n{\n  \"label\": \"乳山市\",\n  \"value\": \"371083\" }],\n\n\n[{\n  \"label\": \"东港区\",\n  \"value\": \"371102\" },\n\n{\n  \"label\": \"岚山区\",\n  \"value\": \"371103\" },\n\n{\n  \"label\": \"五莲县\",\n  \"value\": \"371121\" },\n\n{\n  \"label\": \"莒县\",\n  \"value\": \"371122\" },\n\n{\n  \"label\": \"日照经济技术开发区\",\n  \"value\": \"371171\" },\n\n{\n  \"label\": \"日照国际海洋城\",\n  \"value\": \"371172\" }],\n\n\n[{\n  \"label\": \"莱城区\",\n  \"value\": \"371202\" },\n\n{\n  \"label\": \"钢城区\",\n  \"value\": \"371203\" }],\n\n\n[{\n  \"label\": \"兰山区\",\n  \"value\": \"371302\" },\n\n{\n  \"label\": \"罗庄区\",\n  \"value\": \"371311\" },\n\n{\n  \"label\": \"河东区\",\n  \"value\": \"371312\" },\n\n{\n  \"label\": \"沂南县\",\n  \"value\": \"371321\" },\n\n{\n  \"label\": \"郯城县\",\n  \"value\": \"371322\" },\n\n{\n  \"label\": \"沂水县\",\n  \"value\": \"371323\" },\n\n{\n  \"label\": \"兰陵县\",\n  \"value\": \"371324\" },\n\n{\n  \"label\": \"费县\",\n  \"value\": \"371325\" },\n\n{\n  \"label\": \"平邑县\",\n  \"value\": \"371326\" },\n\n{\n  \"label\": \"莒南县\",\n  \"value\": \"371327\" },\n\n{\n  \"label\": \"蒙阴县\",\n  \"value\": \"371328\" },\n\n{\n  \"label\": \"临沭县\",\n  \"value\": \"371329\" },\n\n{\n  \"label\": \"临沂高新技术产业开发区\",\n  \"value\": \"371371\" },\n\n{\n  \"label\": \"临沂经济技术开发区\",\n  \"value\": \"371372\" },\n\n{\n  \"label\": \"临沂临港经济开发区\",\n  \"value\": \"371373\" }],\n\n\n[{\n  \"label\": \"德城区\",\n  \"value\": \"371402\" },\n\n{\n  \"label\": \"陵城区\",\n  \"value\": \"371403\" },\n\n{\n  \"label\": \"宁津县\",\n  \"value\": \"371422\" },\n\n{\n  \"label\": \"庆云县\",\n  \"value\": \"371423\" },\n\n{\n  \"label\": \"临邑县\",\n  \"value\": \"371424\" },\n\n{\n  \"label\": \"齐河县\",\n  \"value\": \"371425\" },\n\n{\n  \"label\": \"平原县\",\n  \"value\": \"371426\" },\n\n{\n  \"label\": \"夏津县\",\n  \"value\": \"371427\" },\n\n{\n  \"label\": \"武城县\",\n  \"value\": \"371428\" },\n\n{\n  \"label\": \"德州经济技术开发区\",\n  \"value\": \"371471\" },\n\n{\n  \"label\": \"德州运河经济开发区\",\n  \"value\": \"371472\" },\n\n{\n  \"label\": \"乐陵市\",\n  \"value\": \"371481\" },\n\n{\n  \"label\": \"禹城市\",\n  \"value\": \"371482\" }],\n\n\n[{\n  \"label\": \"东昌府区\",\n  \"value\": \"371502\" },\n\n{\n  \"label\": \"阳谷县\",\n  \"value\": \"371521\" },\n\n{\n  \"label\": \"莘县\",\n  \"value\": \"371522\" },\n\n{\n  \"label\": \"茌平县\",\n  \"value\": \"371523\" },\n\n{\n  \"label\": \"东阿县\",\n  \"value\": \"371524\" },\n\n{\n  \"label\": \"冠县\",\n  \"value\": \"371525\" },\n\n{\n  \"label\": \"高唐县\",\n  \"value\": \"371526\" },\n\n{\n  \"label\": \"临清市\",\n  \"value\": \"371581\" }],\n\n\n[{\n  \"label\": \"滨城区\",\n  \"value\": \"371602\" },\n\n{\n  \"label\": \"沾化区\",\n  \"value\": \"371603\" },\n\n{\n  \"label\": \"惠民县\",\n  \"value\": \"371621\" },\n\n{\n  \"label\": \"阳信县\",\n  \"value\": \"371622\" },\n\n{\n  \"label\": \"无棣县\",\n  \"value\": \"371623\" },\n\n{\n  \"label\": \"博兴县\",\n  \"value\": \"371625\" },\n\n{\n  \"label\": \"邹平县\",\n  \"value\": \"371626\" }],\n\n\n[{\n  \"label\": \"牡丹区\",\n  \"value\": \"371702\" },\n\n{\n  \"label\": \"定陶区\",\n  \"value\": \"371703\" },\n\n{\n  \"label\": \"曹县\",\n  \"value\": \"371721\" },\n\n{\n  \"label\": \"单县\",\n  \"value\": \"371722\" },\n\n{\n  \"label\": \"成武县\",\n  \"value\": \"371723\" },\n\n{\n  \"label\": \"巨野县\",\n  \"value\": \"371724\" },\n\n{\n  \"label\": \"郓城县\",\n  \"value\": \"371725\" },\n\n{\n  \"label\": \"鄄城县\",\n  \"value\": \"371726\" },\n\n{\n  \"label\": \"东明县\",\n  \"value\": \"371728\" },\n\n{\n  \"label\": \"菏泽经济技术开发区\",\n  \"value\": \"371771\" },\n\n{\n  \"label\": \"菏泽高新技术开发区\",\n  \"value\": \"371772\" }]],\n\n\n\n[\n[{\n  \"label\": \"中原区\",\n  \"value\": \"410102\" },\n\n{\n  \"label\": \"二七区\",\n  \"value\": \"410103\" },\n\n{\n  \"label\": \"管城回族区\",\n  \"value\": \"410104\" },\n\n{\n  \"label\": \"金水区\",\n  \"value\": \"410105\" },\n\n{\n  \"label\": \"上街区\",\n  \"value\": \"410106\" },\n\n{\n  \"label\": \"惠济区\",\n  \"value\": \"410108\" },\n\n{\n  \"label\": \"中牟县\",\n  \"value\": \"410122\" },\n\n{\n  \"label\": \"郑州经济技术开发区\",\n  \"value\": \"410171\" },\n\n{\n  \"label\": \"郑州高新技术产业开发区\",\n  \"value\": \"410172\" },\n\n{\n  \"label\": \"郑州航空港经济综合实验区\",\n  \"value\": \"410173\" },\n\n{\n  \"label\": \"巩义市\",\n  \"value\": \"410181\" },\n\n{\n  \"label\": \"荥阳市\",\n  \"value\": \"410182\" },\n\n{\n  \"label\": \"新密市\",\n  \"value\": \"410183\" },\n\n{\n  \"label\": \"新郑市\",\n  \"value\": \"410184\" },\n\n{\n  \"label\": \"登封市\",\n  \"value\": \"410185\" }],\n\n\n[{\n  \"label\": \"龙亭区\",\n  \"value\": \"410202\" },\n\n{\n  \"label\": \"顺河回族区\",\n  \"value\": \"410203\" },\n\n{\n  \"label\": \"鼓楼区\",\n  \"value\": \"410204\" },\n\n{\n  \"label\": \"禹王台区\",\n  \"value\": \"410205\" },\n\n{\n  \"label\": \"祥符区\",\n  \"value\": \"410212\" },\n\n{\n  \"label\": \"杞县\",\n  \"value\": \"410221\" },\n\n{\n  \"label\": \"通许县\",\n  \"value\": \"410222\" },\n\n{\n  \"label\": \"尉氏县\",\n  \"value\": \"410223\" },\n\n{\n  \"label\": \"兰考县\",\n  \"value\": \"410225\" }],\n\n\n[{\n  \"label\": \"老城区\",\n  \"value\": \"410302\" },\n\n{\n  \"label\": \"西工区\",\n  \"value\": \"410303\" },\n\n{\n  \"label\": \"瀍河回族区\",\n  \"value\": \"410304\" },\n\n{\n  \"label\": \"涧西区\",\n  \"value\": \"410305\" },\n\n{\n  \"label\": \"吉利区\",\n  \"value\": \"410306\" },\n\n{\n  \"label\": \"洛龙区\",\n  \"value\": \"410311\" },\n\n{\n  \"label\": \"孟津县\",\n  \"value\": \"410322\" },\n\n{\n  \"label\": \"新安县\",\n  \"value\": \"410323\" },\n\n{\n  \"label\": \"栾川县\",\n  \"value\": \"410324\" },\n\n{\n  \"label\": \"嵩县\",\n  \"value\": \"410325\" },\n\n{\n  \"label\": \"汝阳县\",\n  \"value\": \"410326\" },\n\n{\n  \"label\": \"宜阳县\",\n  \"value\": \"410327\" },\n\n{\n  \"label\": \"洛宁县\",\n  \"value\": \"410328\" },\n\n{\n  \"label\": \"伊川县\",\n  \"value\": \"410329\" },\n\n{\n  \"label\": \"洛阳高新技术产业开发区\",\n  \"value\": \"410371\" },\n\n{\n  \"label\": \"偃师市\",\n  \"value\": \"410381\" }],\n\n\n[{\n  \"label\": \"新华区\",\n  \"value\": \"410402\" },\n\n{\n  \"label\": \"卫东区\",\n  \"value\": \"410403\" },\n\n{\n  \"label\": \"石龙区\",\n  \"value\": \"410404\" },\n\n{\n  \"label\": \"湛河区\",\n  \"value\": \"410411\" },\n\n{\n  \"label\": \"宝丰县\",\n  \"value\": \"410421\" },\n\n{\n  \"label\": \"叶县\",\n  \"value\": \"410422\" },\n\n{\n  \"label\": \"鲁山县\",\n  \"value\": \"410423\" },\n\n{\n  \"label\": \"郏县\",\n  \"value\": \"410425\" },\n\n{\n  \"label\": \"平顶山高新技术产业开发区\",\n  \"value\": \"410471\" },\n\n{\n  \"label\": \"平顶山市新城区\",\n  \"value\": \"410472\" },\n\n{\n  \"label\": \"舞钢市\",\n  \"value\": \"410481\" },\n\n{\n  \"label\": \"汝州市\",\n  \"value\": \"410482\" }],\n\n\n[{\n  \"label\": \"文峰区\",\n  \"value\": \"410502\" },\n\n{\n  \"label\": \"北关区\",\n  \"value\": \"410503\" },\n\n{\n  \"label\": \"殷都区\",\n  \"value\": \"410505\" },\n\n{\n  \"label\": \"龙安区\",\n  \"value\": \"410506\" },\n\n{\n  \"label\": \"安阳县\",\n  \"value\": \"410522\" },\n\n{\n  \"label\": \"汤阴县\",\n  \"value\": \"410523\" },\n\n{\n  \"label\": \"滑县\",\n  \"value\": \"410526\" },\n\n{\n  \"label\": \"内黄县\",\n  \"value\": \"410527\" },\n\n{\n  \"label\": \"安阳高新技术产业开发区\",\n  \"value\": \"410571\" },\n\n{\n  \"label\": \"林州市\",\n  \"value\": \"410581\" }],\n\n\n[{\n  \"label\": \"鹤山区\",\n  \"value\": \"410602\" },\n\n{\n  \"label\": \"山城区\",\n  \"value\": \"410603\" },\n\n{\n  \"label\": \"淇滨区\",\n  \"value\": \"410611\" },\n\n{\n  \"label\": \"浚县\",\n  \"value\": \"410621\" },\n\n{\n  \"label\": \"淇县\",\n  \"value\": \"410622\" },\n\n{\n  \"label\": \"鹤壁经济技术开发区\",\n  \"value\": \"410671\" }],\n\n\n[{\n  \"label\": \"红旗区\",\n  \"value\": \"410702\" },\n\n{\n  \"label\": \"卫滨区\",\n  \"value\": \"410703\" },\n\n{\n  \"label\": \"凤泉区\",\n  \"value\": \"410704\" },\n\n{\n  \"label\": \"牧野区\",\n  \"value\": \"410711\" },\n\n{\n  \"label\": \"新乡县\",\n  \"value\": \"410721\" },\n\n{\n  \"label\": \"获嘉县\",\n  \"value\": \"410724\" },\n\n{\n  \"label\": \"原阳县\",\n  \"value\": \"410725\" },\n\n{\n  \"label\": \"延津县\",\n  \"value\": \"410726\" },\n\n{\n  \"label\": \"封丘县\",\n  \"value\": \"410727\" },\n\n{\n  \"label\": \"长垣县\",\n  \"value\": \"410728\" },\n\n{\n  \"label\": \"新乡高新技术产业开发区\",\n  \"value\": \"410771\" },\n\n{\n  \"label\": \"新乡经济技术开发区\",\n  \"value\": \"410772\" },\n\n{\n  \"label\": \"新乡市平原城乡一体化示范区\",\n  \"value\": \"410773\" },\n\n{\n  \"label\": \"卫辉市\",\n  \"value\": \"410781\" },\n\n{\n  \"label\": \"辉县市\",\n  \"value\": \"410782\" }],\n\n\n[{\n  \"label\": \"解放区\",\n  \"value\": \"410802\" },\n\n{\n  \"label\": \"中站区\",\n  \"value\": \"410803\" },\n\n{\n  \"label\": \"马村区\",\n  \"value\": \"410804\" },\n\n{\n  \"label\": \"山阳区\",\n  \"value\": \"410811\" },\n\n{\n  \"label\": \"修武县\",\n  \"value\": \"410821\" },\n\n{\n  \"label\": \"博爱县\",\n  \"value\": \"410822\" },\n\n{\n  \"label\": \"武陟县\",\n  \"value\": \"410823\" },\n\n{\n  \"label\": \"温县\",\n  \"value\": \"410825\" },\n\n{\n  \"label\": \"焦作城乡一体化示范区\",\n  \"value\": \"410871\" },\n\n{\n  \"label\": \"沁阳市\",\n  \"value\": \"410882\" },\n\n{\n  \"label\": \"孟州市\",\n  \"value\": \"410883\" }],\n\n\n[{\n  \"label\": \"华龙区\",\n  \"value\": \"410902\" },\n\n{\n  \"label\": \"清丰县\",\n  \"value\": \"410922\" },\n\n{\n  \"label\": \"南乐县\",\n  \"value\": \"410923\" },\n\n{\n  \"label\": \"范县\",\n  \"value\": \"410926\" },\n\n{\n  \"label\": \"台前县\",\n  \"value\": \"410927\" },\n\n{\n  \"label\": \"濮阳县\",\n  \"value\": \"410928\" },\n\n{\n  \"label\": \"河南濮阳工业园区\",\n  \"value\": \"410971\" },\n\n{\n  \"label\": \"濮阳经济技术开发区\",\n  \"value\": \"410972\" }],\n\n\n[{\n  \"label\": \"魏都区\",\n  \"value\": \"411002\" },\n\n{\n  \"label\": \"建安区\",\n  \"value\": \"411003\" },\n\n{\n  \"label\": \"鄢陵县\",\n  \"value\": \"411024\" },\n\n{\n  \"label\": \"襄城县\",\n  \"value\": \"411025\" },\n\n{\n  \"label\": \"许昌经济技术开发区\",\n  \"value\": \"411071\" },\n\n{\n  \"label\": \"禹州市\",\n  \"value\": \"411081\" },\n\n{\n  \"label\": \"长葛市\",\n  \"value\": \"411082\" }],\n\n\n[{\n  \"label\": \"源汇区\",\n  \"value\": \"411102\" },\n\n{\n  \"label\": \"郾城区\",\n  \"value\": \"411103\" },\n\n{\n  \"label\": \"召陵区\",\n  \"value\": \"411104\" },\n\n{\n  \"label\": \"舞阳县\",\n  \"value\": \"411121\" },\n\n{\n  \"label\": \"临颍县\",\n  \"value\": \"411122\" },\n\n{\n  \"label\": \"漯河经济技术开发区\",\n  \"value\": \"411171\" }],\n\n\n[{\n  \"label\": \"湖滨区\",\n  \"value\": \"411202\" },\n\n{\n  \"label\": \"陕州区\",\n  \"value\": \"411203\" },\n\n{\n  \"label\": \"渑池县\",\n  \"value\": \"411221\" },\n\n{\n  \"label\": \"卢氏县\",\n  \"value\": \"411224\" },\n\n{\n  \"label\": \"河南三门峡经济开发区\",\n  \"value\": \"411271\" },\n\n{\n  \"label\": \"义马市\",\n  \"value\": \"411281\" },\n\n{\n  \"label\": \"灵宝市\",\n  \"value\": \"411282\" }],\n\n\n[{\n  \"label\": \"宛城区\",\n  \"value\": \"411302\" },\n\n{\n  \"label\": \"卧龙区\",\n  \"value\": \"411303\" },\n\n{\n  \"label\": \"南召县\",\n  \"value\": \"411321\" },\n\n{\n  \"label\": \"方城县\",\n  \"value\": \"411322\" },\n\n{\n  \"label\": \"西峡县\",\n  \"value\": \"411323\" },\n\n{\n  \"label\": \"镇平县\",\n  \"value\": \"411324\" },\n\n{\n  \"label\": \"内乡县\",\n  \"value\": \"411325\" },\n\n{\n  \"label\": \"淅川县\",\n  \"value\": \"411326\" },\n\n{\n  \"label\": \"社旗县\",\n  \"value\": \"411327\" },\n\n{\n  \"label\": \"唐河县\",\n  \"value\": \"411328\" },\n\n{\n  \"label\": \"新野县\",\n  \"value\": \"411329\" },\n\n{\n  \"label\": \"桐柏县\",\n  \"value\": \"411330\" },\n\n{\n  \"label\": \"南阳高新技术产业开发区\",\n  \"value\": \"411371\" },\n\n{\n  \"label\": \"南阳市城乡一体化示范区\",\n  \"value\": \"411372\" },\n\n{\n  \"label\": \"邓州市\",\n  \"value\": \"411381\" }],\n\n\n[{\n  \"label\": \"梁园区\",\n  \"value\": \"411402\" },\n\n{\n  \"label\": \"睢阳区\",\n  \"value\": \"411403\" },\n\n{\n  \"label\": \"民权县\",\n  \"value\": \"411421\" },\n\n{\n  \"label\": \"睢县\",\n  \"value\": \"411422\" },\n\n{\n  \"label\": \"宁陵县\",\n  \"value\": \"411423\" },\n\n{\n  \"label\": \"柘城县\",\n  \"value\": \"411424\" },\n\n{\n  \"label\": \"虞城县\",\n  \"value\": \"411425\" },\n\n{\n  \"label\": \"夏邑县\",\n  \"value\": \"411426\" },\n\n{\n  \"label\": \"豫东综合物流产业聚集区\",\n  \"value\": \"411471\" },\n\n{\n  \"label\": \"河南商丘经济开发区\",\n  \"value\": \"411472\" },\n\n{\n  \"label\": \"永城市\",\n  \"value\": \"411481\" }],\n\n\n[{\n  \"label\": \"浉河区\",\n  \"value\": \"411502\" },\n\n{\n  \"label\": \"平桥区\",\n  \"value\": \"411503\" },\n\n{\n  \"label\": \"罗山县\",\n  \"value\": \"411521\" },\n\n{\n  \"label\": \"光山县\",\n  \"value\": \"411522\" },\n\n{\n  \"label\": \"新县\",\n  \"value\": \"411523\" },\n\n{\n  \"label\": \"商城县\",\n  \"value\": \"411524\" },\n\n{\n  \"label\": \"固始县\",\n  \"value\": \"411525\" },\n\n{\n  \"label\": \"潢川县\",\n  \"value\": \"411526\" },\n\n{\n  \"label\": \"淮滨县\",\n  \"value\": \"411527\" },\n\n{\n  \"label\": \"息县\",\n  \"value\": \"411528\" },\n\n{\n  \"label\": \"信阳高新技术产业开发区\",\n  \"value\": \"411571\" }],\n\n\n[{\n  \"label\": \"川汇区\",\n  \"value\": \"411602\" },\n\n{\n  \"label\": \"扶沟县\",\n  \"value\": \"411621\" },\n\n{\n  \"label\": \"西华县\",\n  \"value\": \"411622\" },\n\n{\n  \"label\": \"商水县\",\n  \"value\": \"411623\" },\n\n{\n  \"label\": \"沈丘县\",\n  \"value\": \"411624\" },\n\n{\n  \"label\": \"郸城县\",\n  \"value\": \"411625\" },\n\n{\n  \"label\": \"淮阳县\",\n  \"value\": \"411626\" },\n\n{\n  \"label\": \"太康县\",\n  \"value\": \"411627\" },\n\n{\n  \"label\": \"鹿邑县\",\n  \"value\": \"411628\" },\n\n{\n  \"label\": \"河南周口经济开发区\",\n  \"value\": \"411671\" },\n\n{\n  \"label\": \"项城市\",\n  \"value\": \"411681\" }],\n\n\n[{\n  \"label\": \"驿城区\",\n  \"value\": \"411702\" },\n\n{\n  \"label\": \"西平县\",\n  \"value\": \"411721\" },\n\n{\n  \"label\": \"上蔡县\",\n  \"value\": \"411722\" },\n\n{\n  \"label\": \"平舆县\",\n  \"value\": \"411723\" },\n\n{\n  \"label\": \"正阳县\",\n  \"value\": \"411724\" },\n\n{\n  \"label\": \"确山县\",\n  \"value\": \"411725\" },\n\n{\n  \"label\": \"泌阳县\",\n  \"value\": \"411726\" },\n\n{\n  \"label\": \"汝南县\",\n  \"value\": \"411727\" },\n\n{\n  \"label\": \"遂平县\",\n  \"value\": \"411728\" },\n\n{\n  \"label\": \"新蔡县\",\n  \"value\": \"411729\" },\n\n{\n  \"label\": \"河南驻马店经济开发区\",\n  \"value\": \"411771\" }],\n\n\n[{\n  \"label\": \"济源市\",\n  \"value\": \"419001\" }]],\n\n\n[\n[{\n  \"label\": \"江岸区\",\n  \"value\": \"420102\" },\n\n{\n  \"label\": \"江汉区\",\n  \"value\": \"420103\" },\n\n{\n  \"label\": \"硚口区\",\n  \"value\": \"420104\" },\n\n{\n  \"label\": \"汉阳区\",\n  \"value\": \"420105\" },\n\n{\n  \"label\": \"武昌区\",\n  \"value\": \"420106\" },\n\n{\n  \"label\": \"青山区\",\n  \"value\": \"420107\" },\n\n{\n  \"label\": \"洪山区\",\n  \"value\": \"420111\" },\n\n{\n  \"label\": \"东西湖区\",\n  \"value\": \"420112\" },\n\n{\n  \"label\": \"汉南区\",\n  \"value\": \"420113\" },\n\n{\n  \"label\": \"蔡甸区\",\n  \"value\": \"420114\" },\n\n{\n  \"label\": \"江夏区\",\n  \"value\": \"420115\" },\n\n{\n  \"label\": \"黄陂区\",\n  \"value\": \"420116\" },\n\n{\n  \"label\": \"新洲区\",\n  \"value\": \"420117\" }],\n\n\n[{\n  \"label\": \"黄石港区\",\n  \"value\": \"420202\" },\n\n{\n  \"label\": \"西塞山区\",\n  \"value\": \"420203\" },\n\n{\n  \"label\": \"下陆区\",\n  \"value\": \"420204\" },\n\n{\n  \"label\": \"铁山区\",\n  \"value\": \"420205\" },\n\n{\n  \"label\": \"阳新县\",\n  \"value\": \"420222\" },\n\n{\n  \"label\": \"大冶市\",\n  \"value\": \"420281\" }],\n\n\n[{\n  \"label\": \"茅箭区\",\n  \"value\": \"420302\" },\n\n{\n  \"label\": \"张湾区\",\n  \"value\": \"420303\" },\n\n{\n  \"label\": \"郧阳区\",\n  \"value\": \"420304\" },\n\n{\n  \"label\": \"郧西县\",\n  \"value\": \"420322\" },\n\n{\n  \"label\": \"竹山县\",\n  \"value\": \"420323\" },\n\n{\n  \"label\": \"竹溪县\",\n  \"value\": \"420324\" },\n\n{\n  \"label\": \"房县\",\n  \"value\": \"420325\" },\n\n{\n  \"label\": \"丹江口市\",\n  \"value\": \"420381\" }],\n\n\n[{\n  \"label\": \"西陵区\",\n  \"value\": \"420502\" },\n\n{\n  \"label\": \"伍家岗区\",\n  \"value\": \"420503\" },\n\n{\n  \"label\": \"点军区\",\n  \"value\": \"420504\" },\n\n{\n  \"label\": \"猇亭区\",\n  \"value\": \"420505\" },\n\n{\n  \"label\": \"夷陵区\",\n  \"value\": \"420506\" },\n\n{\n  \"label\": \"远安县\",\n  \"value\": \"420525\" },\n\n{\n  \"label\": \"兴山县\",\n  \"value\": \"420526\" },\n\n{\n  \"label\": \"秭归县\",\n  \"value\": \"420527\" },\n\n{\n  \"label\": \"长阳土家族自治县\",\n  \"value\": \"420528\" },\n\n{\n  \"label\": \"五峰土家族自治县\",\n  \"value\": \"420529\" },\n\n{\n  \"label\": \"宜都市\",\n  \"value\": \"420581\" },\n\n{\n  \"label\": \"当阳市\",\n  \"value\": \"420582\" },\n\n{\n  \"label\": \"枝江市\",\n  \"value\": \"420583\" }],\n\n\n[{\n  \"label\": \"襄城区\",\n  \"value\": \"420602\" },\n\n{\n  \"label\": \"樊城区\",\n  \"value\": \"420606\" },\n\n{\n  \"label\": \"襄州区\",\n  \"value\": \"420607\" },\n\n{\n  \"label\": \"南漳县\",\n  \"value\": \"420624\" },\n\n{\n  \"label\": \"谷城县\",\n  \"value\": \"420625\" },\n\n{\n  \"label\": \"保康县\",\n  \"value\": \"420626\" },\n\n{\n  \"label\": \"老河口市\",\n  \"value\": \"420682\" },\n\n{\n  \"label\": \"枣阳市\",\n  \"value\": \"420683\" },\n\n{\n  \"label\": \"宜城市\",\n  \"value\": \"420684\" }],\n\n\n[{\n  \"label\": \"梁子湖区\",\n  \"value\": \"420702\" },\n\n{\n  \"label\": \"华容区\",\n  \"value\": \"420703\" },\n\n{\n  \"label\": \"鄂城区\",\n  \"value\": \"420704\" }],\n\n\n[{\n  \"label\": \"东宝区\",\n  \"value\": \"420802\" },\n\n{\n  \"label\": \"掇刀区\",\n  \"value\": \"420804\" },\n\n{\n  \"label\": \"京山县\",\n  \"value\": \"420821\" },\n\n{\n  \"label\": \"沙洋县\",\n  \"value\": \"420822\" },\n\n{\n  \"label\": \"钟祥市\",\n  \"value\": \"420881\" }],\n\n\n[{\n  \"label\": \"孝南区\",\n  \"value\": \"420902\" },\n\n{\n  \"label\": \"孝昌县\",\n  \"value\": \"420921\" },\n\n{\n  \"label\": \"大悟县\",\n  \"value\": \"420922\" },\n\n{\n  \"label\": \"云梦县\",\n  \"value\": \"420923\" },\n\n{\n  \"label\": \"应城市\",\n  \"value\": \"420981\" },\n\n{\n  \"label\": \"安陆市\",\n  \"value\": \"420982\" },\n\n{\n  \"label\": \"汉川市\",\n  \"value\": \"420984\" }],\n\n\n[{\n  \"label\": \"沙市区\",\n  \"value\": \"421002\" },\n\n{\n  \"label\": \"荆州区\",\n  \"value\": \"421003\" },\n\n{\n  \"label\": \"公安县\",\n  \"value\": \"421022\" },\n\n{\n  \"label\": \"监利县\",\n  \"value\": \"421023\" },\n\n{\n  \"label\": \"江陵县\",\n  \"value\": \"421024\" },\n\n{\n  \"label\": \"荆州经济技术开发区\",\n  \"value\": \"421071\" },\n\n{\n  \"label\": \"石首市\",\n  \"value\": \"421081\" },\n\n{\n  \"label\": \"洪湖市\",\n  \"value\": \"421083\" },\n\n{\n  \"label\": \"松滋市\",\n  \"value\": \"421087\" }],\n\n\n[{\n  \"label\": \"黄州区\",\n  \"value\": \"421102\" },\n\n{\n  \"label\": \"团风县\",\n  \"value\": \"421121\" },\n\n{\n  \"label\": \"红安县\",\n  \"value\": \"421122\" },\n\n{\n  \"label\": \"罗田县\",\n  \"value\": \"421123\" },\n\n{\n  \"label\": \"英山县\",\n  \"value\": \"421124\" },\n\n{\n  \"label\": \"浠水县\",\n  \"value\": \"421125\" },\n\n{\n  \"label\": \"蕲春县\",\n  \"value\": \"421126\" },\n\n{\n  \"label\": \"黄梅县\",\n  \"value\": \"421127\" },\n\n{\n  \"label\": \"龙感湖管理区\",\n  \"value\": \"421171\" },\n\n{\n  \"label\": \"麻城市\",\n  \"value\": \"421181\" },\n\n{\n  \"label\": \"武穴市\",\n  \"value\": \"421182\" }],\n\n\n[{\n  \"label\": \"咸安区\",\n  \"value\": \"421202\" },\n\n{\n  \"label\": \"嘉鱼县\",\n  \"value\": \"421221\" },\n\n{\n  \"label\": \"通城县\",\n  \"value\": \"421222\" },\n\n{\n  \"label\": \"崇阳县\",\n  \"value\": \"421223\" },\n\n{\n  \"label\": \"通山县\",\n  \"value\": \"421224\" },\n\n{\n  \"label\": \"赤壁市\",\n  \"value\": \"421281\" }],\n\n\n[{\n  \"label\": \"曾都区\",\n  \"value\": \"421303\" },\n\n{\n  \"label\": \"随县\",\n  \"value\": \"421321\" },\n\n{\n  \"label\": \"广水市\",\n  \"value\": \"421381\" }],\n\n\n[{\n  \"label\": \"恩施市\",\n  \"value\": \"422801\" },\n\n{\n  \"label\": \"利川市\",\n  \"value\": \"422802\" },\n\n{\n  \"label\": \"建始县\",\n  \"value\": \"422822\" },\n\n{\n  \"label\": \"巴东县\",\n  \"value\": \"422823\" },\n\n{\n  \"label\": \"宣恩县\",\n  \"value\": \"422825\" },\n\n{\n  \"label\": \"咸丰县\",\n  \"value\": \"422826\" },\n\n{\n  \"label\": \"来凤县\",\n  \"value\": \"422827\" },\n\n{\n  \"label\": \"鹤峰县\",\n  \"value\": \"422828\" }],\n\n\n[{\n  \"label\": \"仙桃市\",\n  \"value\": \"429004\" },\n\n{\n  \"label\": \"潜江市\",\n  \"value\": \"429005\" },\n\n{\n  \"label\": \"天门市\",\n  \"value\": \"429006\" },\n\n{\n  \"label\": \"神农架林区\",\n  \"value\": \"429021\" }]],\n\n\n\n[\n[{\n  \"label\": \"芙蓉区\",\n  \"value\": \"430102\" },\n\n{\n  \"label\": \"天心区\",\n  \"value\": \"430103\" },\n\n{\n  \"label\": \"岳麓区\",\n  \"value\": \"430104\" },\n\n{\n  \"label\": \"开福区\",\n  \"value\": \"430105\" },\n\n{\n  \"label\": \"雨花区\",\n  \"value\": \"430111\" },\n\n{\n  \"label\": \"望城区\",\n  \"value\": \"430112\" },\n\n{\n  \"label\": \"长沙县\",\n  \"value\": \"430121\" },\n\n{\n  \"label\": \"浏阳市\",\n  \"value\": \"430181\" },\n\n{\n  \"label\": \"宁乡市\",\n  \"value\": \"430182\" }],\n\n\n[{\n  \"label\": \"荷塘区\",\n  \"value\": \"430202\" },\n\n{\n  \"label\": \"芦淞区\",\n  \"value\": \"430203\" },\n\n{\n  \"label\": \"石峰区\",\n  \"value\": \"430204\" },\n\n{\n  \"label\": \"天元区\",\n  \"value\": \"430211\" },\n\n{\n  \"label\": \"株洲县\",\n  \"value\": \"430221\" },\n\n{\n  \"label\": \"攸县\",\n  \"value\": \"430223\" },\n\n{\n  \"label\": \"茶陵县\",\n  \"value\": \"430224\" },\n\n{\n  \"label\": \"炎陵县\",\n  \"value\": \"430225\" },\n\n{\n  \"label\": \"云龙示范区\",\n  \"value\": \"430271\" },\n\n{\n  \"label\": \"醴陵市\",\n  \"value\": \"430281\" }],\n\n\n[{\n  \"label\": \"雨湖区\",\n  \"value\": \"430302\" },\n\n{\n  \"label\": \"岳塘区\",\n  \"value\": \"430304\" },\n\n{\n  \"label\": \"湘潭县\",\n  \"value\": \"430321\" },\n\n{\n  \"label\": \"湖南湘潭高新技术产业园区\",\n  \"value\": \"430371\" },\n\n{\n  \"label\": \"湘潭昭山示范区\",\n  \"value\": \"430372\" },\n\n{\n  \"label\": \"湘潭九华示范区\",\n  \"value\": \"430373\" },\n\n{\n  \"label\": \"湘乡市\",\n  \"value\": \"430381\" },\n\n{\n  \"label\": \"韶山市\",\n  \"value\": \"430382\" }],\n\n\n[{\n  \"label\": \"珠晖区\",\n  \"value\": \"430405\" },\n\n{\n  \"label\": \"雁峰区\",\n  \"value\": \"430406\" },\n\n{\n  \"label\": \"石鼓区\",\n  \"value\": \"430407\" },\n\n{\n  \"label\": \"蒸湘区\",\n  \"value\": \"430408\" },\n\n{\n  \"label\": \"南岳区\",\n  \"value\": \"430412\" },\n\n{\n  \"label\": \"衡阳县\",\n  \"value\": \"430421\" },\n\n{\n  \"label\": \"衡南县\",\n  \"value\": \"430422\" },\n\n{\n  \"label\": \"衡山县\",\n  \"value\": \"430423\" },\n\n{\n  \"label\": \"衡东县\",\n  \"value\": \"430424\" },\n\n{\n  \"label\": \"祁东县\",\n  \"value\": \"430426\" },\n\n{\n  \"label\": \"衡阳综合保税区\",\n  \"value\": \"430471\" },\n\n{\n  \"label\": \"湖南衡阳高新技术产业园区\",\n  \"value\": \"430472\" },\n\n{\n  \"label\": \"湖南衡阳松木经济开发区\",\n  \"value\": \"430473\" },\n\n{\n  \"label\": \"耒阳市\",\n  \"value\": \"430481\" },\n\n{\n  \"label\": \"常宁市\",\n  \"value\": \"430482\" }],\n\n\n[{\n  \"label\": \"双清区\",\n  \"value\": \"430502\" },\n\n{\n  \"label\": \"大祥区\",\n  \"value\": \"430503\" },\n\n{\n  \"label\": \"北塔区\",\n  \"value\": \"430511\" },\n\n{\n  \"label\": \"邵东县\",\n  \"value\": \"430521\" },\n\n{\n  \"label\": \"新邵县\",\n  \"value\": \"430522\" },\n\n{\n  \"label\": \"邵阳县\",\n  \"value\": \"430523\" },\n\n{\n  \"label\": \"隆回县\",\n  \"value\": \"430524\" },\n\n{\n  \"label\": \"洞口县\",\n  \"value\": \"430525\" },\n\n{\n  \"label\": \"绥宁县\",\n  \"value\": \"430527\" },\n\n{\n  \"label\": \"新宁县\",\n  \"value\": \"430528\" },\n\n{\n  \"label\": \"城步苗族自治县\",\n  \"value\": \"430529\" },\n\n{\n  \"label\": \"武冈市\",\n  \"value\": \"430581\" }],\n\n\n[{\n  \"label\": \"岳阳楼区\",\n  \"value\": \"430602\" },\n\n{\n  \"label\": \"云溪区\",\n  \"value\": \"430603\" },\n\n{\n  \"label\": \"君山区\",\n  \"value\": \"430611\" },\n\n{\n  \"label\": \"岳阳县\",\n  \"value\": \"430621\" },\n\n{\n  \"label\": \"华容县\",\n  \"value\": \"430623\" },\n\n{\n  \"label\": \"湘阴县\",\n  \"value\": \"430624\" },\n\n{\n  \"label\": \"平江县\",\n  \"value\": \"430626\" },\n\n{\n  \"label\": \"岳阳市屈原管理区\",\n  \"value\": \"430671\" },\n\n{\n  \"label\": \"汨罗市\",\n  \"value\": \"430681\" },\n\n{\n  \"label\": \"临湘市\",\n  \"value\": \"430682\" }],\n\n\n[{\n  \"label\": \"武陵区\",\n  \"value\": \"430702\" },\n\n{\n  \"label\": \"鼎城区\",\n  \"value\": \"430703\" },\n\n{\n  \"label\": \"安乡县\",\n  \"value\": \"430721\" },\n\n{\n  \"label\": \"汉寿县\",\n  \"value\": \"430722\" },\n\n{\n  \"label\": \"澧县\",\n  \"value\": \"430723\" },\n\n{\n  \"label\": \"临澧县\",\n  \"value\": \"430724\" },\n\n{\n  \"label\": \"桃源县\",\n  \"value\": \"430725\" },\n\n{\n  \"label\": \"石门县\",\n  \"value\": \"430726\" },\n\n{\n  \"label\": \"常德市西洞庭管理区\",\n  \"value\": \"430771\" },\n\n{\n  \"label\": \"津市市\",\n  \"value\": \"430781\" }],\n\n\n[{\n  \"label\": \"永定区\",\n  \"value\": \"430802\" },\n\n{\n  \"label\": \"武陵源区\",\n  \"value\": \"430811\" },\n\n{\n  \"label\": \"慈利县\",\n  \"value\": \"430821\" },\n\n{\n  \"label\": \"桑植县\",\n  \"value\": \"430822\" }],\n\n\n[{\n  \"label\": \"资阳区\",\n  \"value\": \"430902\" },\n\n{\n  \"label\": \"赫山区\",\n  \"value\": \"430903\" },\n\n{\n  \"label\": \"南县\",\n  \"value\": \"430921\" },\n\n{\n  \"label\": \"桃江县\",\n  \"value\": \"430922\" },\n\n{\n  \"label\": \"安化县\",\n  \"value\": \"430923\" },\n\n{\n  \"label\": \"益阳市大通湖管理区\",\n  \"value\": \"430971\" },\n\n{\n  \"label\": \"湖南益阳高新技术产业园区\",\n  \"value\": \"430972\" },\n\n{\n  \"label\": \"沅江市\",\n  \"value\": \"430981\" }],\n\n\n[{\n  \"label\": \"北湖区\",\n  \"value\": \"431002\" },\n\n{\n  \"label\": \"苏仙区\",\n  \"value\": \"431003\" },\n\n{\n  \"label\": \"桂阳县\",\n  \"value\": \"431021\" },\n\n{\n  \"label\": \"宜章县\",\n  \"value\": \"431022\" },\n\n{\n  \"label\": \"永兴县\",\n  \"value\": \"431023\" },\n\n{\n  \"label\": \"嘉禾县\",\n  \"value\": \"431024\" },\n\n{\n  \"label\": \"临武县\",\n  \"value\": \"431025\" },\n\n{\n  \"label\": \"汝城县\",\n  \"value\": \"431026\" },\n\n{\n  \"label\": \"桂东县\",\n  \"value\": \"431027\" },\n\n{\n  \"label\": \"安仁县\",\n  \"value\": \"431028\" },\n\n{\n  \"label\": \"资兴市\",\n  \"value\": \"431081\" }],\n\n\n[{\n  \"label\": \"零陵区\",\n  \"value\": \"431102\" },\n\n{\n  \"label\": \"冷水滩区\",\n  \"value\": \"431103\" },\n\n{\n  \"label\": \"祁阳县\",\n  \"value\": \"431121\" },\n\n{\n  \"label\": \"东安县\",\n  \"value\": \"431122\" },\n\n{\n  \"label\": \"双牌县\",\n  \"value\": \"431123\" },\n\n{\n  \"label\": \"道县\",\n  \"value\": \"431124\" },\n\n{\n  \"label\": \"江永县\",\n  \"value\": \"431125\" },\n\n{\n  \"label\": \"宁远县\",\n  \"value\": \"431126\" },\n\n{\n  \"label\": \"蓝山县\",\n  \"value\": \"431127\" },\n\n{\n  \"label\": \"新田县\",\n  \"value\": \"431128\" },\n\n{\n  \"label\": \"江华瑶族自治县\",\n  \"value\": \"431129\" },\n\n{\n  \"label\": \"永州经济技术开发区\",\n  \"value\": \"431171\" },\n\n{\n  \"label\": \"永州市金洞管理区\",\n  \"value\": \"431172\" },\n\n{\n  \"label\": \"永州市回龙圩管理区\",\n  \"value\": \"431173\" }],\n\n\n[{\n  \"label\": \"鹤城区\",\n  \"value\": \"431202\" },\n\n{\n  \"label\": \"中方县\",\n  \"value\": \"431221\" },\n\n{\n  \"label\": \"沅陵县\",\n  \"value\": \"431222\" },\n\n{\n  \"label\": \"辰溪县\",\n  \"value\": \"431223\" },\n\n{\n  \"label\": \"溆浦县\",\n  \"value\": \"431224\" },\n\n{\n  \"label\": \"会同县\",\n  \"value\": \"431225\" },\n\n{\n  \"label\": \"麻阳苗族自治县\",\n  \"value\": \"431226\" },\n\n{\n  \"label\": \"新晃侗族自治县\",\n  \"value\": \"431227\" },\n\n{\n  \"label\": \"芷江侗族自治县\",\n  \"value\": \"431228\" },\n\n{\n  \"label\": \"靖州苗族侗族自治县\",\n  \"value\": \"431229\" },\n\n{\n  \"label\": \"通道侗族自治县\",\n  \"value\": \"431230\" },\n\n{\n  \"label\": \"怀化市洪江管理区\",\n  \"value\": \"431271\" },\n\n{\n  \"label\": \"洪江市\",\n  \"value\": \"431281\" }],\n\n\n[{\n  \"label\": \"娄星区\",\n  \"value\": \"431302\" },\n\n{\n  \"label\": \"双峰县\",\n  \"value\": \"431321\" },\n\n{\n  \"label\": \"新化县\",\n  \"value\": \"431322\" },\n\n{\n  \"label\": \"冷水江市\",\n  \"value\": \"431381\" },\n\n{\n  \"label\": \"涟源市\",\n  \"value\": \"431382\" }],\n\n\n[{\n  \"label\": \"吉首市\",\n  \"value\": \"433101\" },\n\n{\n  \"label\": \"泸溪县\",\n  \"value\": \"433122\" },\n\n{\n  \"label\": \"凤凰县\",\n  \"value\": \"433123\" },\n\n{\n  \"label\": \"花垣县\",\n  \"value\": \"433124\" },\n\n{\n  \"label\": \"保靖县\",\n  \"value\": \"433125\" },\n\n{\n  \"label\": \"古丈县\",\n  \"value\": \"433126\" },\n\n{\n  \"label\": \"永顺县\",\n  \"value\": \"433127\" },\n\n{\n  \"label\": \"龙山县\",\n  \"value\": \"433130\" },\n\n{\n  \"label\": \"湖南吉首经济开发区\",\n  \"value\": \"433172\" },\n\n{\n  \"label\": \"湖南永顺经济开发区\",\n  \"value\": \"433173\" }]],\n\n\n\n[\n[{\n  \"label\": \"荔湾区\",\n  \"value\": \"440103\" },\n\n{\n  \"label\": \"越秀区\",\n  \"value\": \"440104\" },\n\n{\n  \"label\": \"海珠区\",\n  \"value\": \"440105\" },\n\n{\n  \"label\": \"天河区\",\n  \"value\": \"440106\" },\n\n{\n  \"label\": \"白云区\",\n  \"value\": \"440111\" },\n\n{\n  \"label\": \"黄埔区\",\n  \"value\": \"440112\" },\n\n{\n  \"label\": \"番禺区\",\n  \"value\": \"440113\" },\n\n{\n  \"label\": \"花都区\",\n  \"value\": \"440114\" },\n\n{\n  \"label\": \"南沙区\",\n  \"value\": \"440115\" },\n\n{\n  \"label\": \"从化区\",\n  \"value\": \"440117\" },\n\n{\n  \"label\": \"增城区\",\n  \"value\": \"440118\" }],\n\n\n[{\n  \"label\": \"武江区\",\n  \"value\": \"440203\" },\n\n{\n  \"label\": \"浈江区\",\n  \"value\": \"440204\" },\n\n{\n  \"label\": \"曲江区\",\n  \"value\": \"440205\" },\n\n{\n  \"label\": \"始兴县\",\n  \"value\": \"440222\" },\n\n{\n  \"label\": \"仁化县\",\n  \"value\": \"440224\" },\n\n{\n  \"label\": \"翁源县\",\n  \"value\": \"440229\" },\n\n{\n  \"label\": \"乳源瑶族自治县\",\n  \"value\": \"440232\" },\n\n{\n  \"label\": \"新丰县\",\n  \"value\": \"440233\" },\n\n{\n  \"label\": \"乐昌市\",\n  \"value\": \"440281\" },\n\n{\n  \"label\": \"南雄市\",\n  \"value\": \"440282\" }],\n\n\n[{\n  \"label\": \"罗湖区\",\n  \"value\": \"440303\" },\n\n{\n  \"label\": \"福田区\",\n  \"value\": \"440304\" },\n\n{\n  \"label\": \"南山区\",\n  \"value\": \"440305\" },\n\n{\n  \"label\": \"宝安区\",\n  \"value\": \"440306\" },\n\n{\n  \"label\": \"龙岗区\",\n  \"value\": \"440307\" },\n\n{\n  \"label\": \"盐田区\",\n  \"value\": \"440308\" },\n\n{\n  \"label\": \"龙华区\",\n  \"value\": \"440309\" },\n\n{\n  \"label\": \"坪山区\",\n  \"value\": \"440310\" }],\n\n\n[{\n  \"label\": \"香洲区\",\n  \"value\": \"440402\" },\n\n{\n  \"label\": \"斗门区\",\n  \"value\": \"440403\" },\n\n{\n  \"label\": \"金湾区\",\n  \"value\": \"440404\" }],\n\n\n[{\n  \"label\": \"龙湖区\",\n  \"value\": \"440507\" },\n\n{\n  \"label\": \"金平区\",\n  \"value\": \"440511\" },\n\n{\n  \"label\": \"濠江区\",\n  \"value\": \"440512\" },\n\n{\n  \"label\": \"潮阳区\",\n  \"value\": \"440513\" },\n\n{\n  \"label\": \"潮南区\",\n  \"value\": \"440514\" },\n\n{\n  \"label\": \"澄海区\",\n  \"value\": \"440515\" },\n\n{\n  \"label\": \"南澳县\",\n  \"value\": \"440523\" }],\n\n\n[{\n  \"label\": \"禅城区\",\n  \"value\": \"440604\" },\n\n{\n  \"label\": \"南海区\",\n  \"value\": \"440605\" },\n\n{\n  \"label\": \"顺德区\",\n  \"value\": \"440606\" },\n\n{\n  \"label\": \"三水区\",\n  \"value\": \"440607\" },\n\n{\n  \"label\": \"高明区\",\n  \"value\": \"440608\" }],\n\n\n[{\n  \"label\": \"蓬江区\",\n  \"value\": \"440703\" },\n\n{\n  \"label\": \"江海区\",\n  \"value\": \"440704\" },\n\n{\n  \"label\": \"新会区\",\n  \"value\": \"440705\" },\n\n{\n  \"label\": \"台山市\",\n  \"value\": \"440781\" },\n\n{\n  \"label\": \"开平市\",\n  \"value\": \"440783\" },\n\n{\n  \"label\": \"鹤山市\",\n  \"value\": \"440784\" },\n\n{\n  \"label\": \"恩平市\",\n  \"value\": \"440785\" }],\n\n\n[{\n  \"label\": \"赤坎区\",\n  \"value\": \"440802\" },\n\n{\n  \"label\": \"霞山区\",\n  \"value\": \"440803\" },\n\n{\n  \"label\": \"坡头区\",\n  \"value\": \"440804\" },\n\n{\n  \"label\": \"麻章区\",\n  \"value\": \"440811\" },\n\n{\n  \"label\": \"遂溪县\",\n  \"value\": \"440823\" },\n\n{\n  \"label\": \"徐闻县\",\n  \"value\": \"440825\" },\n\n{\n  \"label\": \"廉江市\",\n  \"value\": \"440881\" },\n\n{\n  \"label\": \"雷州市\",\n  \"value\": \"440882\" },\n\n{\n  \"label\": \"吴川市\",\n  \"value\": \"440883\" }],\n\n\n[{\n  \"label\": \"茂南区\",\n  \"value\": \"440902\" },\n\n{\n  \"label\": \"电白区\",\n  \"value\": \"440904\" },\n\n{\n  \"label\": \"高州市\",\n  \"value\": \"440981\" },\n\n{\n  \"label\": \"化州市\",\n  \"value\": \"440982\" },\n\n{\n  \"label\": \"信宜市\",\n  \"value\": \"440983\" }],\n\n\n[{\n  \"label\": \"端州区\",\n  \"value\": \"441202\" },\n\n{\n  \"label\": \"鼎湖区\",\n  \"value\": \"441203\" },\n\n{\n  \"label\": \"高要区\",\n  \"value\": \"441204\" },\n\n{\n  \"label\": \"广宁县\",\n  \"value\": \"441223\" },\n\n{\n  \"label\": \"怀集县\",\n  \"value\": \"441224\" },\n\n{\n  \"label\": \"封开县\",\n  \"value\": \"441225\" },\n\n{\n  \"label\": \"德庆县\",\n  \"value\": \"441226\" },\n\n{\n  \"label\": \"四会市\",\n  \"value\": \"441284\" }],\n\n\n[{\n  \"label\": \"惠城区\",\n  \"value\": \"441302\" },\n\n{\n  \"label\": \"惠阳区\",\n  \"value\": \"441303\" },\n\n{\n  \"label\": \"博罗县\",\n  \"value\": \"441322\" },\n\n{\n  \"label\": \"惠东县\",\n  \"value\": \"441323\" },\n\n{\n  \"label\": \"龙门县\",\n  \"value\": \"441324\" }],\n\n\n[{\n  \"label\": \"梅江区\",\n  \"value\": \"441402\" },\n\n{\n  \"label\": \"梅县区\",\n  \"value\": \"441403\" },\n\n{\n  \"label\": \"大埔县\",\n  \"value\": \"441422\" },\n\n{\n  \"label\": \"丰顺县\",\n  \"value\": \"441423\" },\n\n{\n  \"label\": \"五华县\",\n  \"value\": \"441424\" },\n\n{\n  \"label\": \"平远县\",\n  \"value\": \"441426\" },\n\n{\n  \"label\": \"蕉岭县\",\n  \"value\": \"441427\" },\n\n{\n  \"label\": \"兴宁市\",\n  \"value\": \"441481\" }],\n\n\n[{\n  \"label\": \"城区\",\n  \"value\": \"441502\" },\n\n{\n  \"label\": \"海丰县\",\n  \"value\": \"441521\" },\n\n{\n  \"label\": \"陆河县\",\n  \"value\": \"441523\" },\n\n{\n  \"label\": \"陆丰市\",\n  \"value\": \"441581\" }],\n\n\n[{\n  \"label\": \"源城区\",\n  \"value\": \"441602\" },\n\n{\n  \"label\": \"紫金县\",\n  \"value\": \"441621\" },\n\n{\n  \"label\": \"龙川县\",\n  \"value\": \"441622\" },\n\n{\n  \"label\": \"连平县\",\n  \"value\": \"441623\" },\n\n{\n  \"label\": \"和平县\",\n  \"value\": \"441624\" },\n\n{\n  \"label\": \"东源县\",\n  \"value\": \"441625\" }],\n\n\n[{\n  \"label\": \"江城区\",\n  \"value\": \"441702\" },\n\n{\n  \"label\": \"阳东区\",\n  \"value\": \"441704\" },\n\n{\n  \"label\": \"阳西县\",\n  \"value\": \"441721\" },\n\n{\n  \"label\": \"阳春市\",\n  \"value\": \"441781\" }],\n\n\n[{\n  \"label\": \"清城区\",\n  \"value\": \"441802\" },\n\n{\n  \"label\": \"清新区\",\n  \"value\": \"441803\" },\n\n{\n  \"label\": \"佛冈县\",\n  \"value\": \"441821\" },\n\n{\n  \"label\": \"阳山县\",\n  \"value\": \"441823\" },\n\n{\n  \"label\": \"连山壮族瑶族自治县\",\n  \"value\": \"441825\" },\n\n{\n  \"label\": \"连南瑶族自治县\",\n  \"value\": \"441826\" },\n\n{\n  \"label\": \"英德市\",\n  \"value\": \"441881\" },\n\n{\n  \"label\": \"连州市\",\n  \"value\": \"441882\" }],\n\n\n[{\n  \"label\": \"东莞市\",\n  \"value\": \"441900\" }],\n\n[{\n  \"label\": \"中山市\",\n  \"value\": \"442000\" }],\n\n[{\n  \"label\": \"湘桥区\",\n  \"value\": \"445102\" },\n\n{\n  \"label\": \"潮安区\",\n  \"value\": \"445103\" },\n\n{\n  \"label\": \"饶平县\",\n  \"value\": \"445122\" }],\n\n\n[{\n  \"label\": \"榕城区\",\n  \"value\": \"445202\" },\n\n{\n  \"label\": \"揭东区\",\n  \"value\": \"445203\" },\n\n{\n  \"label\": \"揭西县\",\n  \"value\": \"445222\" },\n\n{\n  \"label\": \"惠来县\",\n  \"value\": \"445224\" },\n\n{\n  \"label\": \"普宁市\",\n  \"value\": \"445281\" }],\n\n\n[{\n  \"label\": \"云城区\",\n  \"value\": \"445302\" },\n\n{\n  \"label\": \"云安区\",\n  \"value\": \"445303\" },\n\n{\n  \"label\": \"新兴县\",\n  \"value\": \"445321\" },\n\n{\n  \"label\": \"郁南县\",\n  \"value\": \"445322\" },\n\n{\n  \"label\": \"罗定市\",\n  \"value\": \"445381\" }]],\n\n\n\n[\n[{\n  \"label\": \"兴宁区\",\n  \"value\": \"450102\" },\n\n{\n  \"label\": \"青秀区\",\n  \"value\": \"450103\" },\n\n{\n  \"label\": \"江南区\",\n  \"value\": \"450105\" },\n\n{\n  \"label\": \"西乡塘区\",\n  \"value\": \"450107\" },\n\n{\n  \"label\": \"良庆区\",\n  \"value\": \"450108\" },\n\n{\n  \"label\": \"邕宁区\",\n  \"value\": \"450109\" },\n\n{\n  \"label\": \"武鸣区\",\n  \"value\": \"450110\" },\n\n{\n  \"label\": \"隆安县\",\n  \"value\": \"450123\" },\n\n{\n  \"label\": \"马山县\",\n  \"value\": \"450124\" },\n\n{\n  \"label\": \"上林县\",\n  \"value\": \"450125\" },\n\n{\n  \"label\": \"宾阳县\",\n  \"value\": \"450126\" },\n\n{\n  \"label\": \"横县\",\n  \"value\": \"450127\" }],\n\n\n[{\n  \"label\": \"城中区\",\n  \"value\": \"450202\" },\n\n{\n  \"label\": \"鱼峰区\",\n  \"value\": \"450203\" },\n\n{\n  \"label\": \"柳南区\",\n  \"value\": \"450204\" },\n\n{\n  \"label\": \"柳北区\",\n  \"value\": \"450205\" },\n\n{\n  \"label\": \"柳江区\",\n  \"value\": \"450206\" },\n\n{\n  \"label\": \"柳城县\",\n  \"value\": \"450222\" },\n\n{\n  \"label\": \"鹿寨县\",\n  \"value\": \"450223\" },\n\n{\n  \"label\": \"融安县\",\n  \"value\": \"450224\" },\n\n{\n  \"label\": \"融水苗族自治县\",\n  \"value\": \"450225\" },\n\n{\n  \"label\": \"三江侗族自治县\",\n  \"value\": \"450226\" }],\n\n\n[{\n  \"label\": \"秀峰区\",\n  \"value\": \"450302\" },\n\n{\n  \"label\": \"叠彩区\",\n  \"value\": \"450303\" },\n\n{\n  \"label\": \"象山区\",\n  \"value\": \"450304\" },\n\n{\n  \"label\": \"七星区\",\n  \"value\": \"450305\" },\n\n{\n  \"label\": \"雁山区\",\n  \"value\": \"450311\" },\n\n{\n  \"label\": \"临桂区\",\n  \"value\": \"450312\" },\n\n{\n  \"label\": \"阳朔县\",\n  \"value\": \"450321\" },\n\n{\n  \"label\": \"灵川县\",\n  \"value\": \"450323\" },\n\n{\n  \"label\": \"全州县\",\n  \"value\": \"450324\" },\n\n{\n  \"label\": \"兴安县\",\n  \"value\": \"450325\" },\n\n{\n  \"label\": \"永福县\",\n  \"value\": \"450326\" },\n\n{\n  \"label\": \"灌阳县\",\n  \"value\": \"450327\" },\n\n{\n  \"label\": \"龙胜各族自治县\",\n  \"value\": \"450328\" },\n\n{\n  \"label\": \"资源县\",\n  \"value\": \"450329\" },\n\n{\n  \"label\": \"平乐县\",\n  \"value\": \"450330\" },\n\n{\n  \"label\": \"荔浦县\",\n  \"value\": \"450331\" },\n\n{\n  \"label\": \"恭城瑶族自治县\",\n  \"value\": \"450332\" }],\n\n\n[{\n  \"label\": \"万秀区\",\n  \"value\": \"450403\" },\n\n{\n  \"label\": \"长洲区\",\n  \"value\": \"450405\" },\n\n{\n  \"label\": \"龙圩区\",\n  \"value\": \"450406\" },\n\n{\n  \"label\": \"苍梧县\",\n  \"value\": \"450421\" },\n\n{\n  \"label\": \"藤县\",\n  \"value\": \"450422\" },\n\n{\n  \"label\": \"蒙山县\",\n  \"value\": \"450423\" },\n\n{\n  \"label\": \"岑溪市\",\n  \"value\": \"450481\" }],\n\n\n[{\n  \"label\": \"海城区\",\n  \"value\": \"450502\" },\n\n{\n  \"label\": \"银海区\",\n  \"value\": \"450503\" },\n\n{\n  \"label\": \"铁山港区\",\n  \"value\": \"450512\" },\n\n{\n  \"label\": \"合浦县\",\n  \"value\": \"450521\" }],\n\n\n[{\n  \"label\": \"港口区\",\n  \"value\": \"450602\" },\n\n{\n  \"label\": \"防城区\",\n  \"value\": \"450603\" },\n\n{\n  \"label\": \"上思县\",\n  \"value\": \"450621\" },\n\n{\n  \"label\": \"东兴市\",\n  \"value\": \"450681\" }],\n\n\n[{\n  \"label\": \"钦南区\",\n  \"value\": \"450702\" },\n\n{\n  \"label\": \"钦北区\",\n  \"value\": \"450703\" },\n\n{\n  \"label\": \"灵山县\",\n  \"value\": \"450721\" },\n\n{\n  \"label\": \"浦北县\",\n  \"value\": \"450722\" }],\n\n\n[{\n  \"label\": \"港北区\",\n  \"value\": \"450802\" },\n\n{\n  \"label\": \"港南区\",\n  \"value\": \"450803\" },\n\n{\n  \"label\": \"覃塘区\",\n  \"value\": \"450804\" },\n\n{\n  \"label\": \"平南县\",\n  \"value\": \"450821\" },\n\n{\n  \"label\": \"桂平市\",\n  \"value\": \"450881\" }],\n\n\n[{\n  \"label\": \"玉州区\",\n  \"value\": \"450902\" },\n\n{\n  \"label\": \"福绵区\",\n  \"value\": \"450903\" },\n\n{\n  \"label\": \"容县\",\n  \"value\": \"450921\" },\n\n{\n  \"label\": \"陆川县\",\n  \"value\": \"450922\" },\n\n{\n  \"label\": \"博白县\",\n  \"value\": \"450923\" },\n\n{\n  \"label\": \"兴业县\",\n  \"value\": \"450924\" },\n\n{\n  \"label\": \"北流市\",\n  \"value\": \"450981\" }],\n\n\n[{\n  \"label\": \"右江区\",\n  \"value\": \"451002\" },\n\n{\n  \"label\": \"田阳县\",\n  \"value\": \"451021\" },\n\n{\n  \"label\": \"田东县\",\n  \"value\": \"451022\" },\n\n{\n  \"label\": \"平果县\",\n  \"value\": \"451023\" },\n\n{\n  \"label\": \"德保县\",\n  \"value\": \"451024\" },\n\n{\n  \"label\": \"那坡县\",\n  \"value\": \"451026\" },\n\n{\n  \"label\": \"凌云县\",\n  \"value\": \"451027\" },\n\n{\n  \"label\": \"乐业县\",\n  \"value\": \"451028\" },\n\n{\n  \"label\": \"田林县\",\n  \"value\": \"451029\" },\n\n{\n  \"label\": \"西林县\",\n  \"value\": \"451030\" },\n\n{\n  \"label\": \"隆林各族自治县\",\n  \"value\": \"451031\" },\n\n{\n  \"label\": \"靖西市\",\n  \"value\": \"451081\" }],\n\n\n[{\n  \"label\": \"八步区\",\n  \"value\": \"451102\" },\n\n{\n  \"label\": \"平桂区\",\n  \"value\": \"451103\" },\n\n{\n  \"label\": \"昭平县\",\n  \"value\": \"451121\" },\n\n{\n  \"label\": \"钟山县\",\n  \"value\": \"451122\" },\n\n{\n  \"label\": \"富川瑶族自治县\",\n  \"value\": \"451123\" }],\n\n\n[{\n  \"label\": \"金城江区\",\n  \"value\": \"451202\" },\n\n{\n  \"label\": \"宜州区\",\n  \"value\": \"451203\" },\n\n{\n  \"label\": \"南丹县\",\n  \"value\": \"451221\" },\n\n{\n  \"label\": \"天峨县\",\n  \"value\": \"451222\" },\n\n{\n  \"label\": \"凤山县\",\n  \"value\": \"451223\" },\n\n{\n  \"label\": \"东兰县\",\n  \"value\": \"451224\" },\n\n{\n  \"label\": \"罗城仫佬族自治县\",\n  \"value\": \"451225\" },\n\n{\n  \"label\": \"环江毛南族自治县\",\n  \"value\": \"451226\" },\n\n{\n  \"label\": \"巴马瑶族自治县\",\n  \"value\": \"451227\" },\n\n{\n  \"label\": \"都安瑶族自治县\",\n  \"value\": \"451228\" },\n\n{\n  \"label\": \"大化瑶族自治县\",\n  \"value\": \"451229\" }],\n\n\n[{\n  \"label\": \"兴宾区\",\n  \"value\": \"451302\" },\n\n{\n  \"label\": \"忻城县\",\n  \"value\": \"451321\" },\n\n{\n  \"label\": \"象州县\",\n  \"value\": \"451322\" },\n\n{\n  \"label\": \"武宣县\",\n  \"value\": \"451323\" },\n\n{\n  \"label\": \"金秀瑶族自治县\",\n  \"value\": \"451324\" },\n\n{\n  \"label\": \"合山市\",\n  \"value\": \"451381\" }],\n\n\n[{\n  \"label\": \"江州区\",\n  \"value\": \"451402\" },\n\n{\n  \"label\": \"扶绥县\",\n  \"value\": \"451421\" },\n\n{\n  \"label\": \"宁明县\",\n  \"value\": \"451422\" },\n\n{\n  \"label\": \"龙州县\",\n  \"value\": \"451423\" },\n\n{\n  \"label\": \"大新县\",\n  \"value\": \"451424\" },\n\n{\n  \"label\": \"天等县\",\n  \"value\": \"451425\" },\n\n{\n  \"label\": \"凭祥市\",\n  \"value\": \"451481\" }]],\n\n\n\n[\n[{\n  \"label\": \"秀英区\",\n  \"value\": \"460105\" },\n\n{\n  \"label\": \"龙华区\",\n  \"value\": \"460106\" },\n\n{\n  \"label\": \"琼山区\",\n  \"value\": \"460107\" },\n\n{\n  \"label\": \"美兰区\",\n  \"value\": \"460108\" }],\n\n\n[{\n  \"label\": \"海棠区\",\n  \"value\": \"460202\" },\n\n{\n  \"label\": \"吉阳区\",\n  \"value\": \"460203\" },\n\n{\n  \"label\": \"天涯区\",\n  \"value\": \"460204\" },\n\n{\n  \"label\": \"崖州区\",\n  \"value\": \"460205\" }],\n\n\n[{\n  \"label\": \"西沙群岛\",\n  \"value\": \"460321\" },\n\n{\n  \"label\": \"南沙群岛\",\n  \"value\": \"460322\" },\n\n{\n  \"label\": \"中沙群岛的岛礁及其海域\",\n  \"value\": \"460323\" }],\n\n\n[{\n  \"label\": \"儋州市\",\n  \"value\": \"460400\" }],\n\n[{\n  \"label\": \"五指山市\",\n  \"value\": \"469001\" },\n\n{\n  \"label\": \"琼海市\",\n  \"value\": \"469002\" },\n\n{\n  \"label\": \"文昌市\",\n  \"value\": \"469005\" },\n\n{\n  \"label\": \"万宁市\",\n  \"value\": \"469006\" },\n\n{\n  \"label\": \"东方市\",\n  \"value\": \"469007\" },\n\n{\n  \"label\": \"定安县\",\n  \"value\": \"469021\" },\n\n{\n  \"label\": \"屯昌县\",\n  \"value\": \"469022\" },\n\n{\n  \"label\": \"澄迈县\",\n  \"value\": \"469023\" },\n\n{\n  \"label\": \"临高县\",\n  \"value\": \"469024\" },\n\n{\n  \"label\": \"白沙黎族自治县\",\n  \"value\": \"469025\" },\n\n{\n  \"label\": \"昌江黎族自治县\",\n  \"value\": \"469026\" },\n\n{\n  \"label\": \"乐东黎族自治县\",\n  \"value\": \"469027\" },\n\n{\n  \"label\": \"陵水黎族自治县\",\n  \"value\": \"469028\" },\n\n{\n  \"label\": \"保亭黎族苗族自治县\",\n  \"value\": \"469029\" },\n\n{\n  \"label\": \"琼中黎族苗族自治县\",\n  \"value\": \"469030\" }]],\n\n\n\n[\n[{\n  \"label\": \"万州区\",\n  \"value\": \"500101\" },\n\n{\n  \"label\": \"涪陵区\",\n  \"value\": \"500102\" },\n\n{\n  \"label\": \"渝中区\",\n  \"value\": \"500103\" },\n\n{\n  \"label\": \"大渡口区\",\n  \"value\": \"500104\" },\n\n{\n  \"label\": \"江北区\",\n  \"value\": \"500105\" },\n\n{\n  \"label\": \"沙坪坝区\",\n  \"value\": \"500106\" },\n\n{\n  \"label\": \"九龙坡区\",\n  \"value\": \"500107\" },\n\n{\n  \"label\": \"南岸区\",\n  \"value\": \"500108\" },\n\n{\n  \"label\": \"北碚区\",\n  \"value\": \"500109\" },\n\n{\n  \"label\": \"綦江区\",\n  \"value\": \"500110\" },\n\n{\n  \"label\": \"大足区\",\n  \"value\": \"500111\" },\n\n{\n  \"label\": \"渝北区\",\n  \"value\": \"500112\" },\n\n{\n  \"label\": \"巴南区\",\n  \"value\": \"500113\" },\n\n{\n  \"label\": \"黔江区\",\n  \"value\": \"500114\" },\n\n{\n  \"label\": \"长寿区\",\n  \"value\": \"500115\" },\n\n{\n  \"label\": \"江津区\",\n  \"value\": \"500116\" },\n\n{\n  \"label\": \"合川区\",\n  \"value\": \"500117\" },\n\n{\n  \"label\": \"永川区\",\n  \"value\": \"500118\" },\n\n{\n  \"label\": \"南川区\",\n  \"value\": \"500119\" },\n\n{\n  \"label\": \"璧山区\",\n  \"value\": \"500120\" },\n\n{\n  \"label\": \"铜梁区\",\n  \"value\": \"500151\" },\n\n{\n  \"label\": \"潼南区\",\n  \"value\": \"500152\" },\n\n{\n  \"label\": \"荣昌区\",\n  \"value\": \"500153\" },\n\n{\n  \"label\": \"开州区\",\n  \"value\": \"500154\" },\n\n{\n  \"label\": \"梁平区\",\n  \"value\": \"500155\" },\n\n{\n  \"label\": \"武隆区\",\n  \"value\": \"500156\" }],\n\n\n[{\n  \"label\": \"城口县\",\n  \"value\": \"500229\" },\n\n{\n  \"label\": \"丰都县\",\n  \"value\": \"500230\" },\n\n{\n  \"label\": \"垫江县\",\n  \"value\": \"500231\" },\n\n{\n  \"label\": \"忠县\",\n  \"value\": \"500233\" },\n\n{\n  \"label\": \"云阳县\",\n  \"value\": \"500235\" },\n\n{\n  \"label\": \"奉节县\",\n  \"value\": \"500236\" },\n\n{\n  \"label\": \"巫山县\",\n  \"value\": \"500237\" },\n\n{\n  \"label\": \"巫溪县\",\n  \"value\": \"500238\" },\n\n{\n  \"label\": \"石柱土家族自治县\",\n  \"value\": \"500240\" },\n\n{\n  \"label\": \"秀山土家族苗族自治县\",\n  \"value\": \"500241\" },\n\n{\n  \"label\": \"酉阳土家族苗族自治县\",\n  \"value\": \"500242\" },\n\n{\n  \"label\": \"彭水苗族土家族自治县\",\n  \"value\": \"500243\" }]],\n\n\n\n[\n[{\n  \"label\": \"锦江区\",\n  \"value\": \"510104\" },\n\n{\n  \"label\": \"青羊区\",\n  \"value\": \"510105\" },\n\n{\n  \"label\": \"金牛区\",\n  \"value\": \"510106\" },\n\n{\n  \"label\": \"武侯区\",\n  \"value\": \"510107\" },\n\n{\n  \"label\": \"成华区\",\n  \"value\": \"510108\" },\n\n{\n  \"label\": \"龙泉驿区\",\n  \"value\": \"510112\" },\n\n{\n  \"label\": \"青白江区\",\n  \"value\": \"510113\" },\n\n{\n  \"label\": \"新都区\",\n  \"value\": \"510114\" },\n\n{\n  \"label\": \"温江区\",\n  \"value\": \"510115\" },\n\n{\n  \"label\": \"双流区\",\n  \"value\": \"510116\" },\n\n{\n  \"label\": \"郫都区\",\n  \"value\": \"510117\" },\n\n{\n  \"label\": \"金堂县\",\n  \"value\": \"510121\" },\n\n{\n  \"label\": \"大邑县\",\n  \"value\": \"510129\" },\n\n{\n  \"label\": \"蒲江县\",\n  \"value\": \"510131\" },\n\n{\n  \"label\": \"新津县\",\n  \"value\": \"510132\" },\n\n{\n  \"label\": \"都江堰市\",\n  \"value\": \"510181\" },\n\n{\n  \"label\": \"彭州市\",\n  \"value\": \"510182\" },\n\n{\n  \"label\": \"邛崃市\",\n  \"value\": \"510183\" },\n\n{\n  \"label\": \"崇州市\",\n  \"value\": \"510184\" },\n\n{\n  \"label\": \"简阳市\",\n  \"value\": \"510185\" }],\n\n\n[{\n  \"label\": \"自流井区\",\n  \"value\": \"510302\" },\n\n{\n  \"label\": \"贡井区\",\n  \"value\": \"510303\" },\n\n{\n  \"label\": \"大安区\",\n  \"value\": \"510304\" },\n\n{\n  \"label\": \"沿滩区\",\n  \"value\": \"510311\" },\n\n{\n  \"label\": \"荣县\",\n  \"value\": \"510321\" },\n\n{\n  \"label\": \"富顺县\",\n  \"value\": \"510322\" }],\n\n\n[{\n  \"label\": \"东区\",\n  \"value\": \"510402\" },\n\n{\n  \"label\": \"西区\",\n  \"value\": \"510403\" },\n\n{\n  \"label\": \"仁和区\",\n  \"value\": \"510411\" },\n\n{\n  \"label\": \"米易县\",\n  \"value\": \"510421\" },\n\n{\n  \"label\": \"盐边县\",\n  \"value\": \"510422\" }],\n\n\n[{\n  \"label\": \"江阳区\",\n  \"value\": \"510502\" },\n\n{\n  \"label\": \"纳溪区\",\n  \"value\": \"510503\" },\n\n{\n  \"label\": \"龙马潭区\",\n  \"value\": \"510504\" },\n\n{\n  \"label\": \"泸县\",\n  \"value\": \"510521\" },\n\n{\n  \"label\": \"合江县\",\n  \"value\": \"510522\" },\n\n{\n  \"label\": \"叙永县\",\n  \"value\": \"510524\" },\n\n{\n  \"label\": \"古蔺县\",\n  \"value\": \"510525\" }],\n\n\n[{\n  \"label\": \"旌阳区\",\n  \"value\": \"510603\" },\n\n{\n  \"label\": \"罗江区\",\n  \"value\": \"510604\" },\n\n{\n  \"label\": \"中江县\",\n  \"value\": \"510623\" },\n\n{\n  \"label\": \"广汉市\",\n  \"value\": \"510681\" },\n\n{\n  \"label\": \"什邡市\",\n  \"value\": \"510682\" },\n\n{\n  \"label\": \"绵竹市\",\n  \"value\": \"510683\" }],\n\n\n[{\n  \"label\": \"涪城区\",\n  \"value\": \"510703\" },\n\n{\n  \"label\": \"游仙区\",\n  \"value\": \"510704\" },\n\n{\n  \"label\": \"安州区\",\n  \"value\": \"510705\" },\n\n{\n  \"label\": \"三台县\",\n  \"value\": \"510722\" },\n\n{\n  \"label\": \"盐亭县\",\n  \"value\": \"510723\" },\n\n{\n  \"label\": \"梓潼县\",\n  \"value\": \"510725\" },\n\n{\n  \"label\": \"北川羌族自治县\",\n  \"value\": \"510726\" },\n\n{\n  \"label\": \"平武县\",\n  \"value\": \"510727\" },\n\n{\n  \"label\": \"江油市\",\n  \"value\": \"510781\" }],\n\n\n[{\n  \"label\": \"利州区\",\n  \"value\": \"510802\" },\n\n{\n  \"label\": \"昭化区\",\n  \"value\": \"510811\" },\n\n{\n  \"label\": \"朝天区\",\n  \"value\": \"510812\" },\n\n{\n  \"label\": \"旺苍县\",\n  \"value\": \"510821\" },\n\n{\n  \"label\": \"青川县\",\n  \"value\": \"510822\" },\n\n{\n  \"label\": \"剑阁县\",\n  \"value\": \"510823\" },\n\n{\n  \"label\": \"苍溪县\",\n  \"value\": \"510824\" }],\n\n\n[{\n  \"label\": \"船山区\",\n  \"value\": \"510903\" },\n\n{\n  \"label\": \"安居区\",\n  \"value\": \"510904\" },\n\n{\n  \"label\": \"蓬溪县\",\n  \"value\": \"510921\" },\n\n{\n  \"label\": \"射洪县\",\n  \"value\": \"510922\" },\n\n{\n  \"label\": \"大英县\",\n  \"value\": \"510923\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"511002\" },\n\n{\n  \"label\": \"东兴区\",\n  \"value\": \"511011\" },\n\n{\n  \"label\": \"威远县\",\n  \"value\": \"511024\" },\n\n{\n  \"label\": \"资中县\",\n  \"value\": \"511025\" },\n\n{\n  \"label\": \"内江经济开发区\",\n  \"value\": \"511071\" },\n\n{\n  \"label\": \"隆昌市\",\n  \"value\": \"511083\" }],\n\n\n[{\n  \"label\": \"市中区\",\n  \"value\": \"511102\" },\n\n{\n  \"label\": \"沙湾区\",\n  \"value\": \"511111\" },\n\n{\n  \"label\": \"五通桥区\",\n  \"value\": \"511112\" },\n\n{\n  \"label\": \"金口河区\",\n  \"value\": \"511113\" },\n\n{\n  \"label\": \"犍为县\",\n  \"value\": \"511123\" },\n\n{\n  \"label\": \"井研县\",\n  \"value\": \"511124\" },\n\n{\n  \"label\": \"夹江县\",\n  \"value\": \"511126\" },\n\n{\n  \"label\": \"沐川县\",\n  \"value\": \"511129\" },\n\n{\n  \"label\": \"峨边彝族自治县\",\n  \"value\": \"511132\" },\n\n{\n  \"label\": \"马边彝族自治县\",\n  \"value\": \"511133\" },\n\n{\n  \"label\": \"峨眉山市\",\n  \"value\": \"511181\" }],\n\n\n[{\n  \"label\": \"顺庆区\",\n  \"value\": \"511302\" },\n\n{\n  \"label\": \"高坪区\",\n  \"value\": \"511303\" },\n\n{\n  \"label\": \"嘉陵区\",\n  \"value\": \"511304\" },\n\n{\n  \"label\": \"南部县\",\n  \"value\": \"511321\" },\n\n{\n  \"label\": \"营山县\",\n  \"value\": \"511322\" },\n\n{\n  \"label\": \"蓬安县\",\n  \"value\": \"511323\" },\n\n{\n  \"label\": \"仪陇县\",\n  \"value\": \"511324\" },\n\n{\n  \"label\": \"西充县\",\n  \"value\": \"511325\" },\n\n{\n  \"label\": \"阆中市\",\n  \"value\": \"511381\" }],\n\n\n[{\n  \"label\": \"东坡区\",\n  \"value\": \"511402\" },\n\n{\n  \"label\": \"彭山区\",\n  \"value\": \"511403\" },\n\n{\n  \"label\": \"仁寿县\",\n  \"value\": \"511421\" },\n\n{\n  \"label\": \"洪雅县\",\n  \"value\": \"511423\" },\n\n{\n  \"label\": \"丹棱县\",\n  \"value\": \"511424\" },\n\n{\n  \"label\": \"青神县\",\n  \"value\": \"511425\" }],\n\n\n[{\n  \"label\": \"翠屏区\",\n  \"value\": \"511502\" },\n\n{\n  \"label\": \"南溪区\",\n  \"value\": \"511503\" },\n\n{\n  \"label\": \"宜宾县\",\n  \"value\": \"511521\" },\n\n{\n  \"label\": \"江安县\",\n  \"value\": \"511523\" },\n\n{\n  \"label\": \"长宁县\",\n  \"value\": \"511524\" },\n\n{\n  \"label\": \"高县\",\n  \"value\": \"511525\" },\n\n{\n  \"label\": \"珙县\",\n  \"value\": \"511526\" },\n\n{\n  \"label\": \"筠连县\",\n  \"value\": \"511527\" },\n\n{\n  \"label\": \"兴文县\",\n  \"value\": \"511528\" },\n\n{\n  \"label\": \"屏山县\",\n  \"value\": \"511529\" }],\n\n\n[{\n  \"label\": \"广安区\",\n  \"value\": \"511602\" },\n\n{\n  \"label\": \"前锋区\",\n  \"value\": \"511603\" },\n\n{\n  \"label\": \"岳池县\",\n  \"value\": \"511621\" },\n\n{\n  \"label\": \"武胜县\",\n  \"value\": \"511622\" },\n\n{\n  \"label\": \"邻水县\",\n  \"value\": \"511623\" },\n\n{\n  \"label\": \"华蓥市\",\n  \"value\": \"511681\" }],\n\n\n[{\n  \"label\": \"通川区\",\n  \"value\": \"511702\" },\n\n{\n  \"label\": \"达川区\",\n  \"value\": \"511703\" },\n\n{\n  \"label\": \"宣汉县\",\n  \"value\": \"511722\" },\n\n{\n  \"label\": \"开江县\",\n  \"value\": \"511723\" },\n\n{\n  \"label\": \"大竹县\",\n  \"value\": \"511724\" },\n\n{\n  \"label\": \"渠县\",\n  \"value\": \"511725\" },\n\n{\n  \"label\": \"达州经济开发区\",\n  \"value\": \"511771\" },\n\n{\n  \"label\": \"万源市\",\n  \"value\": \"511781\" }],\n\n\n[{\n  \"label\": \"雨城区\",\n  \"value\": \"511802\" },\n\n{\n  \"label\": \"名山区\",\n  \"value\": \"511803\" },\n\n{\n  \"label\": \"荥经县\",\n  \"value\": \"511822\" },\n\n{\n  \"label\": \"汉源县\",\n  \"value\": \"511823\" },\n\n{\n  \"label\": \"石棉县\",\n  \"value\": \"511824\" },\n\n{\n  \"label\": \"天全县\",\n  \"value\": \"511825\" },\n\n{\n  \"label\": \"芦山县\",\n  \"value\": \"511826\" },\n\n{\n  \"label\": \"宝兴县\",\n  \"value\": \"511827\" }],\n\n\n[{\n  \"label\": \"巴州区\",\n  \"value\": \"511902\" },\n\n{\n  \"label\": \"恩阳区\",\n  \"value\": \"511903\" },\n\n{\n  \"label\": \"通江县\",\n  \"value\": \"511921\" },\n\n{\n  \"label\": \"南江县\",\n  \"value\": \"511922\" },\n\n{\n  \"label\": \"平昌县\",\n  \"value\": \"511923\" },\n\n{\n  \"label\": \"巴中经济开发区\",\n  \"value\": \"511971\" }],\n\n\n[{\n  \"label\": \"雁江区\",\n  \"value\": \"512002\" },\n\n{\n  \"label\": \"安岳县\",\n  \"value\": \"512021\" },\n\n{\n  \"label\": \"乐至县\",\n  \"value\": \"512022\" }],\n\n\n[{\n  \"label\": \"马尔康市\",\n  \"value\": \"513201\" },\n\n{\n  \"label\": \"汶川县\",\n  \"value\": \"513221\" },\n\n{\n  \"label\": \"理县\",\n  \"value\": \"513222\" },\n\n{\n  \"label\": \"茂县\",\n  \"value\": \"513223\" },\n\n{\n  \"label\": \"松潘县\",\n  \"value\": \"513224\" },\n\n{\n  \"label\": \"九寨沟县\",\n  \"value\": \"513225\" },\n\n{\n  \"label\": \"金川县\",\n  \"value\": \"513226\" },\n\n{\n  \"label\": \"小金县\",\n  \"value\": \"513227\" },\n\n{\n  \"label\": \"黑水县\",\n  \"value\": \"513228\" },\n\n{\n  \"label\": \"壤塘县\",\n  \"value\": \"513230\" },\n\n{\n  \"label\": \"阿坝县\",\n  \"value\": \"513231\" },\n\n{\n  \"label\": \"若尔盖县\",\n  \"value\": \"513232\" },\n\n{\n  \"label\": \"红原县\",\n  \"value\": \"513233\" }],\n\n\n[{\n  \"label\": \"康定市\",\n  \"value\": \"513301\" },\n\n{\n  \"label\": \"泸定县\",\n  \"value\": \"513322\" },\n\n{\n  \"label\": \"丹巴县\",\n  \"value\": \"513323\" },\n\n{\n  \"label\": \"九龙县\",\n  \"value\": \"513324\" },\n\n{\n  \"label\": \"雅江县\",\n  \"value\": \"513325\" },\n\n{\n  \"label\": \"道孚县\",\n  \"value\": \"513326\" },\n\n{\n  \"label\": \"炉霍县\",\n  \"value\": \"513327\" },\n\n{\n  \"label\": \"甘孜县\",\n  \"value\": \"513328\" },\n\n{\n  \"label\": \"新龙县\",\n  \"value\": \"513329\" },\n\n{\n  \"label\": \"德格县\",\n  \"value\": \"513330\" },\n\n{\n  \"label\": \"白玉县\",\n  \"value\": \"513331\" },\n\n{\n  \"label\": \"石渠县\",\n  \"value\": \"513332\" },\n\n{\n  \"label\": \"色达县\",\n  \"value\": \"513333\" },\n\n{\n  \"label\": \"理塘县\",\n  \"value\": \"513334\" },\n\n{\n  \"label\": \"巴塘县\",\n  \"value\": \"513335\" },\n\n{\n  \"label\": \"乡城县\",\n  \"value\": \"513336\" },\n\n{\n  \"label\": \"稻城县\",\n  \"value\": \"513337\" },\n\n{\n  \"label\": \"得荣县\",\n  \"value\": \"513338\" }],\n\n\n[{\n  \"label\": \"西昌市\",\n  \"value\": \"513401\" },\n\n{\n  \"label\": \"木里藏族自治县\",\n  \"value\": \"513422\" },\n\n{\n  \"label\": \"盐源县\",\n  \"value\": \"513423\" },\n\n{\n  \"label\": \"德昌县\",\n  \"value\": \"513424\" },\n\n{\n  \"label\": \"会理县\",\n  \"value\": \"513425\" },\n\n{\n  \"label\": \"会东县\",\n  \"value\": \"513426\" },\n\n{\n  \"label\": \"宁南县\",\n  \"value\": \"513427\" },\n\n{\n  \"label\": \"普格县\",\n  \"value\": \"513428\" },\n\n{\n  \"label\": \"布拖县\",\n  \"value\": \"513429\" },\n\n{\n  \"label\": \"金阳县\",\n  \"value\": \"513430\" },\n\n{\n  \"label\": \"昭觉县\",\n  \"value\": \"513431\" },\n\n{\n  \"label\": \"喜德县\",\n  \"value\": \"513432\" },\n\n{\n  \"label\": \"冕宁县\",\n  \"value\": \"513433\" },\n\n{\n  \"label\": \"越西县\",\n  \"value\": \"513434\" },\n\n{\n  \"label\": \"甘洛县\",\n  \"value\": \"513435\" },\n\n{\n  \"label\": \"美姑县\",\n  \"value\": \"513436\" },\n\n{\n  \"label\": \"雷波县\",\n  \"value\": \"513437\" }]],\n\n\n\n[\n[{\n  \"label\": \"南明区\",\n  \"value\": \"520102\" },\n\n{\n  \"label\": \"云岩区\",\n  \"value\": \"520103\" },\n\n{\n  \"label\": \"花溪区\",\n  \"value\": \"520111\" },\n\n{\n  \"label\": \"乌当区\",\n  \"value\": \"520112\" },\n\n{\n  \"label\": \"白云区\",\n  \"value\": \"520113\" },\n\n{\n  \"label\": \"观山湖区\",\n  \"value\": \"520115\" },\n\n{\n  \"label\": \"开阳县\",\n  \"value\": \"520121\" },\n\n{\n  \"label\": \"息烽县\",\n  \"value\": \"520122\" },\n\n{\n  \"label\": \"修文县\",\n  \"value\": \"520123\" },\n\n{\n  \"label\": \"清镇市\",\n  \"value\": \"520181\" }],\n\n\n[{\n  \"label\": \"钟山区\",\n  \"value\": \"520201\" },\n\n{\n  \"label\": \"六枝特区\",\n  \"value\": \"520203\" },\n\n{\n  \"label\": \"水城县\",\n  \"value\": \"520221\" },\n\n{\n  \"label\": \"盘州市\",\n  \"value\": \"520281\" }],\n\n\n[{\n  \"label\": \"红花岗区\",\n  \"value\": \"520302\" },\n\n{\n  \"label\": \"汇川区\",\n  \"value\": \"520303\" },\n\n{\n  \"label\": \"播州区\",\n  \"value\": \"520304\" },\n\n{\n  \"label\": \"桐梓县\",\n  \"value\": \"520322\" },\n\n{\n  \"label\": \"绥阳县\",\n  \"value\": \"520323\" },\n\n{\n  \"label\": \"正安县\",\n  \"value\": \"520324\" },\n\n{\n  \"label\": \"道真仡佬族苗族自治县\",\n  \"value\": \"520325\" },\n\n{\n  \"label\": \"务川仡佬族苗族自治县\",\n  \"value\": \"520326\" },\n\n{\n  \"label\": \"凤冈县\",\n  \"value\": \"520327\" },\n\n{\n  \"label\": \"湄潭县\",\n  \"value\": \"520328\" },\n\n{\n  \"label\": \"余庆县\",\n  \"value\": \"520329\" },\n\n{\n  \"label\": \"习水县\",\n  \"value\": \"520330\" },\n\n{\n  \"label\": \"赤水市\",\n  \"value\": \"520381\" },\n\n{\n  \"label\": \"仁怀市\",\n  \"value\": \"520382\" }],\n\n\n[{\n  \"label\": \"西秀区\",\n  \"value\": \"520402\" },\n\n{\n  \"label\": \"平坝区\",\n  \"value\": \"520403\" },\n\n{\n  \"label\": \"普定县\",\n  \"value\": \"520422\" },\n\n{\n  \"label\": \"镇宁布依族苗族自治县\",\n  \"value\": \"520423\" },\n\n{\n  \"label\": \"关岭布依族苗族自治县\",\n  \"value\": \"520424\" },\n\n{\n  \"label\": \"紫云苗族布依族自治县\",\n  \"value\": \"520425\" }],\n\n\n[{\n  \"label\": \"七星关区\",\n  \"value\": \"520502\" },\n\n{\n  \"label\": \"大方县\",\n  \"value\": \"520521\" },\n\n{\n  \"label\": \"黔西县\",\n  \"value\": \"520522\" },\n\n{\n  \"label\": \"金沙县\",\n  \"value\": \"520523\" },\n\n{\n  \"label\": \"织金县\",\n  \"value\": \"520524\" },\n\n{\n  \"label\": \"纳雍县\",\n  \"value\": \"520525\" },\n\n{\n  \"label\": \"威宁彝族回族苗族自治县\",\n  \"value\": \"520526\" },\n\n{\n  \"label\": \"赫章县\",\n  \"value\": \"520527\" }],\n\n\n[{\n  \"label\": \"碧江区\",\n  \"value\": \"520602\" },\n\n{\n  \"label\": \"万山区\",\n  \"value\": \"520603\" },\n\n{\n  \"label\": \"江口县\",\n  \"value\": \"520621\" },\n\n{\n  \"label\": \"玉屏侗族自治县\",\n  \"value\": \"520622\" },\n\n{\n  \"label\": \"石阡县\",\n  \"value\": \"520623\" },\n\n{\n  \"label\": \"思南县\",\n  \"value\": \"520624\" },\n\n{\n  \"label\": \"印江土家族苗族自治县\",\n  \"value\": \"520625\" },\n\n{\n  \"label\": \"德江县\",\n  \"value\": \"520626\" },\n\n{\n  \"label\": \"沿河土家族自治县\",\n  \"value\": \"520627\" },\n\n{\n  \"label\": \"松桃苗族自治县\",\n  \"value\": \"520628\" }],\n\n\n[{\n  \"label\": \"兴义市\",\n  \"value\": \"522301\" },\n\n{\n  \"label\": \"兴仁县\",\n  \"value\": \"522322\" },\n\n{\n  \"label\": \"普安县\",\n  \"value\": \"522323\" },\n\n{\n  \"label\": \"晴隆县\",\n  \"value\": \"522324\" },\n\n{\n  \"label\": \"贞丰县\",\n  \"value\": \"522325\" },\n\n{\n  \"label\": \"望谟县\",\n  \"value\": \"522326\" },\n\n{\n  \"label\": \"册亨县\",\n  \"value\": \"522327\" },\n\n{\n  \"label\": \"安龙县\",\n  \"value\": \"522328\" }],\n\n\n[{\n  \"label\": \"凯里市\",\n  \"value\": \"522601\" },\n\n{\n  \"label\": \"黄平县\",\n  \"value\": \"522622\" },\n\n{\n  \"label\": \"施秉县\",\n  \"value\": \"522623\" },\n\n{\n  \"label\": \"三穗县\",\n  \"value\": \"522624\" },\n\n{\n  \"label\": \"镇远县\",\n  \"value\": \"522625\" },\n\n{\n  \"label\": \"岑巩县\",\n  \"value\": \"522626\" },\n\n{\n  \"label\": \"天柱县\",\n  \"value\": \"522627\" },\n\n{\n  \"label\": \"锦屏县\",\n  \"value\": \"522628\" },\n\n{\n  \"label\": \"剑河县\",\n  \"value\": \"522629\" },\n\n{\n  \"label\": \"台江县\",\n  \"value\": \"522630\" },\n\n{\n  \"label\": \"黎平县\",\n  \"value\": \"522631\" },\n\n{\n  \"label\": \"榕江县\",\n  \"value\": \"522632\" },\n\n{\n  \"label\": \"从江县\",\n  \"value\": \"522633\" },\n\n{\n  \"label\": \"雷山县\",\n  \"value\": \"522634\" },\n\n{\n  \"label\": \"麻江县\",\n  \"value\": \"522635\" },\n\n{\n  \"label\": \"丹寨县\",\n  \"value\": \"522636\" }],\n\n\n[{\n  \"label\": \"都匀市\",\n  \"value\": \"522701\" },\n\n{\n  \"label\": \"福泉市\",\n  \"value\": \"522702\" },\n\n{\n  \"label\": \"荔波县\",\n  \"value\": \"522722\" },\n\n{\n  \"label\": \"贵定县\",\n  \"value\": \"522723\" },\n\n{\n  \"label\": \"瓮安县\",\n  \"value\": \"522725\" },\n\n{\n  \"label\": \"独山县\",\n  \"value\": \"522726\" },\n\n{\n  \"label\": \"平塘县\",\n  \"value\": \"522727\" },\n\n{\n  \"label\": \"罗甸县\",\n  \"value\": \"522728\" },\n\n{\n  \"label\": \"长顺县\",\n  \"value\": \"522729\" },\n\n{\n  \"label\": \"龙里县\",\n  \"value\": \"522730\" },\n\n{\n  \"label\": \"惠水县\",\n  \"value\": \"522731\" },\n\n{\n  \"label\": \"三都水族自治县\",\n  \"value\": \"522732\" }]],\n\n\n\n[\n[{\n  \"label\": \"五华区\",\n  \"value\": \"530102\" },\n\n{\n  \"label\": \"盘龙区\",\n  \"value\": \"530103\" },\n\n{\n  \"label\": \"官渡区\",\n  \"value\": \"530111\" },\n\n{\n  \"label\": \"西山区\",\n  \"value\": \"530112\" },\n\n{\n  \"label\": \"东川区\",\n  \"value\": \"530113\" },\n\n{\n  \"label\": \"呈贡区\",\n  \"value\": \"530114\" },\n\n{\n  \"label\": \"晋宁区\",\n  \"value\": \"530115\" },\n\n{\n  \"label\": \"富民县\",\n  \"value\": \"530124\" },\n\n{\n  \"label\": \"宜良县\",\n  \"value\": \"530125\" },\n\n{\n  \"label\": \"石林彝族自治县\",\n  \"value\": \"530126\" },\n\n{\n  \"label\": \"嵩明县\",\n  \"value\": \"530127\" },\n\n{\n  \"label\": \"禄劝彝族苗族自治县\",\n  \"value\": \"530128\" },\n\n{\n  \"label\": \"寻甸回族彝族自治县\",\n  \"value\": \"530129\" },\n\n{\n  \"label\": \"安宁市\",\n  \"value\": \"530181\" }],\n\n\n[{\n  \"label\": \"麒麟区\",\n  \"value\": \"530302\" },\n\n{\n  \"label\": \"沾益区\",\n  \"value\": \"530303\" },\n\n{\n  \"label\": \"马龙县\",\n  \"value\": \"530321\" },\n\n{\n  \"label\": \"陆良县\",\n  \"value\": \"530322\" },\n\n{\n  \"label\": \"师宗县\",\n  \"value\": \"530323\" },\n\n{\n  \"label\": \"罗平县\",\n  \"value\": \"530324\" },\n\n{\n  \"label\": \"富源县\",\n  \"value\": \"530325\" },\n\n{\n  \"label\": \"会泽县\",\n  \"value\": \"530326\" },\n\n{\n  \"label\": \"宣威市\",\n  \"value\": \"530381\" }],\n\n\n[{\n  \"label\": \"红塔区\",\n  \"value\": \"530402\" },\n\n{\n  \"label\": \"江川区\",\n  \"value\": \"530403\" },\n\n{\n  \"label\": \"澄江县\",\n  \"value\": \"530422\" },\n\n{\n  \"label\": \"通海县\",\n  \"value\": \"530423\" },\n\n{\n  \"label\": \"华宁县\",\n  \"value\": \"530424\" },\n\n{\n  \"label\": \"易门县\",\n  \"value\": \"530425\" },\n\n{\n  \"label\": \"峨山彝族自治县\",\n  \"value\": \"530426\" },\n\n{\n  \"label\": \"新平彝族傣族自治县\",\n  \"value\": \"530427\" },\n\n{\n  \"label\": \"元江哈尼族彝族傣族自治县\",\n  \"value\": \"530428\" }],\n\n\n[{\n  \"label\": \"隆阳区\",\n  \"value\": \"530502\" },\n\n{\n  \"label\": \"施甸县\",\n  \"value\": \"530521\" },\n\n{\n  \"label\": \"龙陵县\",\n  \"value\": \"530523\" },\n\n{\n  \"label\": \"昌宁县\",\n  \"value\": \"530524\" },\n\n{\n  \"label\": \"腾冲市\",\n  \"value\": \"530581\" }],\n\n\n[{\n  \"label\": \"昭阳区\",\n  \"value\": \"530602\" },\n\n{\n  \"label\": \"鲁甸县\",\n  \"value\": \"530621\" },\n\n{\n  \"label\": \"巧家县\",\n  \"value\": \"530622\" },\n\n{\n  \"label\": \"盐津县\",\n  \"value\": \"530623\" },\n\n{\n  \"label\": \"大关县\",\n  \"value\": \"530624\" },\n\n{\n  \"label\": \"永善县\",\n  \"value\": \"530625\" },\n\n{\n  \"label\": \"绥江县\",\n  \"value\": \"530626\" },\n\n{\n  \"label\": \"镇雄县\",\n  \"value\": \"530627\" },\n\n{\n  \"label\": \"彝良县\",\n  \"value\": \"530628\" },\n\n{\n  \"label\": \"威信县\",\n  \"value\": \"530629\" },\n\n{\n  \"label\": \"水富县\",\n  \"value\": \"530630\" }],\n\n\n[{\n  \"label\": \"古城区\",\n  \"value\": \"530702\" },\n\n{\n  \"label\": \"玉龙纳西族自治县\",\n  \"value\": \"530721\" },\n\n{\n  \"label\": \"永胜县\",\n  \"value\": \"530722\" },\n\n{\n  \"label\": \"华坪县\",\n  \"value\": \"530723\" },\n\n{\n  \"label\": \"宁蒗彝族自治县\",\n  \"value\": \"530724\" }],\n\n\n[{\n  \"label\": \"思茅区\",\n  \"value\": \"530802\" },\n\n{\n  \"label\": \"宁洱哈尼族彝族自治县\",\n  \"value\": \"530821\" },\n\n{\n  \"label\": \"墨江哈尼族自治县\",\n  \"value\": \"530822\" },\n\n{\n  \"label\": \"景东彝族自治县\",\n  \"value\": \"530823\" },\n\n{\n  \"label\": \"景谷傣族彝族自治县\",\n  \"value\": \"530824\" },\n\n{\n  \"label\": \"镇沅彝族哈尼族拉祜族自治县\",\n  \"value\": \"530825\" },\n\n{\n  \"label\": \"江城哈尼族彝族自治县\",\n  \"value\": \"530826\" },\n\n{\n  \"label\": \"孟连傣族拉祜族佤族自治县\",\n  \"value\": \"530827\" },\n\n{\n  \"label\": \"澜沧拉祜族自治县\",\n  \"value\": \"530828\" },\n\n{\n  \"label\": \"西盟佤族自治县\",\n  \"value\": \"530829\" }],\n\n\n[{\n  \"label\": \"临翔区\",\n  \"value\": \"530902\" },\n\n{\n  \"label\": \"凤庆县\",\n  \"value\": \"530921\" },\n\n{\n  \"label\": \"云县\",\n  \"value\": \"530922\" },\n\n{\n  \"label\": \"永德县\",\n  \"value\": \"530923\" },\n\n{\n  \"label\": \"镇康县\",\n  \"value\": \"530924\" },\n\n{\n  \"label\": \"双江拉祜族佤族布朗族傣族自治县\",\n  \"value\": \"530925\" },\n\n{\n  \"label\": \"耿马傣族佤族自治县\",\n  \"value\": \"530926\" },\n\n{\n  \"label\": \"沧源佤族自治县\",\n  \"value\": \"530927\" }],\n\n\n[{\n  \"label\": \"楚雄市\",\n  \"value\": \"532301\" },\n\n{\n  \"label\": \"双柏县\",\n  \"value\": \"532322\" },\n\n{\n  \"label\": \"牟定县\",\n  \"value\": \"532323\" },\n\n{\n  \"label\": \"南华县\",\n  \"value\": \"532324\" },\n\n{\n  \"label\": \"姚安县\",\n  \"value\": \"532325\" },\n\n{\n  \"label\": \"大姚县\",\n  \"value\": \"532326\" },\n\n{\n  \"label\": \"永仁县\",\n  \"value\": \"532327\" },\n\n{\n  \"label\": \"元谋县\",\n  \"value\": \"532328\" },\n\n{\n  \"label\": \"武定县\",\n  \"value\": \"532329\" },\n\n{\n  \"label\": \"禄丰县\",\n  \"value\": \"532331\" }],\n\n\n[{\n  \"label\": \"个旧市\",\n  \"value\": \"532501\" },\n\n{\n  \"label\": \"开远市\",\n  \"value\": \"532502\" },\n\n{\n  \"label\": \"蒙自市\",\n  \"value\": \"532503\" },\n\n{\n  \"label\": \"弥勒市\",\n  \"value\": \"532504\" },\n\n{\n  \"label\": \"屏边苗族自治县\",\n  \"value\": \"532523\" },\n\n{\n  \"label\": \"建水县\",\n  \"value\": \"532524\" },\n\n{\n  \"label\": \"石屏县\",\n  \"value\": \"532525\" },\n\n{\n  \"label\": \"泸西县\",\n  \"value\": \"532527\" },\n\n{\n  \"label\": \"元阳县\",\n  \"value\": \"532528\" },\n\n{\n  \"label\": \"红河县\",\n  \"value\": \"532529\" },\n\n{\n  \"label\": \"金平苗族瑶族傣族自治县\",\n  \"value\": \"532530\" },\n\n{\n  \"label\": \"绿春县\",\n  \"value\": \"532531\" },\n\n{\n  \"label\": \"河口瑶族自治县\",\n  \"value\": \"532532\" }],\n\n\n[{\n  \"label\": \"文山市\",\n  \"value\": \"532601\" },\n\n{\n  \"label\": \"砚山县\",\n  \"value\": \"532622\" },\n\n{\n  \"label\": \"西畴县\",\n  \"value\": \"532623\" },\n\n{\n  \"label\": \"麻栗坡县\",\n  \"value\": \"532624\" },\n\n{\n  \"label\": \"马关县\",\n  \"value\": \"532625\" },\n\n{\n  \"label\": \"丘北县\",\n  \"value\": \"532626\" },\n\n{\n  \"label\": \"广南县\",\n  \"value\": \"532627\" },\n\n{\n  \"label\": \"富宁县\",\n  \"value\": \"532628\" }],\n\n\n[{\n  \"label\": \"景洪市\",\n  \"value\": \"532801\" },\n\n{\n  \"label\": \"勐海县\",\n  \"value\": \"532822\" },\n\n{\n  \"label\": \"勐腊县\",\n  \"value\": \"532823\" }],\n\n\n[{\n  \"label\": \"大理市\",\n  \"value\": \"532901\" },\n\n{\n  \"label\": \"漾濞彝族自治县\",\n  \"value\": \"532922\" },\n\n{\n  \"label\": \"祥云县\",\n  \"value\": \"532923\" },\n\n{\n  \"label\": \"宾川县\",\n  \"value\": \"532924\" },\n\n{\n  \"label\": \"弥渡县\",\n  \"value\": \"532925\" },\n\n{\n  \"label\": \"南涧彝族自治县\",\n  \"value\": \"532926\" },\n\n{\n  \"label\": \"巍山彝族回族自治县\",\n  \"value\": \"532927\" },\n\n{\n  \"label\": \"永平县\",\n  \"value\": \"532928\" },\n\n{\n  \"label\": \"云龙县\",\n  \"value\": \"532929\" },\n\n{\n  \"label\": \"洱源县\",\n  \"value\": \"532930\" },\n\n{\n  \"label\": \"剑川县\",\n  \"value\": \"532931\" },\n\n{\n  \"label\": \"鹤庆县\",\n  \"value\": \"532932\" }],\n\n\n[{\n  \"label\": \"瑞丽市\",\n  \"value\": \"533102\" },\n\n{\n  \"label\": \"芒市\",\n  \"value\": \"533103\" },\n\n{\n  \"label\": \"梁河县\",\n  \"value\": \"533122\" },\n\n{\n  \"label\": \"盈江县\",\n  \"value\": \"533123\" },\n\n{\n  \"label\": \"陇川县\",\n  \"value\": \"533124\" }],\n\n\n[{\n  \"label\": \"泸水市\",\n  \"value\": \"533301\" },\n\n{\n  \"label\": \"福贡县\",\n  \"value\": \"533323\" },\n\n{\n  \"label\": \"贡山独龙族怒族自治县\",\n  \"value\": \"533324\" },\n\n{\n  \"label\": \"兰坪白族普米族自治县\",\n  \"value\": \"533325\" }],\n\n\n[{\n  \"label\": \"香格里拉市\",\n  \"value\": \"533401\" },\n\n{\n  \"label\": \"德钦县\",\n  \"value\": \"533422\" },\n\n{\n  \"label\": \"维西傈僳族自治县\",\n  \"value\": \"533423\" }]],\n\n\n\n[\n[{\n  \"label\": \"城关区\",\n  \"value\": \"540102\" },\n\n{\n  \"label\": \"堆龙德庆区\",\n  \"value\": \"540103\" },\n\n{\n  \"label\": \"林周县\",\n  \"value\": \"540121\" },\n\n{\n  \"label\": \"当雄县\",\n  \"value\": \"540122\" },\n\n{\n  \"label\": \"尼木县\",\n  \"value\": \"540123\" },\n\n{\n  \"label\": \"曲水县\",\n  \"value\": \"540124\" },\n\n{\n  \"label\": \"达孜县\",\n  \"value\": \"540126\" },\n\n{\n  \"label\": \"墨竹工卡县\",\n  \"value\": \"540127\" },\n\n{\n  \"label\": \"格尔木藏青工业园区\",\n  \"value\": \"540171\" },\n\n{\n  \"label\": \"拉萨经济技术开发区\",\n  \"value\": \"540172\" },\n\n{\n  \"label\": \"西藏文化旅游创意园区\",\n  \"value\": \"540173\" },\n\n{\n  \"label\": \"达孜工业园区\",\n  \"value\": \"540174\" }],\n\n\n[{\n  \"label\": \"桑珠孜区\",\n  \"value\": \"540202\" },\n\n{\n  \"label\": \"南木林县\",\n  \"value\": \"540221\" },\n\n{\n  \"label\": \"江孜县\",\n  \"value\": \"540222\" },\n\n{\n  \"label\": \"定日县\",\n  \"value\": \"540223\" },\n\n{\n  \"label\": \"萨迦县\",\n  \"value\": \"540224\" },\n\n{\n  \"label\": \"拉孜县\",\n  \"value\": \"540225\" },\n\n{\n  \"label\": \"昂仁县\",\n  \"value\": \"540226\" },\n\n{\n  \"label\": \"谢通门县\",\n  \"value\": \"540227\" },\n\n{\n  \"label\": \"白朗县\",\n  \"value\": \"540228\" },\n\n{\n  \"label\": \"仁布县\",\n  \"value\": \"540229\" },\n\n{\n  \"label\": \"康马县\",\n  \"value\": \"540230\" },\n\n{\n  \"label\": \"定结县\",\n  \"value\": \"540231\" },\n\n{\n  \"label\": \"仲巴县\",\n  \"value\": \"540232\" },\n\n{\n  \"label\": \"亚东县\",\n  \"value\": \"540233\" },\n\n{\n  \"label\": \"吉隆县\",\n  \"value\": \"540234\" },\n\n{\n  \"label\": \"聂拉木县\",\n  \"value\": \"540235\" },\n\n{\n  \"label\": \"萨嘎县\",\n  \"value\": \"540236\" },\n\n{\n  \"label\": \"岗巴县\",\n  \"value\": \"540237\" }],\n\n\n[{\n  \"label\": \"卡若区\",\n  \"value\": \"540302\" },\n\n{\n  \"label\": \"江达县\",\n  \"value\": \"540321\" },\n\n{\n  \"label\": \"贡觉县\",\n  \"value\": \"540322\" },\n\n{\n  \"label\": \"类乌齐县\",\n  \"value\": \"540323\" },\n\n{\n  \"label\": \"丁青县\",\n  \"value\": \"540324\" },\n\n{\n  \"label\": \"察雅县\",\n  \"value\": \"540325\" },\n\n{\n  \"label\": \"八宿县\",\n  \"value\": \"540326\" },\n\n{\n  \"label\": \"左贡县\",\n  \"value\": \"540327\" },\n\n{\n  \"label\": \"芒康县\",\n  \"value\": \"540328\" },\n\n{\n  \"label\": \"洛隆县\",\n  \"value\": \"540329\" },\n\n{\n  \"label\": \"边坝县\",\n  \"value\": \"540330\" }],\n\n\n[{\n  \"label\": \"巴宜区\",\n  \"value\": \"540402\" },\n\n{\n  \"label\": \"工布江达县\",\n  \"value\": \"540421\" },\n\n{\n  \"label\": \"米林县\",\n  \"value\": \"540422\" },\n\n{\n  \"label\": \"墨脱县\",\n  \"value\": \"540423\" },\n\n{\n  \"label\": \"波密县\",\n  \"value\": \"540424\" },\n\n{\n  \"label\": \"察隅县\",\n  \"value\": \"540425\" },\n\n{\n  \"label\": \"朗县\",\n  \"value\": \"540426\" }],\n\n\n[{\n  \"label\": \"乃东区\",\n  \"value\": \"540502\" },\n\n{\n  \"label\": \"扎囊县\",\n  \"value\": \"540521\" },\n\n{\n  \"label\": \"贡嘎县\",\n  \"value\": \"540522\" },\n\n{\n  \"label\": \"桑日县\",\n  \"value\": \"540523\" },\n\n{\n  \"label\": \"琼结县\",\n  \"value\": \"540524\" },\n\n{\n  \"label\": \"曲松县\",\n  \"value\": \"540525\" },\n\n{\n  \"label\": \"措美县\",\n  \"value\": \"540526\" },\n\n{\n  \"label\": \"洛扎县\",\n  \"value\": \"540527\" },\n\n{\n  \"label\": \"加查县\",\n  \"value\": \"540528\" },\n\n{\n  \"label\": \"隆子县\",\n  \"value\": \"540529\" },\n\n{\n  \"label\": \"错那县\",\n  \"value\": \"540530\" },\n\n{\n  \"label\": \"浪卡子县\",\n  \"value\": \"540531\" }],\n\n\n[{\n  \"label\": \"那曲县\",\n  \"value\": \"542421\" },\n\n{\n  \"label\": \"嘉黎县\",\n  \"value\": \"542422\" },\n\n{\n  \"label\": \"比如县\",\n  \"value\": \"542423\" },\n\n{\n  \"label\": \"聂荣县\",\n  \"value\": \"542424\" },\n\n{\n  \"label\": \"安多县\",\n  \"value\": \"542425\" },\n\n{\n  \"label\": \"申扎县\",\n  \"value\": \"542426\" },\n\n{\n  \"label\": \"索县\",\n  \"value\": \"542427\" },\n\n{\n  \"label\": \"班戈县\",\n  \"value\": \"542428\" },\n\n{\n  \"label\": \"巴青县\",\n  \"value\": \"542429\" },\n\n{\n  \"label\": \"尼玛县\",\n  \"value\": \"542430\" },\n\n{\n  \"label\": \"双湖县\",\n  \"value\": \"542431\" }],\n\n\n[{\n  \"label\": \"普兰县\",\n  \"value\": \"542521\" },\n\n{\n  \"label\": \"札达县\",\n  \"value\": \"542522\" },\n\n{\n  \"label\": \"噶尔县\",\n  \"value\": \"542523\" },\n\n{\n  \"label\": \"日土县\",\n  \"value\": \"542524\" },\n\n{\n  \"label\": \"革吉县\",\n  \"value\": \"542525\" },\n\n{\n  \"label\": \"改则县\",\n  \"value\": \"542526\" },\n\n{\n  \"label\": \"措勤县\",\n  \"value\": \"542527\" }]],\n\n\n\n[\n[{\n  \"label\": \"新城区\",\n  \"value\": \"610102\" },\n\n{\n  \"label\": \"碑林区\",\n  \"value\": \"610103\" },\n\n{\n  \"label\": \"莲湖区\",\n  \"value\": \"610104\" },\n\n{\n  \"label\": \"灞桥区\",\n  \"value\": \"610111\" },\n\n{\n  \"label\": \"未央区\",\n  \"value\": \"610112\" },\n\n{\n  \"label\": \"雁塔区\",\n  \"value\": \"610113\" },\n\n{\n  \"label\": \"阎良区\",\n  \"value\": \"610114\" },\n\n{\n  \"label\": \"临潼区\",\n  \"value\": \"610115\" },\n\n{\n  \"label\": \"长安区\",\n  \"value\": \"610116\" },\n\n{\n  \"label\": \"高陵区\",\n  \"value\": \"610117\" },\n\n{\n  \"label\": \"鄠邑区\",\n  \"value\": \"610118\" },\n\n{\n  \"label\": \"蓝田县\",\n  \"value\": \"610122\" },\n\n{\n  \"label\": \"周至县\",\n  \"value\": \"610124\" }],\n\n\n[{\n  \"label\": \"王益区\",\n  \"value\": \"610202\" },\n\n{\n  \"label\": \"印台区\",\n  \"value\": \"610203\" },\n\n{\n  \"label\": \"耀州区\",\n  \"value\": \"610204\" },\n\n{\n  \"label\": \"宜君县\",\n  \"value\": \"610222\" }],\n\n\n[{\n  \"label\": \"渭滨区\",\n  \"value\": \"610302\" },\n\n{\n  \"label\": \"金台区\",\n  \"value\": \"610303\" },\n\n{\n  \"label\": \"陈仓区\",\n  \"value\": \"610304\" },\n\n{\n  \"label\": \"凤翔县\",\n  \"value\": \"610322\" },\n\n{\n  \"label\": \"岐山县\",\n  \"value\": \"610323\" },\n\n{\n  \"label\": \"扶风县\",\n  \"value\": \"610324\" },\n\n{\n  \"label\": \"眉县\",\n  \"value\": \"610326\" },\n\n{\n  \"label\": \"陇县\",\n  \"value\": \"610327\" },\n\n{\n  \"label\": \"千阳县\",\n  \"value\": \"610328\" },\n\n{\n  \"label\": \"麟游县\",\n  \"value\": \"610329\" },\n\n{\n  \"label\": \"凤县\",\n  \"value\": \"610330\" },\n\n{\n  \"label\": \"太白县\",\n  \"value\": \"610331\" }],\n\n\n[{\n  \"label\": \"秦都区\",\n  \"value\": \"610402\" },\n\n{\n  \"label\": \"杨陵区\",\n  \"value\": \"610403\" },\n\n{\n  \"label\": \"渭城区\",\n  \"value\": \"610404\" },\n\n{\n  \"label\": \"三原县\",\n  \"value\": \"610422\" },\n\n{\n  \"label\": \"泾阳县\",\n  \"value\": \"610423\" },\n\n{\n  \"label\": \"乾县\",\n  \"value\": \"610424\" },\n\n{\n  \"label\": \"礼泉县\",\n  \"value\": \"610425\" },\n\n{\n  \"label\": \"永寿县\",\n  \"value\": \"610426\" },\n\n{\n  \"label\": \"彬县\",\n  \"value\": \"610427\" },\n\n{\n  \"label\": \"长武县\",\n  \"value\": \"610428\" },\n\n{\n  \"label\": \"旬邑县\",\n  \"value\": \"610429\" },\n\n{\n  \"label\": \"淳化县\",\n  \"value\": \"610430\" },\n\n{\n  \"label\": \"武功县\",\n  \"value\": \"610431\" },\n\n{\n  \"label\": \"兴平市\",\n  \"value\": \"610481\" }],\n\n\n[{\n  \"label\": \"临渭区\",\n  \"value\": \"610502\" },\n\n{\n  \"label\": \"华州区\",\n  \"value\": \"610503\" },\n\n{\n  \"label\": \"潼关县\",\n  \"value\": \"610522\" },\n\n{\n  \"label\": \"大荔县\",\n  \"value\": \"610523\" },\n\n{\n  \"label\": \"合阳县\",\n  \"value\": \"610524\" },\n\n{\n  \"label\": \"澄城县\",\n  \"value\": \"610525\" },\n\n{\n  \"label\": \"蒲城县\",\n  \"value\": \"610526\" },\n\n{\n  \"label\": \"白水县\",\n  \"value\": \"610527\" },\n\n{\n  \"label\": \"富平县\",\n  \"value\": \"610528\" },\n\n{\n  \"label\": \"韩城市\",\n  \"value\": \"610581\" },\n\n{\n  \"label\": \"华阴市\",\n  \"value\": \"610582\" }],\n\n\n[{\n  \"label\": \"宝塔区\",\n  \"value\": \"610602\" },\n\n{\n  \"label\": \"安塞区\",\n  \"value\": \"610603\" },\n\n{\n  \"label\": \"延长县\",\n  \"value\": \"610621\" },\n\n{\n  \"label\": \"延川县\",\n  \"value\": \"610622\" },\n\n{\n  \"label\": \"子长县\",\n  \"value\": \"610623\" },\n\n{\n  \"label\": \"志丹县\",\n  \"value\": \"610625\" },\n\n{\n  \"label\": \"吴起县\",\n  \"value\": \"610626\" },\n\n{\n  \"label\": \"甘泉县\",\n  \"value\": \"610627\" },\n\n{\n  \"label\": \"富县\",\n  \"value\": \"610628\" },\n\n{\n  \"label\": \"洛川县\",\n  \"value\": \"610629\" },\n\n{\n  \"label\": \"宜川县\",\n  \"value\": \"610630\" },\n\n{\n  \"label\": \"黄龙县\",\n  \"value\": \"610631\" },\n\n{\n  \"label\": \"黄陵县\",\n  \"value\": \"610632\" }],\n\n\n[{\n  \"label\": \"汉台区\",\n  \"value\": \"610702\" },\n\n{\n  \"label\": \"南郑区\",\n  \"value\": \"610703\" },\n\n{\n  \"label\": \"城固县\",\n  \"value\": \"610722\" },\n\n{\n  \"label\": \"洋县\",\n  \"value\": \"610723\" },\n\n{\n  \"label\": \"西乡县\",\n  \"value\": \"610724\" },\n\n{\n  \"label\": \"勉县\",\n  \"value\": \"610725\" },\n\n{\n  \"label\": \"宁强县\",\n  \"value\": \"610726\" },\n\n{\n  \"label\": \"略阳县\",\n  \"value\": \"610727\" },\n\n{\n  \"label\": \"镇巴县\",\n  \"value\": \"610728\" },\n\n{\n  \"label\": \"留坝县\",\n  \"value\": \"610729\" },\n\n{\n  \"label\": \"佛坪县\",\n  \"value\": \"610730\" }],\n\n\n[{\n  \"label\": \"榆阳区\",\n  \"value\": \"610802\" },\n\n{\n  \"label\": \"横山区\",\n  \"value\": \"610803\" },\n\n{\n  \"label\": \"府谷县\",\n  \"value\": \"610822\" },\n\n{\n  \"label\": \"靖边县\",\n  \"value\": \"610824\" },\n\n{\n  \"label\": \"定边县\",\n  \"value\": \"610825\" },\n\n{\n  \"label\": \"绥德县\",\n  \"value\": \"610826\" },\n\n{\n  \"label\": \"米脂县\",\n  \"value\": \"610827\" },\n\n{\n  \"label\": \"佳县\",\n  \"value\": \"610828\" },\n\n{\n  \"label\": \"吴堡县\",\n  \"value\": \"610829\" },\n\n{\n  \"label\": \"清涧县\",\n  \"value\": \"610830\" },\n\n{\n  \"label\": \"子洲县\",\n  \"value\": \"610831\" },\n\n{\n  \"label\": \"神木市\",\n  \"value\": \"610881\" }],\n\n\n[{\n  \"label\": \"汉滨区\",\n  \"value\": \"610902\" },\n\n{\n  \"label\": \"汉阴县\",\n  \"value\": \"610921\" },\n\n{\n  \"label\": \"石泉县\",\n  \"value\": \"610922\" },\n\n{\n  \"label\": \"宁陕县\",\n  \"value\": \"610923\" },\n\n{\n  \"label\": \"紫阳县\",\n  \"value\": \"610924\" },\n\n{\n  \"label\": \"岚皋县\",\n  \"value\": \"610925\" },\n\n{\n  \"label\": \"平利县\",\n  \"value\": \"610926\" },\n\n{\n  \"label\": \"镇坪县\",\n  \"value\": \"610927\" },\n\n{\n  \"label\": \"旬阳县\",\n  \"value\": \"610928\" },\n\n{\n  \"label\": \"白河县\",\n  \"value\": \"610929\" }],\n\n\n[{\n  \"label\": \"商州区\",\n  \"value\": \"611002\" },\n\n{\n  \"label\": \"洛南县\",\n  \"value\": \"611021\" },\n\n{\n  \"label\": \"丹凤县\",\n  \"value\": \"611022\" },\n\n{\n  \"label\": \"商南县\",\n  \"value\": \"611023\" },\n\n{\n  \"label\": \"山阳县\",\n  \"value\": \"611024\" },\n\n{\n  \"label\": \"镇安县\",\n  \"value\": \"611025\" },\n\n{\n  \"label\": \"柞水县\",\n  \"value\": \"611026\" }]],\n\n\n\n[\n[{\n  \"label\": \"城关区\",\n  \"value\": \"620102\" },\n\n{\n  \"label\": \"七里河区\",\n  \"value\": \"620103\" },\n\n{\n  \"label\": \"西固区\",\n  \"value\": \"620104\" },\n\n{\n  \"label\": \"安宁区\",\n  \"value\": \"620105\" },\n\n{\n  \"label\": \"红古区\",\n  \"value\": \"620111\" },\n\n{\n  \"label\": \"永登县\",\n  \"value\": \"620121\" },\n\n{\n  \"label\": \"皋兰县\",\n  \"value\": \"620122\" },\n\n{\n  \"label\": \"榆中县\",\n  \"value\": \"620123\" },\n\n{\n  \"label\": \"兰州新区\",\n  \"value\": \"620171\" }],\n\n\n[{\n  \"label\": \"嘉峪关市\",\n  \"value\": \"620201\" }],\n\n[{\n  \"label\": \"金川区\",\n  \"value\": \"620302\" },\n\n{\n  \"label\": \"永昌县\",\n  \"value\": \"620321\" }],\n\n\n[{\n  \"label\": \"白银区\",\n  \"value\": \"620402\" },\n\n{\n  \"label\": \"平川区\",\n  \"value\": \"620403\" },\n\n{\n  \"label\": \"靖远县\",\n  \"value\": \"620421\" },\n\n{\n  \"label\": \"会宁县\",\n  \"value\": \"620422\" },\n\n{\n  \"label\": \"景泰县\",\n  \"value\": \"620423\" }],\n\n\n[{\n  \"label\": \"秦州区\",\n  \"value\": \"620502\" },\n\n{\n  \"label\": \"麦积区\",\n  \"value\": \"620503\" },\n\n{\n  \"label\": \"清水县\",\n  \"value\": \"620521\" },\n\n{\n  \"label\": \"秦安县\",\n  \"value\": \"620522\" },\n\n{\n  \"label\": \"甘谷县\",\n  \"value\": \"620523\" },\n\n{\n  \"label\": \"武山县\",\n  \"value\": \"620524\" },\n\n{\n  \"label\": \"张家川回族自治县\",\n  \"value\": \"620525\" }],\n\n\n[{\n  \"label\": \"凉州区\",\n  \"value\": \"620602\" },\n\n{\n  \"label\": \"民勤县\",\n  \"value\": \"620621\" },\n\n{\n  \"label\": \"古浪县\",\n  \"value\": \"620622\" },\n\n{\n  \"label\": \"天祝藏族自治县\",\n  \"value\": \"620623\" }],\n\n\n[{\n  \"label\": \"甘州区\",\n  \"value\": \"620702\" },\n\n{\n  \"label\": \"肃南裕固族自治县\",\n  \"value\": \"620721\" },\n\n{\n  \"label\": \"民乐县\",\n  \"value\": \"620722\" },\n\n{\n  \"label\": \"临泽县\",\n  \"value\": \"620723\" },\n\n{\n  \"label\": \"高台县\",\n  \"value\": \"620724\" },\n\n{\n  \"label\": \"山丹县\",\n  \"value\": \"620725\" }],\n\n\n[{\n  \"label\": \"崆峒区\",\n  \"value\": \"620802\" },\n\n{\n  \"label\": \"泾川县\",\n  \"value\": \"620821\" },\n\n{\n  \"label\": \"灵台县\",\n  \"value\": \"620822\" },\n\n{\n  \"label\": \"崇信县\",\n  \"value\": \"620823\" },\n\n{\n  \"label\": \"华亭县\",\n  \"value\": \"620824\" },\n\n{\n  \"label\": \"庄浪县\",\n  \"value\": \"620825\" },\n\n{\n  \"label\": \"静宁县\",\n  \"value\": \"620826\" },\n\n{\n  \"label\": \"平凉工业园区\",\n  \"value\": \"620871\" }],\n\n\n[{\n  \"label\": \"肃州区\",\n  \"value\": \"620902\" },\n\n{\n  \"label\": \"金塔县\",\n  \"value\": \"620921\" },\n\n{\n  \"label\": \"瓜州县\",\n  \"value\": \"620922\" },\n\n{\n  \"label\": \"肃北蒙古族自治县\",\n  \"value\": \"620923\" },\n\n{\n  \"label\": \"阿克塞哈萨克族自治县\",\n  \"value\": \"620924\" },\n\n{\n  \"label\": \"玉门市\",\n  \"value\": \"620981\" },\n\n{\n  \"label\": \"敦煌市\",\n  \"value\": \"620982\" }],\n\n\n[{\n  \"label\": \"西峰区\",\n  \"value\": \"621002\" },\n\n{\n  \"label\": \"庆城县\",\n  \"value\": \"621021\" },\n\n{\n  \"label\": \"环县\",\n  \"value\": \"621022\" },\n\n{\n  \"label\": \"华池县\",\n  \"value\": \"621023\" },\n\n{\n  \"label\": \"合水县\",\n  \"value\": \"621024\" },\n\n{\n  \"label\": \"正宁县\",\n  \"value\": \"621025\" },\n\n{\n  \"label\": \"宁县\",\n  \"value\": \"621026\" },\n\n{\n  \"label\": \"镇原县\",\n  \"value\": \"621027\" }],\n\n\n[{\n  \"label\": \"安定区\",\n  \"value\": \"621102\" },\n\n{\n  \"label\": \"通渭县\",\n  \"value\": \"621121\" },\n\n{\n  \"label\": \"陇西县\",\n  \"value\": \"621122\" },\n\n{\n  \"label\": \"渭源县\",\n  \"value\": \"621123\" },\n\n{\n  \"label\": \"临洮县\",\n  \"value\": \"621124\" },\n\n{\n  \"label\": \"漳县\",\n  \"value\": \"621125\" },\n\n{\n  \"label\": \"岷县\",\n  \"value\": \"621126\" }],\n\n\n[{\n  \"label\": \"武都区\",\n  \"value\": \"621202\" },\n\n{\n  \"label\": \"成县\",\n  \"value\": \"621221\" },\n\n{\n  \"label\": \"文县\",\n  \"value\": \"621222\" },\n\n{\n  \"label\": \"宕昌县\",\n  \"value\": \"621223\" },\n\n{\n  \"label\": \"康县\",\n  \"value\": \"621224\" },\n\n{\n  \"label\": \"西和县\",\n  \"value\": \"621225\" },\n\n{\n  \"label\": \"礼县\",\n  \"value\": \"621226\" },\n\n{\n  \"label\": \"徽县\",\n  \"value\": \"621227\" },\n\n{\n  \"label\": \"两当县\",\n  \"value\": \"621228\" }],\n\n\n[{\n  \"label\": \"临夏市\",\n  \"value\": \"622901\" },\n\n{\n  \"label\": \"临夏县\",\n  \"value\": \"622921\" },\n\n{\n  \"label\": \"康乐县\",\n  \"value\": \"622922\" },\n\n{\n  \"label\": \"永靖县\",\n  \"value\": \"622923\" },\n\n{\n  \"label\": \"广河县\",\n  \"value\": \"622924\" },\n\n{\n  \"label\": \"和政县\",\n  \"value\": \"622925\" },\n\n{\n  \"label\": \"东乡族自治县\",\n  \"value\": \"622926\" },\n\n{\n  \"label\": \"积石山保安族东乡族撒拉族自治县\",\n  \"value\": \"622927\" }],\n\n\n[{\n  \"label\": \"合作市\",\n  \"value\": \"623001\" },\n\n{\n  \"label\": \"临潭县\",\n  \"value\": \"623021\" },\n\n{\n  \"label\": \"卓尼县\",\n  \"value\": \"623022\" },\n\n{\n  \"label\": \"舟曲县\",\n  \"value\": \"623023\" },\n\n{\n  \"label\": \"迭部县\",\n  \"value\": \"623024\" },\n\n{\n  \"label\": \"玛曲县\",\n  \"value\": \"623025\" },\n\n{\n  \"label\": \"碌曲县\",\n  \"value\": \"623026\" },\n\n{\n  \"label\": \"夏河县\",\n  \"value\": \"623027\" }]],\n\n\n\n[\n[{\n  \"label\": \"城东区\",\n  \"value\": \"630102\" },\n\n{\n  \"label\": \"城中区\",\n  \"value\": \"630103\" },\n\n{\n  \"label\": \"城西区\",\n  \"value\": \"630104\" },\n\n{\n  \"label\": \"城北区\",\n  \"value\": \"630105\" },\n\n{\n  \"label\": \"大通回族土族自治县\",\n  \"value\": \"630121\" },\n\n{\n  \"label\": \"湟中县\",\n  \"value\": \"630122\" },\n\n{\n  \"label\": \"湟源县\",\n  \"value\": \"630123\" }],\n\n\n[{\n  \"label\": \"乐都区\",\n  \"value\": \"630202\" },\n\n{\n  \"label\": \"平安区\",\n  \"value\": \"630203\" },\n\n{\n  \"label\": \"民和回族土族自治县\",\n  \"value\": \"630222\" },\n\n{\n  \"label\": \"互助土族自治县\",\n  \"value\": \"630223\" },\n\n{\n  \"label\": \"化隆回族自治县\",\n  \"value\": \"630224\" },\n\n{\n  \"label\": \"循化撒拉族自治县\",\n  \"value\": \"630225\" }],\n\n\n[{\n  \"label\": \"门源回族自治县\",\n  \"value\": \"632221\" },\n\n{\n  \"label\": \"祁连县\",\n  \"value\": \"632222\" },\n\n{\n  \"label\": \"海晏县\",\n  \"value\": \"632223\" },\n\n{\n  \"label\": \"刚察县\",\n  \"value\": \"632224\" }],\n\n\n[{\n  \"label\": \"同仁县\",\n  \"value\": \"632321\" },\n\n{\n  \"label\": \"尖扎县\",\n  \"value\": \"632322\" },\n\n{\n  \"label\": \"泽库县\",\n  \"value\": \"632323\" },\n\n{\n  \"label\": \"河南蒙古族自治县\",\n  \"value\": \"632324\" }],\n\n\n[{\n  \"label\": \"共和县\",\n  \"value\": \"632521\" },\n\n{\n  \"label\": \"同德县\",\n  \"value\": \"632522\" },\n\n{\n  \"label\": \"贵德县\",\n  \"value\": \"632523\" },\n\n{\n  \"label\": \"兴海县\",\n  \"value\": \"632524\" },\n\n{\n  \"label\": \"贵南县\",\n  \"value\": \"632525\" }],\n\n\n[{\n  \"label\": \"玛沁县\",\n  \"value\": \"632621\" },\n\n{\n  \"label\": \"班玛县\",\n  \"value\": \"632622\" },\n\n{\n  \"label\": \"甘德县\",\n  \"value\": \"632623\" },\n\n{\n  \"label\": \"达日县\",\n  \"value\": \"632624\" },\n\n{\n  \"label\": \"久治县\",\n  \"value\": \"632625\" },\n\n{\n  \"label\": \"玛多县\",\n  \"value\": \"632626\" }],\n\n\n[{\n  \"label\": \"玉树市\",\n  \"value\": \"632701\" },\n\n{\n  \"label\": \"杂多县\",\n  \"value\": \"632722\" },\n\n{\n  \"label\": \"称多县\",\n  \"value\": \"632723\" },\n\n{\n  \"label\": \"治多县\",\n  \"value\": \"632724\" },\n\n{\n  \"label\": \"囊谦县\",\n  \"value\": \"632725\" },\n\n{\n  \"label\": \"曲麻莱县\",\n  \"value\": \"632726\" }],\n\n\n[{\n  \"label\": \"格尔木市\",\n  \"value\": \"632801\" },\n\n{\n  \"label\": \"德令哈市\",\n  \"value\": \"632802\" },\n\n{\n  \"label\": \"乌兰县\",\n  \"value\": \"632821\" },\n\n{\n  \"label\": \"都兰县\",\n  \"value\": \"632822\" },\n\n{\n  \"label\": \"天峻县\",\n  \"value\": \"632823\" },\n\n{\n  \"label\": \"大柴旦行政委员会\",\n  \"value\": \"632857\" },\n\n{\n  \"label\": \"冷湖行政委员会\",\n  \"value\": \"632858\" },\n\n{\n  \"label\": \"茫崖行政委员会\",\n  \"value\": \"632859\" }]],\n\n\n\n[\n[{\n  \"label\": \"兴庆区\",\n  \"value\": \"640104\" },\n\n{\n  \"label\": \"西夏区\",\n  \"value\": \"640105\" },\n\n{\n  \"label\": \"金凤区\",\n  \"value\": \"640106\" },\n\n{\n  \"label\": \"永宁县\",\n  \"value\": \"640121\" },\n\n{\n  \"label\": \"贺兰县\",\n  \"value\": \"640122\" },\n\n{\n  \"label\": \"灵武市\",\n  \"value\": \"640181\" }],\n\n\n[{\n  \"label\": \"大武口区\",\n  \"value\": \"640202\" },\n\n{\n  \"label\": \"惠农区\",\n  \"value\": \"640205\" },\n\n{\n  \"label\": \"平罗县\",\n  \"value\": \"640221\" }],\n\n\n[{\n  \"label\": \"利通区\",\n  \"value\": \"640302\" },\n\n{\n  \"label\": \"红寺堡区\",\n  \"value\": \"640303\" },\n\n{\n  \"label\": \"盐池县\",\n  \"value\": \"640323\" },\n\n{\n  \"label\": \"同心县\",\n  \"value\": \"640324\" },\n\n{\n  \"label\": \"青铜峡市\",\n  \"value\": \"640381\" }],\n\n\n[{\n  \"label\": \"原州区\",\n  \"value\": \"640402\" },\n\n{\n  \"label\": \"西吉县\",\n  \"value\": \"640422\" },\n\n{\n  \"label\": \"隆德县\",\n  \"value\": \"640423\" },\n\n{\n  \"label\": \"泾源县\",\n  \"value\": \"640424\" },\n\n{\n  \"label\": \"彭阳县\",\n  \"value\": \"640425\" }],\n\n\n[{\n  \"label\": \"沙坡头区\",\n  \"value\": \"640502\" },\n\n{\n  \"label\": \"中宁县\",\n  \"value\": \"640521\" },\n\n{\n  \"label\": \"海原县\",\n  \"value\": \"640522\" }]],\n\n\n\n[\n[{\n  \"label\": \"天山区\",\n  \"value\": \"650102\" },\n\n{\n  \"label\": \"沙依巴克区\",\n  \"value\": \"650103\" },\n\n{\n  \"label\": \"新市区\",\n  \"value\": \"650104\" },\n\n{\n  \"label\": \"水磨沟区\",\n  \"value\": \"650105\" },\n\n{\n  \"label\": \"头屯河区\",\n  \"value\": \"650106\" },\n\n{\n  \"label\": \"达坂城区\",\n  \"value\": \"650107\" },\n\n{\n  \"label\": \"米东区\",\n  \"value\": \"650109\" },\n\n{\n  \"label\": \"乌鲁木齐县\",\n  \"value\": \"650121\" },\n\n{\n  \"label\": \"乌鲁木齐经济技术开发区\",\n  \"value\": \"650171\" },\n\n{\n  \"label\": \"乌鲁木齐高新技术产业开发区\",\n  \"value\": \"650172\" }],\n\n\n[{\n  \"label\": \"独山子区\",\n  \"value\": \"650202\" },\n\n{\n  \"label\": \"克拉玛依区\",\n  \"value\": \"650203\" },\n\n{\n  \"label\": \"白碱滩区\",\n  \"value\": \"650204\" },\n\n{\n  \"label\": \"乌尔禾区\",\n  \"value\": \"650205\" }],\n\n\n[{\n  \"label\": \"高昌区\",\n  \"value\": \"650402\" },\n\n{\n  \"label\": \"鄯善县\",\n  \"value\": \"650421\" },\n\n{\n  \"label\": \"托克逊县\",\n  \"value\": \"650422\" }],\n\n\n[{\n  \"label\": \"伊州区\",\n  \"value\": \"650502\" },\n\n{\n  \"label\": \"巴里坤哈萨克自治县\",\n  \"value\": \"650521\" },\n\n{\n  \"label\": \"伊吾县\",\n  \"value\": \"650522\" }],\n\n\n[{\n  \"label\": \"昌吉市\",\n  \"value\": \"652301\" },\n\n{\n  \"label\": \"阜康市\",\n  \"value\": \"652302\" },\n\n{\n  \"label\": \"呼图壁县\",\n  \"value\": \"652323\" },\n\n{\n  \"label\": \"玛纳斯县\",\n  \"value\": \"652324\" },\n\n{\n  \"label\": \"奇台县\",\n  \"value\": \"652325\" },\n\n{\n  \"label\": \"吉木萨尔县\",\n  \"value\": \"652327\" },\n\n{\n  \"label\": \"木垒哈萨克自治县\",\n  \"value\": \"652328\" }],\n\n\n[{\n  \"label\": \"博乐市\",\n  \"value\": \"652701\" },\n\n{\n  \"label\": \"阿拉山口市\",\n  \"value\": \"652702\" },\n\n{\n  \"label\": \"精河县\",\n  \"value\": \"652722\" },\n\n{\n  \"label\": \"温泉县\",\n  \"value\": \"652723\" }],\n\n\n[{\n  \"label\": \"库尔勒市\",\n  \"value\": \"652801\" },\n\n{\n  \"label\": \"轮台县\",\n  \"value\": \"652822\" },\n\n{\n  \"label\": \"尉犁县\",\n  \"value\": \"652823\" },\n\n{\n  \"label\": \"若羌县\",\n  \"value\": \"652824\" },\n\n{\n  \"label\": \"且末县\",\n  \"value\": \"652825\" },\n\n{\n  \"label\": \"焉耆回族自治县\",\n  \"value\": \"652826\" },\n\n{\n  \"label\": \"和静县\",\n  \"value\": \"652827\" },\n\n{\n  \"label\": \"和硕县\",\n  \"value\": \"652828\" },\n\n{\n  \"label\": \"博湖县\",\n  \"value\": \"652829\" },\n\n{\n  \"label\": \"库尔勒经济技术开发区\",\n  \"value\": \"652871\" }],\n\n\n[{\n  \"label\": \"阿克苏市\",\n  \"value\": \"652901\" },\n\n{\n  \"label\": \"温宿县\",\n  \"value\": \"652922\" },\n\n{\n  \"label\": \"库车县\",\n  \"value\": \"652923\" },\n\n{\n  \"label\": \"沙雅县\",\n  \"value\": \"652924\" },\n\n{\n  \"label\": \"新和县\",\n  \"value\": \"652925\" },\n\n{\n  \"label\": \"拜城县\",\n  \"value\": \"652926\" },\n\n{\n  \"label\": \"乌什县\",\n  \"value\": \"652927\" },\n\n{\n  \"label\": \"阿瓦提县\",\n  \"value\": \"652928\" },\n\n{\n  \"label\": \"柯坪县\",\n  \"value\": \"652929\" }],\n\n\n[{\n  \"label\": \"阿图什市\",\n  \"value\": \"653001\" },\n\n{\n  \"label\": \"阿克陶县\",\n  \"value\": \"653022\" },\n\n{\n  \"label\": \"阿合奇县\",\n  \"value\": \"653023\" },\n\n{\n  \"label\": \"乌恰县\",\n  \"value\": \"653024\" }],\n\n\n[{\n  \"label\": \"喀什市\",\n  \"value\": \"653101\" },\n\n{\n  \"label\": \"疏附县\",\n  \"value\": \"653121\" },\n\n{\n  \"label\": \"疏勒县\",\n  \"value\": \"653122\" },\n\n{\n  \"label\": \"英吉沙县\",\n  \"value\": \"653123\" },\n\n{\n  \"label\": \"泽普县\",\n  \"value\": \"653124\" },\n\n{\n  \"label\": \"莎车县\",\n  \"value\": \"653125\" },\n\n{\n  \"label\": \"叶城县\",\n  \"value\": \"653126\" },\n\n{\n  \"label\": \"麦盖提县\",\n  \"value\": \"653127\" },\n\n{\n  \"label\": \"岳普湖县\",\n  \"value\": \"653128\" },\n\n{\n  \"label\": \"伽师县\",\n  \"value\": \"653129\" },\n\n{\n  \"label\": \"巴楚县\",\n  \"value\": \"653130\" },\n\n{\n  \"label\": \"塔什库尔干塔吉克自治县\",\n  \"value\": \"653131\" }],\n\n\n[{\n  \"label\": \"和田市\",\n  \"value\": \"653201\" },\n\n{\n  \"label\": \"和田县\",\n  \"value\": \"653221\" },\n\n{\n  \"label\": \"墨玉县\",\n  \"value\": \"653222\" },\n\n{\n  \"label\": \"皮山县\",\n  \"value\": \"653223\" },\n\n{\n  \"label\": \"洛浦县\",\n  \"value\": \"653224\" },\n\n{\n  \"label\": \"策勒县\",\n  \"value\": \"653225\" },\n\n{\n  \"label\": \"于田县\",\n  \"value\": \"653226\" },\n\n{\n  \"label\": \"民丰县\",\n  \"value\": \"653227\" }],\n\n\n[{\n  \"label\": \"伊宁市\",\n  \"value\": \"654002\" },\n\n{\n  \"label\": \"奎屯市\",\n  \"value\": \"654003\" },\n\n{\n  \"label\": \"霍尔果斯市\",\n  \"value\": \"654004\" },\n\n{\n  \"label\": \"伊宁县\",\n  \"value\": \"654021\" },\n\n{\n  \"label\": \"察布查尔锡伯自治县\",\n  \"value\": \"654022\" },\n\n{\n  \"label\": \"霍城县\",\n  \"value\": \"654023\" },\n\n{\n  \"label\": \"巩留县\",\n  \"value\": \"654024\" },\n\n{\n  \"label\": \"新源县\",\n  \"value\": \"654025\" },\n\n{\n  \"label\": \"昭苏县\",\n  \"value\": \"654026\" },\n\n{\n  \"label\": \"特克斯县\",\n  \"value\": \"654027\" },\n\n{\n  \"label\": \"尼勒克县\",\n  \"value\": \"654028\" }],\n\n\n[{\n  \"label\": \"塔城市\",\n  \"value\": \"654201\" },\n\n{\n  \"label\": \"乌苏市\",\n  \"value\": \"654202\" },\n\n{\n  \"label\": \"额敏县\",\n  \"value\": \"654221\" },\n\n{\n  \"label\": \"沙湾县\",\n  \"value\": \"654223\" },\n\n{\n  \"label\": \"托里县\",\n  \"value\": \"654224\" },\n\n{\n  \"label\": \"裕民县\",\n  \"value\": \"654225\" },\n\n{\n  \"label\": \"和布克赛尔蒙古自治县\",\n  \"value\": \"654226\" }],\n\n\n[{\n  \"label\": \"阿勒泰市\",\n  \"value\": \"654301\" },\n\n{\n  \"label\": \"布尔津县\",\n  \"value\": \"654321\" },\n\n{\n  \"label\": \"富蕴县\",\n  \"value\": \"654322\" },\n\n{\n  \"label\": \"福海县\",\n  \"value\": \"654323\" },\n\n{\n  \"label\": \"哈巴河县\",\n  \"value\": \"654324\" },\n\n{\n  \"label\": \"青河县\",\n  \"value\": \"654325\" },\n\n{\n  \"label\": \"吉木乃县\",\n  \"value\": \"654326\" }],\n\n\n[{\n  \"label\": \"石河子市\",\n  \"value\": \"659001\" },\n\n{\n  \"label\": \"阿拉尔市\",\n  \"value\": \"659002\" },\n\n{\n  \"label\": \"图木舒克市\",\n  \"value\": \"659003\" },\n\n{\n  \"label\": \"五家渠市\",\n  \"value\": \"659004\" },\n\n{\n  \"label\": \"铁门关市\",\n  \"value\": \"659006\" }]],\n\n\n\n[\n[{\n  \"label\": \"台北\",\n  \"value\": \"660101\" }],\n\n[{\n  \"label\": \"高雄\",\n  \"value\": \"660201\" }],\n\n[{\n  \"label\": \"基隆\",\n  \"value\": \"660301\" }],\n\n[{\n  \"label\": \"台中\",\n  \"value\": \"660401\" }],\n\n[{\n  \"label\": \"台南\",\n  \"value\": \"660501\" }],\n\n[{\n  \"label\": \"新竹\",\n  \"value\": \"660601\" }],\n\n[{\n  \"label\": \"嘉义\",\n  \"value\": \"660701\" }],\n\n[{\n  \"label\": \"宜兰\",\n  \"value\": \"660801\" }],\n\n[{\n  \"label\": \"桃园\",\n  \"value\": \"660901\" }],\n\n[{\n  \"label\": \"苗栗\",\n  \"value\": \"661001\" }],\n\n[{\n  \"label\": \"彰化\",\n  \"value\": \"661101\" }],\n\n[{\n  \"label\": \"南投\",\n  \"value\": \"661201\" }],\n\n[{\n  \"label\": \"云林\",\n  \"value\": \"661301\" }],\n\n[{\n  \"label\": \"屏东\",\n  \"value\": \"661401\" }],\n\n[{\n  \"label\": \"台东\",\n  \"value\": \"661501\" }],\n\n[{\n  \"label\": \"花莲\",\n  \"value\": \"661601\" }],\n\n[{\n  \"label\": \"澎湖\",\n  \"value\": \"661701\" }]],\n\n\n[\n[{\n  \"label\": \"香港岛\",\n  \"value\": \"670101\" }],\n\n[{\n  \"label\": \"九龙\",\n  \"value\": \"670201\" }],\n\n[{\n  \"label\": \"新界\",\n  \"value\": \"670301\" }]],\n\n\n[\n[{\n  \"label\": \"澳门半岛\",\n  \"value\": \"680101\" }],\n\n[{\n  \"label\": \"氹仔岛\",\n  \"value\": \"680201\" }],\n\n[{\n  \"label\": \"路环岛\",\n  \"value\": \"680301\" }],\n\n[{\n  \"label\": \"路氹城\",\n  \"value\": \"680401\" }]]];var _default =\n\n\n\nareaData;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///315\n");

/***/ }),

/***/ 4:
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = formatLog;function typof(v) {\n  var s = Object.prototype.toString.call(v);\n  return s.substring(8, s.length - 1);\n}\n\nfunction formatLog() {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}\n  var msgs = args.map(function (v) {\n    var type = Object.prototype.toString.call(v);\n    if (type.toLowerCase() === '[object object]') {\n      try {\n        v = '---BEGIN:JSON---' + JSON.stringify(v) + '---END:JSON---';\n      } catch (e) {\n        v = '[object object]';\n      }\n    } else {\n      if (v === null) {\n        v = '---NULL---';\n      } else if (v === undefined) {\n        v = '---UNDEFINED---';\n      } else {\n        var vType = typof(v).toUpperCase();\n        if (vType === 'NUMBER' || vType === 'BOOLEAN') {\n          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---';\n        } else {\n          v = String(v);\n        }\n      }\n    }\n    return v;\n  });\n  var msg = '';\n  if (msgs.length > 1) {\n    var lastMsg = msgs.pop();\n    msg = msgs.join('---COMMA---');\n    if (lastMsg.indexOf(' at ') === 0) {\n      msg += lastMsg;\n    } else {\n      msg += '---COMMA---' + lastMsg;\n    }\n  } else {\n    msg = msgs[0];\n  }\n  return msg;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbInR5cG9mIiwidiIsInMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJzdWJzdHJpbmciLCJsZW5ndGgiLCJmb3JtYXRMb2ciLCJhcmdzIiwibXNncyIsIm1hcCIsInR5cGUiLCJ0b0xvd2VyQ2FzZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlIiwidW5kZWZpbmVkIiwidlR5cGUiLCJ0b1VwcGVyQ2FzZSIsIlN0cmluZyIsIm1zZyIsImxhc3RNc2ciLCJwb3AiLCJqb2luIiwiaW5kZXhPZiJdLCJtYXBwaW5ncyI6IjBGQUFBLFNBQVNBLEtBQVQsQ0FBZ0JDLENBQWhCLEVBQW1CO0FBQ2pCLE1BQU1DLENBQUMsR0FBR0MsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JMLENBQS9CLENBQVY7QUFDQSxTQUFPQyxDQUFDLENBQUNLLFNBQUYsQ0FBWSxDQUFaLEVBQWVMLENBQUMsQ0FBQ00sTUFBRixHQUFXLENBQTFCLENBQVA7QUFDRDs7QUFFYyxTQUFTQyxTQUFULEdBQTZCLG1DQUFOQyxJQUFNLG9EQUFOQSxJQUFNO0FBQzFDLE1BQU1DLElBQUksR0FBR0QsSUFBSSxDQUFDRSxHQUFMLENBQVMsVUFBQ1gsQ0FBRCxFQUFPO0FBQzNCLFFBQU1ZLElBQUksR0FBR1YsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JMLENBQS9CLENBQWI7QUFDQSxRQUFJWSxJQUFJLENBQUNDLFdBQUwsT0FBdUIsaUJBQTNCLEVBQThDO0FBQzVDLFVBQUk7QUFDRmIsU0FBQyxHQUFHLHFCQUFxQmMsSUFBSSxDQUFDQyxTQUFMLENBQWVmLENBQWYsQ0FBckIsR0FBeUMsZ0JBQTdDO0FBQ0QsT0FGRCxDQUVFLE9BQU9nQixDQUFQLEVBQVU7QUFDVmhCLFNBQUMsR0FBRyxpQkFBSjtBQUNEO0FBQ0YsS0FORCxNQU1PO0FBQ0wsVUFBSUEsQ0FBQyxLQUFLLElBQVYsRUFBZ0I7QUFDZEEsU0FBQyxHQUFHLFlBQUo7QUFDRCxPQUZELE1BRU8sSUFBSUEsQ0FBQyxLQUFLaUIsU0FBVixFQUFxQjtBQUMxQmpCLFNBQUMsR0FBRyxpQkFBSjtBQUNELE9BRk0sTUFFQTtBQUNMLFlBQU1rQixLQUFLLEdBQUduQixLQUFLLENBQUNDLENBQUQsQ0FBTCxDQUFTbUIsV0FBVCxFQUFkO0FBQ0EsWUFBSUQsS0FBSyxLQUFLLFFBQVYsSUFBc0JBLEtBQUssS0FBSyxTQUFwQyxFQUErQztBQUM3Q2xCLFdBQUMsR0FBRyxjQUFja0IsS0FBZCxHQUFzQixLQUF0QixHQUE4QmxCLENBQTlCLEdBQWtDLFNBQWxDLEdBQThDa0IsS0FBOUMsR0FBc0QsS0FBMUQ7QUFDRCxTQUZELE1BRU87QUFDTGxCLFdBQUMsR0FBR29CLE1BQU0sQ0FBQ3BCLENBQUQsQ0FBVjtBQUNEO0FBQ0Y7QUFDRjtBQUNELFdBQU9BLENBQVA7QUFDRCxHQXZCWSxDQUFiO0FBd0JBLE1BQUlxQixHQUFHLEdBQUcsRUFBVjtBQUNBLE1BQUlYLElBQUksQ0FBQ0gsTUFBTCxHQUFjLENBQWxCLEVBQXFCO0FBQ25CLFFBQU1lLE9BQU8sR0FBR1osSUFBSSxDQUFDYSxHQUFMLEVBQWhCO0FBQ0FGLE9BQUcsR0FBR1gsSUFBSSxDQUFDYyxJQUFMLENBQVUsYUFBVixDQUFOO0FBQ0EsUUFBSUYsT0FBTyxDQUFDRyxPQUFSLENBQWdCLE1BQWhCLE1BQTRCLENBQWhDLEVBQW1DO0FBQ2pDSixTQUFHLElBQUlDLE9BQVA7QUFDRCxLQUZELE1BRU87QUFDTEQsU0FBRyxJQUFJLGdCQUFnQkMsT0FBdkI7QUFDRDtBQUNGLEdBUkQsTUFRTztBQUNMRCxPQUFHLEdBQUdYLElBQUksQ0FBQyxDQUFELENBQVY7QUFDRDtBQUNELFNBQU9XLEdBQVA7QUFDRCIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdHlwb2YgKHYpIHtcclxuICBjb25zdCBzID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHYpXHJcbiAgcmV0dXJuIHMuc3Vic3RyaW5nKDgsIHMubGVuZ3RoIC0gMSlcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9ybWF0TG9nICguLi5hcmdzKSB7XHJcbiAgY29uc3QgbXNncyA9IGFyZ3MubWFwKCh2KSA9PiB7XHJcbiAgICBjb25zdCB0eXBlID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHYpXHJcbiAgICBpZiAodHlwZS50b0xvd2VyQ2FzZSgpID09PSAnW29iamVjdCBvYmplY3RdJykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHYgPSAnLS0tQkVHSU46SlNPTi0tLScgKyBKU09OLnN0cmluZ2lmeSh2KSArICctLS1FTkQ6SlNPTi0tLSdcclxuICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIHYgPSAnW29iamVjdCBvYmplY3RdJ1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAodiA9PT0gbnVsbCkge1xyXG4gICAgICAgIHYgPSAnLS0tTlVMTC0tLSdcclxuICAgICAgfSBlbHNlIGlmICh2ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB2ID0gJy0tLVVOREVGSU5FRC0tLSdcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjb25zdCB2VHlwZSA9IHR5cG9mKHYpLnRvVXBwZXJDYXNlKClcclxuICAgICAgICBpZiAodlR5cGUgPT09ICdOVU1CRVInIHx8IHZUeXBlID09PSAnQk9PTEVBTicpIHtcclxuICAgICAgICAgIHYgPSAnLS0tQkVHSU46JyArIHZUeXBlICsgJy0tLScgKyB2ICsgJy0tLUVORDonICsgdlR5cGUgKyAnLS0tJ1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2ID0gU3RyaW5nKHYpXHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdlxyXG4gIH0pXHJcbiAgbGV0IG1zZyA9ICcnXHJcbiAgaWYgKG1zZ3MubGVuZ3RoID4gMSkge1xyXG4gICAgY29uc3QgbGFzdE1zZyA9IG1zZ3MucG9wKClcclxuICAgIG1zZyA9IG1zZ3Muam9pbignLS0tQ09NTUEtLS0nKVxyXG4gICAgaWYgKGxhc3RNc2cuaW5kZXhPZignIGF0ICcpID09PSAwKSB7XHJcbiAgICAgIG1zZyArPSBsYXN0TXNnXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBtc2cgKz0gJy0tLUNPTU1BLS0tJyArIGxhc3RNc2dcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgbXNnID0gbXNnc1swXVxyXG4gIH1cclxuICByZXR1cm4gbXNnXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n");

/***/ }),

/***/ 41:
/*!*************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/city.data.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = [{ \"value\": 110000, \"label\": \"北京市\", \"children\": [{ \"value\": 110101, \"label\": \"东城区\" }, { \"value\": 110102, \"label\": \"西城区\" }, { \"value\": 110105, \"label\": \"朝阳区\" }, { \"value\": 110106, \"label\": \"丰台区\" }, { \"value\": 110107, \"label\": \"石景山区\" }, { \"value\": 110108, \"label\": \"海淀区\" }, { \"value\": 110109, \"label\": \"门头沟区\" }, { \"value\": 110111, \"label\": \"房山区\" }, { \"value\": 110112, \"label\": \"通州区\" }, { \"value\": 110113, \"label\": \"顺义区\" }, { \"value\": 110114, \"label\": \"昌平区\" }, { \"value\": 110115, \"label\": \"大兴区\" }, { \"value\": 110116, \"label\": \"怀柔区\" }, { \"value\": 110117, \"label\": \"平谷区\" }, { \"value\": 110118, \"label\": \"密云区\" }, { \"value\": 110119, \"label\": \"延庆区\" }] }, { \"value\": 120000, \"label\": \"天津市\", \"children\": [{ \"value\": 120101, \"label\": \"和平区\" }, { \"value\": 120102, \"label\": \"河东区\" }, { \"value\": 120103, \"label\": \"河西区\" }, { \"value\": 120104, \"label\": \"南开区\" }, { \"value\": 120105, \"label\": \"河北区\" }, { \"value\": 120106, \"label\": \"红桥区\" }, { \"value\": 120110, \"label\": \"东丽区\" }, { \"value\": 120111, \"label\": \"西青区\" }, { \"value\": 120112, \"label\": \"津南区\" }, { \"value\": 120113, \"label\": \"北辰区\" }, { \"value\": 120114, \"label\": \"武清区\" }, { \"value\": 120115, \"label\": \"宝坻区\" }, { \"value\": 120116, \"label\": \"滨海新区\" }, { \"value\": 120117, \"label\": \"宁河区\" }, { \"value\": 120118, \"label\": \"静海区\" }, { \"value\": 120119, \"label\": \"蓟州区\" }] }, { \"value\": 130000, \"label\": \"河北省\", \"children\": [{ \"value\": 130100, \"label\": \"石家庄市\" }, { \"value\": 130200, \"label\": \"唐山市\" }, { \"value\": 130300, \"label\": \"秦皇岛市\" }, { \"value\": 130400, \"label\": \"邯郸市\" }, { \"value\": 130500, \"label\": \"邢台市\" }, { \"value\": 130600, \"label\": \"保定市\" }, { \"value\": 130700, \"label\": \"张家口市\" }, { \"value\": 130800, \"label\": \"承德市\" }, { \"value\": 130900, \"label\": \"沧州市\" }, { \"value\": 131000, \"label\": \"廊坊市\" }, { \"value\": 131100, \"label\": \"衡水市\" }, { \"value\": 139000, \"label\": \"省直辖县级行政区划\" }] }, { \"value\": 140000, \"label\": \"山西省\", \"children\": [{ \"value\": 140100, \"label\": \"太原市\" }, { \"value\": 140200, \"label\": \"大同市\" }, { \"value\": 140300, \"label\": \"阳泉市\" }, { \"value\": 140400, \"label\": \"长治市\" }, { \"value\": 140500, \"label\": \"晋城市\" }, { \"value\": 140600, \"label\": \"朔州市\" }, { \"value\": 140700, \"label\": \"晋中市\" }, { \"value\": 140800, \"label\": \"运城市\" }, { \"value\": 140900, \"label\": \"忻州市\" }, { \"value\": 141000, \"label\": \"临汾市\" }, { \"value\": 141100, \"label\": \"吕梁市\" }] }, { \"value\": 150000, \"label\": \"内蒙古自治区\", \"children\": [{ \"value\": 150100, \"label\": \"呼和浩特市\" }, { \"value\": 150200, \"label\": \"包头市\" }, { \"value\": 150300, \"label\": \"乌海市\" }, { \"value\": 150400, \"label\": \"赤峰市\" }, { \"value\": 150500, \"label\": \"通辽市\" }, { \"value\": 150600, \"label\": \"鄂尔多斯市\" }, { \"value\": 150700, \"label\": \"呼伦贝尔市\" }, { \"value\": 150800, \"label\": \"巴彦淖尔市\" }, { \"value\": 150900, \"label\": \"乌兰察布市\" }, { \"value\": 152200, \"label\": \"兴安盟\" }, { \"value\": 152500, \"label\": \"锡林郭勒盟\" }, { \"value\": 152900, \"label\": \"阿拉善盟\" }] }, { \"value\": 210000, \"label\": \"辽宁省\", \"children\": [{ \"value\": 210100, \"label\": \"沈阳市\" }, { \"value\": 210200, \"label\": \"大连市\" }, { \"value\": 210300, \"label\": \"鞍山市\" }, { \"value\": 210400, \"label\": \"抚顺市\" }, { \"value\": 210500, \"label\": \"本溪市\" }, { \"value\": 210600, \"label\": \"丹东市\" }, { \"value\": 210700, \"label\": \"锦州市\" }, { \"value\": 210800, \"label\": \"营口市\" }, { \"value\": 210900, \"label\": \"阜新市\" }, { \"value\": 211000, \"label\": \"辽阳市\" }, { \"value\": 211100, \"label\": \"盘锦市\" }, { \"value\": 211200, \"label\": \"铁岭市\" }, { \"value\": 211300, \"label\": \"朝阳市\" }, { \"value\": 211400, \"label\": \"葫芦岛市\" }] }, { \"value\": 220000, \"label\": \"吉林省\", \"children\": [{ \"value\": 220100, \"label\": \"长春市\" }, { \"value\": 220200, \"label\": \"吉林市\" }, { \"value\": 220300, \"label\": \"四平市\" }, { \"value\": 220400, \"label\": \"辽源市\" }, { \"value\": 220500, \"label\": \"通化市\" }, { \"value\": 220600, \"label\": \"白山市\" }, { \"value\": 220700, \"label\": \"松原市\" }, { \"value\": 220800, \"label\": \"白城市\" }, { \"value\": 222400, \"label\": \"延边朝鲜族自治州\" }] }, { \"value\": 230000, \"label\": \"黑龙江省\", \"children\": [{ \"value\": 230100, \"label\": \"哈尔滨市\" }, { \"value\": 230200, \"label\": \"齐齐哈尔市\" }, { \"value\": 230300, \"label\": \"鸡西市\" }, { \"value\": 230400, \"label\": \"鹤岗市\" }, { \"value\": 230500, \"label\": \"双鸭山市\" }, { \"value\": 230600, \"label\": \"大庆市\" }, { \"value\": 230700, \"label\": \"伊春市\" }, { \"value\": 230800, \"label\": \"佳木斯市\" }, { \"value\": 230900, \"label\": \"七台河市\" }, { \"value\": 231000, \"label\": \"牡丹江市\" }, { \"value\": 231100, \"label\": \"黑河市\" }, { \"value\": 231200, \"label\": \"绥化市\" }, { \"value\": 232700, \"label\": \"大兴安岭地区\" }] }, { \"value\": 310000, \"label\": \"上海市\", \"children\": [{ \"value\": 310101, \"label\": \"黄浦区\" }, { \"value\": 310104, \"label\": \"徐汇区\" }, { \"value\": 310105, \"label\": \"长宁区\" }, { \"value\": 310106, \"label\": \"静安区\" }, { \"value\": 310107, \"label\": \"普陀区\" }, { \"value\": 310109, \"label\": \"虹口区\" }, { \"value\": 310110, \"label\": \"杨浦区\" }, { \"value\": 310112, \"label\": \"闵行区\" }, { \"value\": 310113, \"label\": \"宝山区\" }, { \"value\": 310114, \"label\": \"嘉定区\" }, { \"value\": 310115, \"label\": \"浦东新区\" }, { \"value\": 310116, \"label\": \"金山区\" }, { \"value\": 310117, \"label\": \"松江区\" }, { \"value\": 310118, \"label\": \"青浦区\" }, { \"value\": 310120, \"label\": \"奉贤区\" }, { \"value\": 310151, \"label\": \"崇明区\" }] }, { \"value\": 320000, \"label\": \"江苏省\", \"children\": [{ \"value\": 320100, \"label\": \"南京市\" }, { \"value\": 320200, \"label\": \"无锡市\" }, { \"value\": 320300, \"label\": \"徐州市\" }, { \"value\": 320400, \"label\": \"常州市\" }, { \"value\": 320500, \"label\": \"苏州市\" }, { \"value\": 320600, \"label\": \"南通市\" }, { \"value\": 320700, \"label\": \"连云港市\" }, { \"value\": 320800, \"label\": \"淮安市\" }, { \"value\": 320900, \"label\": \"盐城市\" }, { \"value\": 321000, \"label\": \"扬州市\" }, { \"value\": 321100, \"label\": \"镇江市\" }, { \"value\": 321200, \"label\": \"泰州市\" }, { \"value\": 321300, \"label\": \"宿迁市\" }] }, { \"value\": 330000, \"label\": \"浙江省\", \"children\": [{ \"value\": 330100, \"label\": \"杭州市\" }, { \"value\": 330200, \"label\": \"宁波市\" }, { \"value\": 330300, \"label\": \"温州市\" }, { \"value\": 330400, \"label\": \"嘉兴市\" }, { \"value\": 330500, \"label\": \"湖州市\" }, { \"value\": 330600, \"label\": \"绍兴市\" }, { \"value\": 330700, \"label\": \"金华市\" }, { \"value\": 330800, \"label\": \"衢州市\" }, { \"value\": 330900, \"label\": \"舟山市\" }, { \"value\": 331000, \"label\": \"台州市\" }, { \"value\": 331100, \"label\": \"丽水市\" }] }, { \"value\": 340000, \"label\": \"安徽省\", \"children\": [{ \"value\": 340100, \"label\": \"合肥市\" }, { \"value\": 340200, \"label\": \"芜湖市\" }, { \"value\": 340300, \"label\": \"蚌埠市\" }, { \"value\": 340400, \"label\": \"淮南市\" }, { \"value\": 340500, \"label\": \"马鞍山市\" }, { \"value\": 340600, \"label\": \"淮北市\" }, { \"value\": 340700, \"label\": \"铜陵市\" }, { \"value\": 340800, \"label\": \"安庆市\" }, { \"value\": 341000, \"label\": \"黄山市\" }, { \"value\": 341100, \"label\": \"滁州市\" }, { \"value\": 341200, \"label\": \"阜阳市\" }, { \"value\": 341300, \"label\": \"宿州市\" }, { \"value\": 341500, \"label\": \"六安市\" }, { \"value\": 341600, \"label\": \"亳州市\" }, { \"value\": 341700, \"label\": \"池州市\" }, { \"value\": 341800, \"label\": \"宣城市\" }] }, { \"value\": 350000, \"label\": \"福建省\", \"children\": [{ \"value\": 350100, \"label\": \"福州市\" }, { \"value\": 350200, \"label\": \"厦门市\" }, { \"value\": 350300, \"label\": \"莆田市\" }, { \"value\": 350400, \"label\": \"三明市\" }, { \"value\": 350500, \"label\": \"泉州市\" }, { \"value\": 350600, \"label\": \"漳州市\" }, { \"value\": 350700, \"label\": \"南平市\" }, { \"value\": 350800, \"label\": \"龙岩市\" }, { \"value\": 350900, \"label\": \"宁德市\" }] }, { \"value\": 360000, \"label\": \"江西省\", \"children\": [{ \"value\": 360100, \"label\": \"南昌市\" }, { \"value\": 360200, \"label\": \"景德镇市\" }, { \"value\": 360300, \"label\": \"萍乡市\" }, { \"value\": 360400, \"label\": \"九江市\" }, { \"value\": 360500, \"label\": \"新余市\" }, { \"value\": 360600, \"label\": \"鹰潭市\" }, { \"value\": 360700, \"label\": \"赣州市\" }, { \"value\": 360800, \"label\": \"吉安市\" }, { \"value\": 360900, \"label\": \"宜春市\" }, { \"value\": 361000, \"label\": \"抚州市\" }, { \"value\": 361100, \"label\": \"上饶市\" }] }, { \"value\": 370000, \"label\": \"山东省\", \"children\": [{ \"value\": 370100, \"label\": \"济南市\" }, { \"value\": 370200, \"label\": \"青岛市\" }, { \"value\": 370300, \"label\": \"淄博市\" }, { \"value\": 370400, \"label\": \"枣庄市\" }, { \"value\": 370500, \"label\": \"东营市\" }, { \"value\": 370600, \"label\": \"烟台市\" }, { \"value\": 370700, \"label\": \"潍坊市\" }, { \"value\": 370800, \"label\": \"济宁市\" }, { \"value\": 370900, \"label\": \"泰安市\" }, { \"value\": 371000, \"label\": \"威海市\" }, { \"value\": 371100, \"label\": \"日照市\" }, { \"value\": 371200, \"label\": \"莱芜市\" }, { \"value\": 371300, \"label\": \"临沂市\" }, { \"value\": 371400, \"label\": \"德州市\" }, { \"value\": 371500, \"label\": \"聊城市\" }, { \"value\": 371600, \"label\": \"滨州市\" }, { \"value\": 371700, \"label\": \"菏泽市\" }] }, { \"value\": 410000, \"label\": \"河南省\", \"children\": [{ \"value\": 410100, \"label\": \"郑州市\" }, { \"value\": 410200, \"label\": \"开封市\" }, { \"value\": 410300, \"label\": \"洛阳市\" }, { \"value\": 410400, \"label\": \"平顶山市\" }, { \"value\": 410500, \"label\": \"安阳市\" }, { \"value\": 410600, \"label\": \"鹤壁市\" }, { \"value\": 410700, \"label\": \"新乡市\" }, { \"value\": 410800, \"label\": \"焦作市\" }, { \"value\": 410900, \"label\": \"濮阳市\" }, { \"value\": 411000, \"label\": \"许昌市\" }, { \"value\": 411100, \"label\": \"漯河市\" }, { \"value\": 411200, \"label\": \"三门峡市\" }, { \"value\": 411300, \"label\": \"南阳市\" }, { \"value\": 411400, \"label\": \"商丘市\" }, { \"value\": 411500, \"label\": \"信阳市\" }, { \"value\": 411600, \"label\": \"周口市\" }, { \"value\": 411700, \"label\": \"驻马店市\" }, { \"value\": 419000, \"label\": \"省直辖县级行政区划\" }] }, { \"value\": 420000, \"label\": \"湖北省\", \"children\": [{ \"value\": 420100, \"label\": \"武汉市\" }, { \"value\": 420200, \"label\": \"黄石市\" }, { \"value\": 420300, \"label\": \"十堰市\" }, { \"value\": 420500, \"label\": \"宜昌市\" }, { \"value\": 420600, \"label\": \"襄阳市\" }, { \"value\": 420700, \"label\": \"鄂州市\" }, { \"value\": 420800, \"label\": \"荆门市\" }, { \"value\": 420900, \"label\": \"孝感市\" }, { \"value\": 421000, \"label\": \"荆州市\" }, { \"value\": 421100, \"label\": \"黄冈市\" }, { \"value\": 421200, \"label\": \"咸宁市\" }, { \"value\": 421300, \"label\": \"随州市\" }, { \"value\": 422800, \"label\": \"恩施土家族苗族自治州\" }, { \"value\": 429000, \"label\": \"省直辖县级行政区划\" }] }, { \"value\": 430000, \"label\": \"湖南省\", \"children\": [{ \"value\": 430100, \"label\": \"长沙市\" }, { \"value\": 430200, \"label\": \"株洲市\" }, { \"value\": 430300, \"label\": \"湘潭市\" }, { \"value\": 430400, \"label\": \"衡阳市\" }, { \"value\": 430500, \"label\": \"邵阳市\" }, { \"value\": 430600, \"label\": \"岳阳市\" }, { \"value\": 430700, \"label\": \"常德市\" }, { \"value\": 430800, \"label\": \"张家界市\" }, { \"value\": 430900, \"label\": \"益阳市\" }, { \"value\": 431000, \"label\": \"郴州市\" }, { \"value\": 431100, \"label\": \"永州市\" }, { \"value\": 431200, \"label\": \"怀化市\" }, { \"value\": 431300, \"label\": \"娄底市\" }, { \"value\": 433100, \"label\": \"湘西土家族苗族自治州\" }] }, { \"value\": 440000, \"label\": \"广东省\", \"children\": [{ \"value\": 440100, \"label\": \"广州市\" }, { \"value\": 440200, \"label\": \"韶关市\" }, { \"value\": 440300, \"label\": \"深圳市\" }, { \"value\": 440400, \"label\": \"珠海市\" }, { \"value\": 440500, \"label\": \"汕头市\" }, { \"value\": 440600, \"label\": \"佛山市\" }, { \"value\": 440700, \"label\": \"江门市\" }, { \"value\": 440800, \"label\": \"湛江市\" }, { \"value\": 440900, \"label\": \"茂名市\" }, { \"value\": 441200, \"label\": \"肇庆市\" }, { \"value\": 441300, \"label\": \"惠州市\" }, { \"value\": 441400, \"label\": \"梅州市\" }, { \"value\": 441500, \"label\": \"汕尾市\" }, { \"value\": 441600, \"label\": \"河源市\" }, { \"value\": 441700, \"label\": \"阳江市\" }, { \"value\": 441800, \"label\": \"清远市\" }, { \"value\": 441900, \"label\": \"东莞市\" }, { \"value\": 442000, \"label\": \"中山市\" }, { \"value\": 445100, \"label\": \"潮州市\" }, { \"value\": 445200, \"label\": \"揭阳市\" }, { \"value\": 445300, \"label\": \"云浮市\" }] }, { \"value\": 450000, \"label\": \"广西壮族自治区\", \"children\": [{ \"value\": 450100, \"label\": \"南宁市\" }, { \"value\": 450200, \"label\": \"柳州市\" }, { \"value\": 450300, \"label\": \"桂林市\" }, { \"value\": 450400, \"label\": \"梧州市\" }, { \"value\": 450500, \"label\": \"北海市\" }, { \"value\": 450600, \"label\": \"防城港市\" }, { \"value\": 450700, \"label\": \"钦州市\" }, { \"value\": 450800, \"label\": \"贵港市\" }, { \"value\": 450900, \"label\": \"玉林市\" }, { \"value\": 451000, \"label\": \"百色市\" }, { \"value\": 451100, \"label\": \"贺州市\" }, { \"value\": 451200, \"label\": \"河池市\" }, { \"value\": 451300, \"label\": \"来宾市\" }, { \"value\": 451400, \"label\": \"崇左市\" }] }, { \"value\": 460000, \"label\": \"海南省\", \"children\": [{ \"value\": 460100, \"label\": \"海口市\" }, { \"value\": 460200, \"label\": \"三亚市\" }, { \"value\": 460300, \"label\": \"三沙市\" }, { \"value\": 460400, \"label\": \"儋州市\" }, { \"value\": 469000, \"label\": \"省直辖县级行政区划\" }] }, { \"value\": 500000, \"label\": \"重庆市\", \"children\": [{ \"value\": 500101, \"label\": \"万州区\" }, { \"value\": 500102, \"label\": \"涪陵区\" }, { \"value\": 500103, \"label\": \"渝中区\" }, { \"value\": 500104, \"label\": \"大渡口区\" }, { \"value\": 500105, \"label\": \"江北区\" }, { \"value\": 500106, \"label\": \"沙坪坝区\" }, { \"value\": 500107, \"label\": \"九龙坡区\" }, { \"value\": 500108, \"label\": \"南岸区\" }, { \"value\": 500109, \"label\": \"北碚区\" }, { \"value\": 500110, \"label\": \"綦江区\" }, { \"value\": 500111, \"label\": \"大足区\" }, { \"value\": 500112, \"label\": \"渝北区\" }, { \"value\": 500113, \"label\": \"巴南区\" }, { \"value\": 500114, \"label\": \"黔江区\" }, { \"value\": 500115, \"label\": \"长寿区\" }, { \"value\": 500116, \"label\": \"江津区\" }, { \"value\": 500117, \"label\": \"合川区\" }, { \"value\": 500118, \"label\": \"永川区\" }, { \"value\": 500119, \"label\": \"南川区\" }, { \"value\": 500120, \"label\": \"璧山区\" }, { \"value\": 500151, \"label\": \"铜梁区\" }, { \"value\": 500152, \"label\": \"潼南区\" }, { \"value\": 500153, \"label\": \"荣昌区\" }, { \"value\": 500154, \"label\": \"开州区\" }] }, { \"value\": 510000, \"label\": \"四川省\", \"children\": [{ \"value\": 510100, \"label\": \"成都市\" }, { \"value\": 510300, \"label\": \"自贡市\" }, { \"value\": 510400, \"label\": \"攀枝花市\" }, { \"value\": 510500, \"label\": \"泸州市\" }, { \"value\": 510600, \"label\": \"德阳市\" }, { \"value\": 510700, \"label\": \"绵阳市\" }, { \"value\": 510800, \"label\": \"广元市\" }, { \"value\": 510900, \"label\": \"遂宁市\" }, { \"value\": 511000, \"label\": \"内江市\" }, { \"value\": 511100, \"label\": \"乐山市\" }, { \"value\": 511300, \"label\": \"南充市\" }, { \"value\": 511400, \"label\": \"眉山市\" }, { \"value\": 511500, \"label\": \"宜宾市\" }, { \"value\": 511600, \"label\": \"广安市\" }, { \"value\": 511700, \"label\": \"达州市\" }, { \"value\": 511800, \"label\": \"雅安市\" }, { \"value\": 511900, \"label\": \"巴中市\" }, { \"value\": 512000, \"label\": \"资阳市\" }, { \"value\": 513200, \"label\": \"阿坝藏族羌族自治州\" }, { \"value\": 513300, \"label\": \"甘孜藏族自治州\" }, { \"value\": 513400, \"label\": \"凉山彝族自治州\" }] }, { \"value\": 520000, \"label\": \"贵州省\", \"children\": [{ \"value\": 520100, \"label\": \"贵阳市\" }, { \"value\": 520200, \"label\": \"六盘水市\" }, { \"value\": 520300, \"label\": \"遵义市\" }, { \"value\": 520400, \"label\": \"安顺市\" }, { \"value\": 520500, \"label\": \"毕节市\" }, { \"value\": 520600, \"label\": \"铜仁市\" }, { \"value\": 522300, \"label\": \"黔西南布依族苗族自治州\" }, { \"value\": 522600, \"label\": \"黔东南苗族侗族自治州\" }, { \"value\": 522700, \"label\": \"黔南布依族苗族自治州\" }] }, { \"value\": 530000, \"label\": \"云南省\", \"children\": [{ \"value\": 530100, \"label\": \"昆明市\" }, { \"value\": 530300, \"label\": \"曲靖市\" }, { \"value\": 530400, \"label\": \"玉溪市\" }, { \"value\": 530500, \"label\": \"保山市\" }, { \"value\": 530600, \"label\": \"昭通市\" }, { \"value\": 530700, \"label\": \"丽江市\" }, { \"value\": 530800, \"label\": \"普洱市\" }, { \"value\": 530900, \"label\": \"临沧市\" }, { \"value\": 532300, \"label\": \"楚雄彝族自治州\" }, { \"value\": 532500, \"label\": \"红河哈尼族彝族自治州\" }, { \"value\": 532600, \"label\": \"文山壮族苗族自治州\" }, { \"value\": 532800, \"label\": \"西双版纳傣族自治州\" }, { \"value\": 532900, \"label\": \"大理白族自治州\" }, { \"value\": 533100, \"label\": \"德宏傣族景颇族自治州\" }, { \"value\": 533300, \"label\": \"怒江傈僳族自治州\" }, { \"value\": 533400, \"label\": \"迪庆藏族自治州\" }] }, { \"value\": 540000, \"label\": \"西藏自治区\", \"children\": [{ \"value\": 540100, \"label\": \"拉萨市\" }, { \"value\": 540200, \"label\": \"日喀则市\" }, { \"value\": 540300, \"label\": \"昌都市\" }, { \"value\": 540400, \"label\": \"林芝市\" }, { \"value\": 540500, \"label\": \"山南市\" }, { \"value\": 542400, \"label\": \"那曲地区\" }, { \"value\": 542500, \"label\": \"阿里地区\" }] }, { \"value\": 610000, \"label\": \"陕西省\", \"children\": [{ \"value\": 610100, \"label\": \"西安市\" }, { \"value\": 610200, \"label\": \"铜川市\" }, { \"value\": 610300, \"label\": \"宝鸡市\" }, { \"value\": 610400, \"label\": \"咸阳市\" }, { \"value\": 610500, \"label\": \"渭南市\" }, { \"value\": 610600, \"label\": \"延安市\" }, { \"value\": 610700, \"label\": \"汉中市\" }, { \"value\": 610800, \"label\": \"榆林市\" }, { \"value\": 610900, \"label\": \"安康市\" }, { \"value\": 611000, \"label\": \"商洛市\" }] }, { \"value\": 620000, \"label\": \"甘肃省\", \"children\": [{ \"value\": 620100, \"label\": \"兰州市\" }, { \"value\": 620200, \"label\": \"嘉峪关市\" }, { \"value\": 620300, \"label\": \"金昌市\" }, { \"value\": 620400, \"label\": \"白银市\" }, { \"value\": 620500, \"label\": \"天水市\" }, { \"value\": 620600, \"label\": \"武威市\" }, { \"value\": 620700, \"label\": \"张掖市\" }, { \"value\": 620800, \"label\": \"平凉市\" }, { \"value\": 620900, \"label\": \"酒泉市\" }, { \"value\": 621000, \"label\": \"庆阳市\" }, { \"value\": 621100, \"label\": \"定西市\" }, { \"value\": 621200, \"label\": \"陇南市\" }, { \"value\": 622900, \"label\": \"临夏回族自治州\" }, { \"value\": 623000, \"label\": \"甘南藏族自治州\" }] }, { \"value\": 630000, \"label\": \"青海省\", \"children\": [{ \"value\": 630100, \"label\": \"西宁市\" }, { \"value\": 630200, \"label\": \"海东市\" }, { \"value\": 632200, \"label\": \"海北藏族自治州\" }, { \"value\": 632300, \"label\": \"黄南藏族自治州\" }, { \"value\": 632500, \"label\": \"海南藏族自治州\" }, { \"value\": 632600, \"label\": \"果洛藏族自治州\" }, { \"value\": 632700, \"label\": \"玉树藏族自治州\" }, { \"value\": 632800, \"label\": \"海西蒙古族藏族自治州\" }] }, { \"value\": 640000, \"label\": \"宁夏回族自治区\", \"children\": [{ \"value\": 640100, \"label\": \"银川市\" }, { \"value\": 640200, \"label\": \"石嘴山市\" }, { \"value\": 640300, \"label\": \"吴忠市\" }, { \"value\": 640400, \"label\": \"固原市\" }, { \"value\": 640500, \"label\": \"中卫市\" }] }, { \"value\": 650000, \"label\": \"新疆维吾尔自治区\", \"children\": [{ \"value\": 650100, \"label\": \"乌鲁木齐市\" }, { \"value\": 650200, \"label\": \"克拉玛依市\" }, { \"value\": 650400, \"label\": \"吐鲁番市\" }, { \"value\": 650500, \"label\": \"哈密市\" }, { \"value\": 652300, \"label\": \"昌吉回族自治州\" }, { \"value\": 652700, \"label\": \"博尔塔拉蒙古自治州\" }, { \"value\": 652800, \"label\": \"巴音郭楞蒙古自治州\" }, { \"value\": 652900, \"label\": \"阿克苏地区\" }, { \"value\": 653000, \"label\": \"克孜勒苏柯尔克孜自治州\" }, { \"value\": 653100, \"label\": \"喀什地区\" }, { \"value\": 653200, \"label\": \"和田地区\" }, { \"value\": 654000, \"label\": \"伊犁哈萨克自治州\" }, { \"value\": 654200, \"label\": \"塔城地区\" }, { \"value\": 654300, \"label\": \"阿勒泰地区\" }, { \"value\": 659000, \"label\": \"自治区直辖县级行政区划\" }] }, { \"value\": 710000, \"label\": \"台湾省\", \"children\": [{ \"value\": \"710100\", \"label\": \"台北市\" }, { \"value\": \"710200\", \"label\": \"高雄市\" }, { \"value\": \"710300\", \"label\": \"台南市\" }, { \"value\": \"710400\", \"label\": \"台中市\" }, { \"value\": \"710500\", \"label\": \"金门县\" }, { \"value\": \"710600\", \"label\": \"南投县\" }, { \"value\": \"710700\", \"label\": \"基隆市\" }, { \"value\": \"710800\", \"label\": \"新竹市\" }, { \"value\": \"710900\", \"label\": \"嘉义市\" }, { \"value\": \"711100\", \"label\": \"新北市\" }, { \"value\": \"711200\", \"label\": \"宜兰县\" }, { \"value\": \"711300\", \"label\": \"新竹县\" }, { \"value\": \"711400\", \"label\": \"桃园县\" }, { \"value\": \"711500\", \"label\": \"苗栗县\" }, { \"value\": \"711700\", \"label\": \"彰化县\" }, { \"value\": \"711900\", \"label\": \"嘉义县\" }, { \"value\": \"712100\", \"label\": \"云林县\" }, { \"value\": \"712400\", \"label\": \"屏东县\" }, { \"value\": \"712500\", \"label\": \"台东县\" }, { \"value\": \"712600\", \"label\": \"花莲县\" }, { \"value\": \"712700\", \"label\": \"澎湖县\" }] }, { \"value\": 810000, \"label\": \"香港特别行政区\", \"children\": [{ \"value\": \"810100\", \"label\": \"香港岛\" }, { \"value\": \"810200\", \"label\": \"九龙\" }, { \"value\": \"810300\", \"label\": \"新界\" }] }, { \"value\": 820000, \"label\": \"澳门特别行政区\", \"children\": [{ \"value\": \"820100\", \"label\": \"澳门半岛\" }, { \"value\": \"820200\", \"label\": \"氹仔岛\" }, { \"value\": \"820300\", \"label\": \"路环岛\" }] }];exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41\n");

/***/ }),

/***/ 5:
/*!*****************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/pages.json ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI1LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///5\n");

/***/ }),

/***/ 58:
/*!*****************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/utils/cos-wx-sdk-v5.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}!function (e, t) { true ? module.exports = t() : undefined;}(void 0, function () {return function (e) {function t(r) {if (n[r]) return n[r].exports;var o = n[r] = { i: r, l: !1, exports: {} };return e[r].call(o.exports, o, o.exports, t), o.l = !0, o.exports;}var n = {};return t.m = e, t.c = n, t.i = function (e) {return e;}, t.d = function (e, n, r) {t.o(e, n) || Object.defineProperty(e, n, { configurable: !1, enumerable: !0, get: r });}, t.n = function (e) {var n = e && e.__esModule ? function () {return e.default;} : function () {return e;};return t.d(n, \"a\", n), n;}, t.o = function (e, t) {return Object.prototype.hasOwnProperty.call(e, t);}, t.p = \"/Users/wonderswang/Documents/Project/cos-wx-sdk-v5/demo/lib\", t(t.s = 4);}([function (e, t, n) {\"use strict\";function r(e) {return encodeURIComponent(e).replace(/!/g, \"%21\").replace(/'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");}function o(e) {return u(e, function (e) {return \"object\" == typeof e ? o(e) : e;});}function i(e, t) {return c(t, function (n, r) {e[r] = t[r];}), e;}function a(e) {return e instanceof Array;}function s(e, t) {for (var n = !1, r = 0; r < e.length; r++) {if (t === e[r]) {n = !0;break;}}return n;}function c(e, t) {for (var n in e) {e.hasOwnProperty(n) && t(e[n], n);}}function u(e, t) {var n = a(e) ? [] : {};for (var r in e) {e.hasOwnProperty(r) && (n[r] = t(e[r], r));}return n;}function l(e, t) {var n = a(e),r = n ? [] : {};for (var o in e) {e.hasOwnProperty(o) && t(e[o], o) && (n ? r.push(e[o]) : r[o] = e[o]);}return r;}var d = n(8),f = n(6),h = n(10),p = n(7),m = n(5),g = m.btoa,y = function y(e) {e = e || {};var t = e.SecretId,n = e.SecretKey,i = (e.method || e.Method || \"get\").toLowerCase(),a = o(e.Query || e.params || {}),s = o(e.Headers || e.headers || {}),c = e.Pathname || \"/\" + (e.Key || \"\");if (!t) return console.error(__f__(\"missing param SecretId\", \" at utils\\\\cos-wx-sdk-v5.js:1\"));if (!n) return console.error(__f__(\"missing param SecretKey\", \" at utils\\\\cos-wx-sdk-v5.js:1\"));var u = function u(e) {var t = [];for (var n in e) {e.hasOwnProperty(n) && t.push(n);}return t.sort(function (e, t) {return e = e.toLowerCase(), t = t.toLowerCase(), e === t ? 0 : e > t ? 1 : -1;});},l = function l(e) {var t,n,o,i = [],a = u(e);for (t = 0; t < a.length; t++) {n = a[t], o = void 0 === e[n] || null === e[n] ? \"\" : \"\" + e[n], n = n.toLowerCase(), n = r(n), o = r(o) || \"\", i.push(n + \"=\" + o);}return i.join(\"&\");},d = Math.round(_(e.SystemClockOffset) / 1e3) - 1,h = d,p = e.Expires || e.expires;h += void 0 === p ? 900 : 1 * p || 0;var m = t,g = d + \";\" + h,y = d + \";\" + h,C = u(s).join(\";\").toLowerCase(),v = u(a).join(\";\").toLowerCase(),x = f.HmacSHA1(y, n).toString(),k = [i, c, l(a), l(s), \"\"].join(\"\\n\"),S = [\"sha1\", g, f.SHA1(k).toString(), \"\"].join(\"\\n\");return [\"q-sign-algorithm=sha1\", \"q-ak=\" + m, \"q-sign-time=\" + g, \"q-key-time=\" + y, \"q-header-list=\" + C, \"q-url-param-list=\" + v, \"q-signature=\" + f.HmacSHA1(S, x).toString()].join(\"&\");},C = function C() {},v = function v(e) {var t = {};for (var n in e) {e.hasOwnProperty(n) && void 0 !== e[n] && null !== e[n] && (t[n] = e[n]);}return t;},x = function x(e, t) {var n,r = new FileReader();FileReader.prototype.readAsBinaryString ? (n = FileReader.prototype.readAsBinaryString, r.onload = function () {t(this.result);}) : FileReader.prototype.readAsArrayBuffer ? n = function n(e) {var n = \"\",r = new FileReader();r.onload = function (e) {for (var o = new Uint8Array(r.result), i = o.byteLength, a = 0; a < i; a++) {n += String.fromCharCode(o[a]);}t(n);}, r.readAsArrayBuffer(e);} : console.error(__f__(\"FileReader not support readAsBinaryString\", \" at utils\\\\cos-wx-sdk-v5.js:1\")), n.call(r, e);},k = function k(e, t) {x(e, function (e) {var n = d(e, !0);t(null, n);});},S = function S(e) {var t,n,r,o = \"\";for (t = 0, n = e.length / 2; t < n; t++) {r = parseInt(e[2 * t] + e[2 * t + 1], 16), o += String.fromCharCode(r);}return g(o);},A = function A() {var e = function e() {return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);};return e() + e() + \"-\" + e() + \"-\" + e() + \"-\" + e() + \"-\" + e() + e() + e();},b = function b(e, t) {var n = t.Bucket,r = t.Region,o = t.Key;if (e.indexOf(\"Bucket\") > -1 || \"deleteMultipleObject\" === e || \"multipartList\" === e || \"listObjectVersions\" === e) {if (!n) return \"Bucket\";if (!r) return \"Region\";} else if (e.indexOf(\"Object\") > -1 || e.indexOf(\"multipart\") > -1 || \"sliceUploadFile\" === e || \"abortUploadTask\" === e) {if (!n) return \"Bucket\";if (!r) return \"Region\";if (!o) return \"Key\";}return !1;},R = function R(e, t) {if (t = i({}, t), \"getAuth\" !== e && \"getV4Auth\" !== e && \"getObjectUrl\" !== e) {var n = t.Headers || {};if (t && \"object\" == typeof t) {!function () {for (var e in t) {t.hasOwnProperty(e) && e.indexOf(\"x-cos-\") > -1 && (n[e] = t[e]);}}();var r = { \"x-cos-mfa\": \"MFA\", \"Content-MD5\": \"ContentMD5\", \"Content-Length\": \"ContentLength\", \"Content-Type\": \"ContentType\", Expect: \"Expect\", Expires: \"Expires\", \"Cache-Control\": \"CacheControl\", \"Content-Disposition\": \"ContentDisposition\", \"Content-Encoding\": \"ContentEncoding\", Range: \"Range\", \"If-Modified-Since\": \"IfModifiedSince\", \"If-Unmodified-Since\": \"IfUnmodifiedSince\", \"If-Match\": \"IfMatch\", \"If-None-Match\": \"IfNoneMatch\", \"x-cos-copy-source\": \"CopySource\", \"x-cos-copy-source-Range\": \"CopySourceRange\", \"x-cos-metadata-directive\": \"MetadataDirective\", \"x-cos-copy-source-If-Modified-Since\": \"CopySourceIfModifiedSince\", \"x-cos-copy-source-If-Unmodified-Since\": \"CopySourceIfUnmodifiedSince\", \"x-cos-copy-source-If-Match\": \"CopySourceIfMatch\", \"x-cos-copy-source-If-None-Match\": \"CopySourceIfNoneMatch\", \"x-cos-acl\": \"ACL\", \"x-cos-grant-read\": \"GrantRead\", \"x-cos-grant-write\": \"GrantWrite\", \"x-cos-grant-full-control\": \"GrantFullControl\", \"x-cos-grant-read-acp\": \"GrantReadAcp\", \"x-cos-grant-write-acp\": \"GrantWriteAcp\", \"x-cos-storage-class\": \"StorageClass\", \"x-cos-server-side-encryption-customer-algorithm\": \"SSECustomerAlgorithm\", \"x-cos-server-side-encryption-customer-key\": \"SSECustomerKey\", \"x-cos-server-side-encryption-customer-key-MD5\": \"SSECustomerKeyMD5\", \"x-cos-server-side-encryption\": \"ServerSideEncryption\", \"x-cos-server-side-encryption-cos-kms-key-id\": \"SSEKMSKeyId\", \"x-cos-server-side-encryption-context\": \"SSEContext\" };N.each(r, function (e, r) {void 0 !== t[e] && (n[r] = t[e]);}), t.Headers = v(n);}}return t;},T = function T(e, t) {return function (n, r) {\"function\" == typeof n && (r = n, n = {}), n = R(e, n);var o = function o(e) {return e && e.headers && (e.headers[\"x-cos-version-id\"] && (e.VersionId = e.headers[\"x-cos-version-id\"]), e.headers[\"x-cos-delete-marker\"] && (e.DeleteMarker = e.headers[\"x-cos-delete-marker\"])), e;},i = function i(e, t) {r && r(o(e), o(t));};if (\"getService\" !== e && \"abortUploadTask\" !== e) {var a;if (a = b(e, n)) return void i({ error: \"missing param \" + a });if (n.Region) {if (n.Region.indexOf(\"cos.\") > -1) return void i({ error: 'param Region should not be start with \"cos.\"' });if (!/^([a-z\\d-]+)$/.test(n.Region)) return void i({ error: \"Region format error.\" });this.options.CompatibilityMode || -1 !== n.Region.indexOf(\"-\") || \"yfb\" === n.Region || \"default\" === n.Region || console.warn(__f__(\"warning: param Region format error, find help here: https://cloud.tencent.com/document/product/436/6224\", \" at utils\\\\cos-wx-sdk-v5.js:1\"));}if (n.Bucket) {if (!/^([a-z\\d-]+)-(\\d+)$/.test(n.Bucket)) if (n.AppId) n.Bucket = n.Bucket + \"-\" + n.AppId;else {if (!this.options.AppId) return void i({ error: 'Bucket should format as \"test-1250000000\".' });n.Bucket = n.Bucket + \"-\" + this.options.AppId;}n.AppId && (console.warn(__f__('warning: AppId has been deprecated, Please put it at the end of parameter Bucket(E.g Bucket:\"test-1250000000\" ).', \" at utils\\\\cos-wx-sdk-v5.js:1\")), delete n.AppId);}}var s = t.call(this, n, i);if (\"getAuth\" === e || \"getObjectUrl\" === e) return s;};},E = function E(e, t) {function n() {if (o = 0, t && \"function\" == typeof t) {r = Date.now();var n,i = Math.max(0, Math.round((s - a) / ((r - c) / 1e3) * 100) / 100);n = 0 === s && 0 === e ? 1 : Math.round(s / e * 100) / 100 || 0, c = r, a = s;try {t({ loaded: s, total: e, speed: i, percent: n });} catch (e) {}}}var r,o,i = this,a = 0,s = 0,c = Date.now();return function (t, r) {if (t && (s = t.loaded, e = t.total), r) clearTimeout(o), n();else {if (o) return;o = setTimeout(n, i.options.ProgressInterval);}};},w = function w(e, t, n) {var r;if (\"string\" == typeof t.Body && (t.Body = new Blob([t.Body], { type: \"text/plain\" })), !t.Body || !(t.Body instanceof Blob || \"[object File]\" === t.Body.toString() || \"[object Blob]\" === t.Body.toString())) return void n({ error: \"params body format error, Only allow File|Blob|String.\" });r = t.Body.size, t.ContentLength = r, n(null, r);},_ = function _(e) {return Date.now() + (e || 0);},N = { noop: C, formatParams: R, apiWrapper: T, xml2json: h, json2xml: p, md5: d, clearKey: v, getFileMd5: k, binaryBase64: S, extend: i, isArray: a, isInArray: s, each: c, map: u, filter: l, clone: o, uuid: A, camSafeUrlEncode: r, throttleOnProgress: E, getFileSize: w, getSkewTime: _, getAuth: y, isBrowser: !0 };N.fileSlice = function (e, t, n) {return e.slice ? e.slice(t, n) : e.mozSlice ? e.mozSlice(t, n) : e.webkitSlice ? e.webkitSlice(t, n) : void 0;}, N.getFileUUID = function (e, t) {return e.name && e.size && e.lastModifiedDate && t ? N.md5([e.name, e.size, e.lastModifiedDate, t].join(\"::\")) : null;}, N.getBodyMd5 = function (e, t, n) {n = n || C, e && \"string\" == typeof t ? n(N.md5(t, !0)) : n();}, e.exports = N;}, function (e, t) {function n(e, t) {for (var n in e) {t[n] = e[n];}}function r(e, t) {function r() {}var o = e.prototype;if (Object.create) {var i = Object.create(t.prototype);o.__proto__ = i;}o instanceof t || (r.prototype = t.prototype, r = new r(), n(o, r), e.prototype = o = r), o.constructor != e && (\"function\" != typeof e && console.error(__f__(\"unknow Class:\" + e, \" at utils\\\\cos-wx-sdk-v5.js:1\")), o.constructor = e);}function o(e, t) {if (t instanceof Error) var n = t;else n = this, Error.call(this, oe[e]), this.message = oe[e], Error.captureStackTrace && Error.captureStackTrace(this, o);return n.code = e, t && (this.message = this.message + \": \" + t), n;}function i() {}function a(e, t) {this._node = e, this._refresh = t, s(this);}function s(e) {var t = e._node._inc || e._node.ownerDocument._inc;if (e._inc != t) {var r = e._refresh(e._node);K(e, \"length\", r.length), n(r, e), e._inc = t;}}function c() {}function u(e, t) {for (var n = e.length; n--;) {if (e[n] === t) return n;}}function l(e, t, n, r) {if (r ? t[u(t, r)] = n : t[t.length++] = n, e) {n.ownerElement = e;var o = e.ownerDocument;o && (r && C(o, e, r), y(o, e, n));}}function d(e, t, n) {var r = u(t, n);if (!(r >= 0)) throw o(ae, new Error(e.tagName + \"@\" + n));for (var i = t.length - 1; r < i;) {t[r] = t[++r];}if (t.length = i, e) {var a = e.ownerDocument;a && (C(a, e, n), n.ownerElement = null);}}function f(e) {if (this._features = {}, e) for (var t in e) {this._features = e[t];}}function h() {}function p(e) {return \"<\" == e && \"&lt;\" || \">\" == e && \"&gt;\" || \"&\" == e && \"&amp;\" || '\"' == e && \"&quot;\" || \"&#\" + e.charCodeAt() + \";\";}function m(e, t) {if (t(e)) return !0;if (e = e.firstChild) do {if (m(e, t)) return !0;} while (e = e.nextSibling);}function g() {}function y(e, t, n) {e && e._inc++, \"http://www.w3.org/2000/xmlns/\" == n.namespaceURI && (t._nsMap[n.prefix ? n.localName : \"\"] = n.value);}function C(e, t, n, r) {e && e._inc++, \"http://www.w3.org/2000/xmlns/\" == n.namespaceURI && delete t._nsMap[n.prefix ? n.localName : \"\"];}function v(e, t, n) {if (e && e._inc) {e._inc++;var r = t.childNodes;if (n) r[r.length++] = n;else {for (var o = t.firstChild, i = 0; o;) {r[i++] = o, o = o.nextSibling;}r.length = i;}}}function x(e, t) {var n = t.previousSibling,r = t.nextSibling;return n ? n.nextSibling = r : e.firstChild = r, r ? r.previousSibling = n : e.lastChild = n, v(e.ownerDocument, e), t;}function k(e, t, n) {var r = t.parentNode;if (r && r.removeChild(t), t.nodeType === te) {var o = t.firstChild;if (null == o) return t;var i = t.lastChild;} else o = i = t;var a = n ? n.previousSibling : e.lastChild;o.previousSibling = a, i.nextSibling = n, a ? a.nextSibling = o : e.firstChild = o, null == n ? e.lastChild = i : n.previousSibling = i;do {o.parentNode = e;} while (o !== i && (o = o.nextSibling));return v(e.ownerDocument || e, e), t.nodeType == te && (t.firstChild = t.lastChild = null), t;}function S(e, t) {var n = t.parentNode;if (n) {var r = e.lastChild;n.removeChild(t);var r = e.lastChild;}var r = e.lastChild;return t.parentNode = e, t.previousSibling = r, t.nextSibling = null, r ? r.nextSibling = t : e.firstChild = t, e.lastChild = t, v(e.ownerDocument, e, t), t;}function A() {this._nsMap = {};}function b() {}function R() {}function T() {}function E() {}function w() {}function _() {}function N() {}function B() {}function D() {}function O() {}function P() {}function I() {}function M(e, t) {var n = [],r = 9 == this.nodeType ? this.documentElement : this,o = r.prefix,i = r.namespaceURI;if (i && null == o) {var o = r.lookupPrefix(i);if (null == o) var a = [{ namespace: i, prefix: null }];}return F(this, n, e, t, a), n.join(\"\");}function L(e, t, n) {var r = e.prefix || \"\",o = e.namespaceURI;if (!r && !o) return !1;if (\"xml\" === r && \"http://www.w3.org/XML/1998/namespace\" === o || \"http://www.w3.org/2000/xmlns/\" == o) return !1;for (var i = n.length; i--;) {var a = n[i];if (a.prefix == r) return a.namespace != o;}return !0;}function F(e, t, n, r, o) {if (r) {if (!(e = r(e))) return;if (\"string\" == typeof e) return void t.push(e);}switch (e.nodeType) {case q:o || (o = []);var i = (o.length, e.attributes),a = i.length,s = e.firstChild,c = e.tagName;n = z === e.namespaceURI || n, t.push(\"<\", c);for (var u = 0; u < a; u++) {var l = i.item(u);\"xmlns\" == l.prefix ? o.push({ prefix: l.localName, namespace: l.value }) : \"xmlns\" == l.nodeName && o.push({ prefix: \"\", namespace: l.value });}for (var u = 0; u < a; u++) {var l = i.item(u);if (L(l, n, o)) {var d = l.prefix || \"\",f = l.namespaceURI,h = d ? \" xmlns:\" + d : \" xmlns\";t.push(h, '=\"', f, '\"'), o.push({ prefix: d, namespace: f });}F(l, t, n, r, o);}if (L(e, n, o)) {var d = e.prefix || \"\",f = e.namespaceURI,h = d ? \" xmlns:\" + d : \" xmlns\";t.push(h, '=\"', f, '\"'), o.push({ prefix: d, namespace: f });}if (s || n && !/^(?:meta|link|img|br|hr|input)$/i.test(c)) {if (t.push(\">\"), n && /^script$/i.test(c)) for (; s;) {s.data ? t.push(s.data) : F(s, t, n, r, o), s = s.nextSibling;} else for (; s;) {F(s, t, n, r, o), s = s.nextSibling;}t.push(\"</\", c, \">\");} else t.push(\"/>\");return;case J:case te:for (var s = e.firstChild; s;) {F(s, t, n, r, o), s = s.nextSibling;}return;case V:return t.push(\" \", e.name, '=\"', e.value.replace(/[<&\"]/g, p), '\"');case X:return t.push(e.data.replace(/[<&]/g, p));case $:return t.push(\"<![CDATA[\", e.data, \"]]>\");case Y:return t.push(\"\\x3c!--\", e.data, \"--\\x3e\");case ee:var m = e.publicId,g = e.systemId;if (t.push(\"<!DOCTYPE \", e.name), m) t.push(' PUBLIC \"', m), g && \".\" != g && t.push('\" \"', g), t.push('\">');else if (g && \".\" != g) t.push(' SYSTEM \"', g, '\">');else {var y = e.internalSubset;y && t.push(\" [\", y, \"]\"), t.push(\">\");}return;case Z:return t.push(\"<?\", e.target, \" \", e.data, \"?>\");case W:return t.push(\"&\", e.nodeName, \";\");default:t.push(\"??\", e.nodeName);}}function U(e, t, n) {var r;switch (t.nodeType) {case q:r = t.cloneNode(!1), r.ownerDocument = e;case te:break;case V:n = !0;}if (r || (r = t.cloneNode(!1)), r.ownerDocument = e, r.parentNode = null, n) for (var o = t.firstChild; o;) {r.appendChild(U(e, o, n)), o = o.nextSibling;}return r;}function j(e, t, n) {var r = new t.constructor();for (var o in t) {var a = t[o];\"object\" != typeof a && a != r[o] && (r[o] = a);}switch (t.childNodes && (r.childNodes = new i()), r.ownerDocument = e, r.nodeType) {case q:var s = t.attributes,u = r.attributes = new c(),l = s.length;u._ownerElement = r;for (var d = 0; d < l; d++) {r.setAttributeNode(j(e, s.item(d), !0));}break;case V:n = !0;}if (n) for (var f = t.firstChild; f;) {r.appendChild(j(e, f, n)), f = f.nextSibling;}return r;}function K(e, t, n) {e[t] = n;}function H(e) {switch (e.nodeType) {case q:case te:var t = [];for (e = e.firstChild; e;) {7 !== e.nodeType && 8 !== e.nodeType && t.push(H(e)), e = e.nextSibling;}return t.join(\"\");default:return e.nodeValue;}}var z = \"http://www.w3.org/1999/xhtml\",G = {},q = G.ELEMENT_NODE = 1,V = G.ATTRIBUTE_NODE = 2,X = G.TEXT_NODE = 3,$ = G.CDATA_SECTION_NODE = 4,W = G.ENTITY_REFERENCE_NODE = 5,Q = G.ENTITY_NODE = 6,Z = G.PROCESSING_INSTRUCTION_NODE = 7,Y = G.COMMENT_NODE = 8,J = G.DOCUMENT_NODE = 9,ee = G.DOCUMENT_TYPE_NODE = 10,te = G.DOCUMENT_FRAGMENT_NODE = 11,ne = G.NOTATION_NODE = 12,re = {},oe = {},ie = (re.INDEX_SIZE_ERR = (oe[1] = \"Index size error\", 1), re.DOMSTRING_SIZE_ERR = (oe[2] = \"DOMString size error\", 2), re.HIERARCHY_REQUEST_ERR = (oe[3] = \"Hierarchy request error\", 3)),ae = (re.WRONG_DOCUMENT_ERR = (oe[4] = \"Wrong document\", 4), re.INVALID_CHARACTER_ERR = (oe[5] = \"Invalid character\", 5), re.NO_DATA_ALLOWED_ERR = (oe[6] = \"No data allowed\", 6), re.NO_MODIFICATION_ALLOWED_ERR = (oe[7] = \"No modification allowed\", 7), re.NOT_FOUND_ERR = (oe[8] = \"Not found\", 8)),se = (re.NOT_SUPPORTED_ERR = (oe[9] = \"Not supported\", 9), re.INUSE_ATTRIBUTE_ERR = (oe[10] = \"Attribute in use\", 10));re.INVALID_STATE_ERR = (oe[11] = \"Invalid state\", 11), re.SYNTAX_ERR = (oe[12] = \"Syntax error\", 12), re.INVALID_MODIFICATION_ERR = (oe[13] = \"Invalid modification\", 13), re.NAMESPACE_ERR = (oe[14] = \"Invalid namespace\", 14), re.INVALID_ACCESS_ERR = (oe[15] = \"Invalid access\", 15);o.prototype = Error.prototype, n(re, o), i.prototype = { length: 0, item: function item(e) {return this[e] || null;}, toString: function toString(e, t) {for (var n = [], r = 0; r < this.length; r++) {F(this[r], n, e, t);}return n.join(\"\");} }, a.prototype.item = function (e) {return s(this), this[e];}, r(a, i), c.prototype = { length: 0, item: i.prototype.item, getNamedItem: function getNamedItem(e) {for (var t = this.length; t--;) {var n = this[t];if (n.nodeName == e) return n;}}, setNamedItem: function setNamedItem(e) {var t = e.ownerElement;if (t && t != this._ownerElement) throw new o(se);var n = this.getNamedItem(e.nodeName);return l(this._ownerElement, this, e, n), n;}, setNamedItemNS: function setNamedItemNS(e) {var t,n = e.ownerElement;if (n && n != this._ownerElement) throw new o(se);return t = this.getNamedItemNS(e.namespaceURI, e.localName), l(this._ownerElement, this, e, t), t;}, removeNamedItem: function removeNamedItem(e) {var t = this.getNamedItem(e);return d(this._ownerElement, this, t), t;}, removeNamedItemNS: function removeNamedItemNS(e, t) {var n = this.getNamedItemNS(e, t);return d(this._ownerElement, this, n), n;}, getNamedItemNS: function getNamedItemNS(e, t) {for (var n = this.length; n--;) {var r = this[n];if (r.localName == t && r.namespaceURI == e) return r;}return null;} }, f.prototype = { hasFeature: function hasFeature(e, t) {var n = this._features[e.toLowerCase()];return !(!n || t && !(t in n));}, createDocument: function createDocument(e, t, n) {var r = new g();if (r.implementation = this, r.childNodes = new i(), r.doctype = n, n && r.appendChild(n), t) {var o = r.createElementNS(e, t);r.appendChild(o);}return r;}, createDocumentType: function createDocumentType(e, t, n) {var r = new _();return r.name = e, r.nodeName = e, r.publicId = t, r.systemId = n, r;} }, h.prototype = { firstChild: null, lastChild: null, previousSibling: null, nextSibling: null, attributes: null, parentNode: null, childNodes: null, ownerDocument: null, nodeValue: null, namespaceURI: null, prefix: null, localName: null, insertBefore: function insertBefore(e, t) {return k(this, e, t);}, replaceChild: function replaceChild(e, t) {this.insertBefore(e, t), t && this.removeChild(t);}, removeChild: function removeChild(e) {return x(this, e);}, appendChild: function appendChild(e) {return this.insertBefore(e, null);}, hasChildNodes: function hasChildNodes() {return null != this.firstChild;}, cloneNode: function cloneNode(e) {return j(this.ownerDocument || this, this, e);}, normalize: function normalize() {for (var e = this.firstChild; e;) {var t = e.nextSibling;t && t.nodeType == X && e.nodeType == X ? (this.removeChild(t), e.appendData(t.data)) : (e.normalize(), e = t);}}, isSupported: function isSupported(e, t) {return this.ownerDocument.implementation.hasFeature(e, t);}, hasAttributes: function hasAttributes() {return this.attributes.length > 0;}, lookupPrefix: function lookupPrefix(e) {for (var t = this; t;) {var n = t._nsMap;if (n) for (var r in n) {if (n[r] == e) return r;}t = t.nodeType == V ? t.ownerDocument : t.parentNode;}return null;}, lookupNamespaceURI: function lookupNamespaceURI(e) {for (var t = this; t;) {var n = t._nsMap;if (n && e in n) return n[e];t = t.nodeType == V ? t.ownerDocument : t.parentNode;}return null;}, isDefaultNamespace: function isDefaultNamespace(e) {return null == this.lookupPrefix(e);} }, n(G, h), n(G, h.prototype), g.prototype = { nodeName: \"#document\", nodeType: J, doctype: null, documentElement: null, _inc: 1, insertBefore: function insertBefore(e, t) {if (e.nodeType == te) {for (var n = e.firstChild; n;) {var r = n.nextSibling;this.insertBefore(n, t), n = r;}return e;}return null == this.documentElement && e.nodeType == q && (this.documentElement = e), k(this, e, t), e.ownerDocument = this, e;}, removeChild: function removeChild(e) {return this.documentElement == e && (this.documentElement = null), x(this, e);}, importNode: function importNode(e, t) {return U(this, e, t);}, getElementById: function getElementById(e) {var t = null;return m(this.documentElement, function (n) {if (n.nodeType == q && n.getAttribute(\"id\") == e) return t = n, !0;}), t;}, createElement: function createElement(e) {var t = new A();return t.ownerDocument = this, t.nodeName = e, t.tagName = e, t.childNodes = new i(), (t.attributes = new c())._ownerElement = t, t;}, createDocumentFragment: function createDocumentFragment() {var e = new O();return e.ownerDocument = this, e.childNodes = new i(), e;}, createTextNode: function createTextNode(e) {var t = new T();return t.ownerDocument = this, t.appendData(e), t;}, createComment: function createComment(e) {var t = new E();return t.ownerDocument = this, t.appendData(e), t;}, createCDATASection: function createCDATASection(e) {var t = new w();return t.ownerDocument = this, t.appendData(e), t;}, createProcessingInstruction: function createProcessingInstruction(e, t) {var n = new P();return n.ownerDocument = this, n.tagName = n.target = e, n.nodeValue = n.data = t, n;}, createAttribute: function createAttribute(e) {var t = new b();return t.ownerDocument = this, t.name = e, t.nodeName = e, t.localName = e, t.specified = !0, t;}, createEntityReference: function createEntityReference(e) {var t = new D();return t.ownerDocument = this, t.nodeName = e, t;}, createElementNS: function createElementNS(e, t) {var n = new A(),r = t.split(\":\"),o = n.attributes = new c();return n.childNodes = new i(), n.ownerDocument = this, n.nodeName = t, n.tagName = t, n.namespaceURI = e, 2 == r.length ? (n.prefix = r[0], n.localName = r[1]) : n.localName = t, o._ownerElement = n, n;}, createAttributeNS: function createAttributeNS(e, t) {var n = new b(),r = t.split(\":\");return n.ownerDocument = this, n.nodeName = t, n.name = t, n.namespaceURI = e, n.specified = !0, 2 == r.length ? (n.prefix = r[0], n.localName = r[1]) : n.localName = t, n;} }, r(g, h), A.prototype = { nodeType: q, hasAttribute: function hasAttribute(e) {return null != this.getAttributeNode(e);}, getAttribute: function getAttribute(e) {var t = this.getAttributeNode(e);return t && t.value || \"\";}, getAttributeNode: function getAttributeNode(e) {return this.attributes.getNamedItem(e);}, setAttribute: function setAttribute(e, t) {var n = this.ownerDocument.createAttribute(e);n.value = n.nodeValue = \"\" + t, this.setAttributeNode(n);}, removeAttribute: function removeAttribute(e) {var t = this.getAttributeNode(e);t && this.removeAttributeNode(t);}, appendChild: function appendChild(e) {return e.nodeType === te ? this.insertBefore(e, null) : S(this, e);}, setAttributeNode: function setAttributeNode(e) {return this.attributes.setNamedItem(e);}, setAttributeNodeNS: function setAttributeNodeNS(e) {return this.attributes.setNamedItemNS(e);}, removeAttributeNode: function removeAttributeNode(e) {return this.attributes.removeNamedItem(e.nodeName);}, removeAttributeNS: function removeAttributeNS(e, t) {var n = this.getAttributeNodeNS(e, t);n && this.removeAttributeNode(n);}, hasAttributeNS: function hasAttributeNS(e, t) {return null != this.getAttributeNodeNS(e, t);}, getAttributeNS: function getAttributeNS(e, t) {var n = this.getAttributeNodeNS(e, t);return n && n.value || \"\";}, setAttributeNS: function setAttributeNS(e, t, n) {var r = this.ownerDocument.createAttributeNS(e, t);r.value = r.nodeValue = \"\" + n, this.setAttributeNode(r);}, getAttributeNodeNS: function getAttributeNodeNS(e, t) {return this.attributes.getNamedItemNS(e, t);}, getElementsByTagName: function getElementsByTagName(e) {return new a(this, function (t) {var n = [];return m(t, function (r) {r === t || r.nodeType != q || \"*\" !== e && r.tagName != e || n.push(r);}), n;});}, getElementsByTagNameNS: function getElementsByTagNameNS(e, t) {return new a(this, function (n) {var r = [];return m(n, function (o) {o === n || o.nodeType !== q || \"*\" !== e && o.namespaceURI !== e || \"*\" !== t && o.localName != t || r.push(o);}), r;});} }, g.prototype.getElementsByTagName = A.prototype.getElementsByTagName, g.prototype.getElementsByTagNameNS = A.prototype.getElementsByTagNameNS, r(A, h), b.prototype.nodeType = V, r(b, h), R.prototype = { data: \"\", substringData: function substringData(e, t) {return this.data.substring(e, e + t);}, appendData: function appendData(e) {e = this.data + e, this.nodeValue = this.data = e, this.length = e.length;}, insertData: function insertData(e, t) {this.replaceData(e, 0, t);}, appendChild: function appendChild(e) {throw new Error(oe[ie]);}, deleteData: function deleteData(e, t) {this.replaceData(e, t, \"\");}, replaceData: function replaceData(e, t, n) {n = this.data.substring(0, e) + n + this.data.substring(e + t), this.nodeValue = this.data = n, this.length = n.length;} }, r(R, h), T.prototype = { nodeName: \"#text\", nodeType: X, splitText: function splitText(e) {var t = this.data,n = t.substring(e);t = t.substring(0, e), this.data = this.nodeValue = t, this.length = t.length;var r = this.ownerDocument.createTextNode(n);return this.parentNode && this.parentNode.insertBefore(r, this.nextSibling), r;} }, r(T, R), E.prototype = { nodeName: \"#comment\", nodeType: Y }, r(E, R), w.prototype = { nodeName: \"#cdata-section\", nodeType: $ }, r(w, R), _.prototype.nodeType = ee, r(_, h), N.prototype.nodeType = ne, r(N, h), B.prototype.nodeType = Q, r(B, h), D.prototype.nodeType = W, r(D, h), O.prototype.nodeName = \"#document-fragment\", O.prototype.nodeType = te, r(O, h), P.prototype.nodeType = Z, r(P, h), I.prototype.serializeToString = function (e, t, n) {return M.call(e, t, n);}, h.prototype.toString = M;try {Object.defineProperty && (Object.defineProperty(a.prototype, \"length\", { get: function get() {return s(this), this.$$length;} }), Object.defineProperty(h.prototype, \"textContent\", { get: function get() {return H(this);}, set: function set(e) {switch (this.nodeType) {case q:case te:for (; this.firstChild;) {this.removeChild(this.firstChild);}(e || String(e)) && this.appendChild(this.ownerDocument.createTextNode(e));break;default:this.data = e, this.value = e, this.nodeValue = e;}} }), K = function K(e, t, n) {e[\"$$\" + t] = n;});} catch (e) {}t.DOMImplementation = f, t.XMLSerializer = I;}, function (e, t) {var n = function n(e) {var t = {},n = function n(e) {return !t[e] && (t[e] = []), t[e];};e.on = function (e, t) {n(e).push(t);}, e.off = function (e, t) {for (var r = n(e), o = r.length - 1; o >= 0; o--) {t === r[o] && r.splice(o, 1);}}, e.emit = function (e, t) {for (var r = n(e).map(function (e) {return e;}), o = 0; o < r.length; o++) {r[o](t);}};},r = function r() {n(this);};e.exports.init = n, e.exports.EventProxy = r;}, function (e, t, n) {\"use strict\";var _c;var r = n(0),o = n(2),i = n(16),a = n(15),s = n(13),c = (_c = { SecretId: \"\", SecretKey: \"\", XCosSecurityToken: \"\", ChunkRetryTimes: 2, FileParallelLimit: 3, ChunkParallelLimit: 3 }, _defineProperty(_c, \"ChunkRetryTimes\", 3), _defineProperty(_c, \"ChunkSize\", 1048576), _defineProperty(_c, \"SliceSize\", 1048576), _defineProperty(_c, \"CopyChunkParallelLimit\", 20), _defineProperty(_c, \"CopyChunkSize\", 10485760), _defineProperty(_c, \"CopySliceSize\", 10485760), _defineProperty(_c, \"MaxPartNumber\", 1e4), _defineProperty(_c, \"ProgressInterval\", 1e3), _defineProperty(_c, \"UploadQueueSize\", 1e4), _defineProperty(_c, \"Domain\", \"\"), _defineProperty(_c, \"ServiceDomain\", \"\"), _defineProperty(_c, \"Protocol\", \"\"), _defineProperty(_c, \"CompatibilityMode\", !1), _defineProperty(_c, \"ForcePathStyle\", !1), _defineProperty(_c, \"CorrectClockSkew\", !0), _defineProperty(_c, \"SystemClockOffset\", 0), _c),u = function u(e) {this.options = r.extend(r.clone(c), e || {}), this.options.FileParallelLimit = Math.max(1, this.options.FileParallelLimit), this.options.ChunkParallelLimit = Math.max(1, this.options.ChunkParallelLimit), this.options.ChunkRetryTimes = Math.max(0, this.options.ChunkRetryTimes), this.options.ChunkSize = Math.max(1048576, this.options.ChunkSize), this.options.CopyChunkParallelLimit = Math.max(1, this.options.CopyChunkParallelLimit), this.options.CopyChunkSize = Math.max(1048576, this.options.CopyChunkSize), this.options.CopySliceSize = Math.max(0, this.options.CopySliceSize), this.options.MaxPartNumber = Math.max(1024, Math.min(1e4, this.options.MaxPartNumber)), this.options.Timeout = Math.max(0, this.options.Timeout), this.options.AppId && console.warn(__f__('warning: AppId has been deprecated, Please put it at the end of parameter Bucket(E.g: \"test-1250000000\").', \" at utils\\\\cos-wx-sdk-v5.js:1\")), o.init(this), i.init(this);};a.init(u, i), s.init(u, i), u.getAuthorization = r.getAuth, u.version = \"0.7.7\", e.exports = u;}, function (e, t, n) {var r = n(3);e.exports = r;}, function (e, t) {var n = function (e) {e = e || {};var t,n = e.Base64,r = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",o = function (e) {for (var t = {}, n = 0, r = e.length; n < r; n++) {t[e.charAt(n)] = n;}return t;}(r),i = String.fromCharCode,a = function a(e) {if (e.length < 2) {var t = e.charCodeAt(0);return t < 128 ? e : t < 2048 ? i(192 | t >>> 6) + i(128 | 63 & t) : i(224 | t >>> 12 & 15) + i(128 | t >>> 6 & 63) + i(128 | 63 & t);}var t = 65536 + 1024 * (e.charCodeAt(0) - 55296) + (e.charCodeAt(1) - 56320);return i(240 | t >>> 18 & 7) + i(128 | t >>> 12 & 63) + i(128 | t >>> 6 & 63) + i(128 | 63 & t);},s = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g,c = function c(e) {return e.replace(s, a);},u = function u(e) {var t = [0, 2, 1][e.length % 3],n = e.charCodeAt(0) << 16 | (e.length > 1 ? e.charCodeAt(1) : 0) << 8 | (e.length > 2 ? e.charCodeAt(2) : 0);return [r.charAt(n >>> 18), r.charAt(n >>> 12 & 63), t >= 2 ? \"=\" : r.charAt(n >>> 6 & 63), t >= 1 ? \"=\" : r.charAt(63 & n)].join(\"\");},l = e.btoa ? function (t) {return e.btoa(t);} : function (e) {return e.replace(/[\\s\\S]{1,3}/g, u);},d = t ? function (e) {return (e.constructor === t.constructor ? e : new t(e)).toString(\"base64\");} : function (e) {return l(c(e));},f = function f(e, t) {return t ? d(String(e)).replace(/[+\\/]/g, function (e) {return \"+\" == e ? \"-\" : \"_\";}).replace(/=/g, \"\") : d(String(e));},h = function h(e) {return f(e, !0);},p = new RegExp([\"[À-ß][-¿]\", \"[à-ï][-¿]{2}\", \"[ð-÷][-¿]{3}\"].join(\"|\"), \"g\"),m = function m(e) {switch (e.length) {case 4:var t = (7 & e.charCodeAt(0)) << 18 | (63 & e.charCodeAt(1)) << 12 | (63 & e.charCodeAt(2)) << 6 | 63 & e.charCodeAt(3),n = t - 65536;return i(55296 + (n >>> 10)) + i(56320 + (1023 & n));case 3:return i((15 & e.charCodeAt(0)) << 12 | (63 & e.charCodeAt(1)) << 6 | 63 & e.charCodeAt(2));default:return i((31 & e.charCodeAt(0)) << 6 | 63 & e.charCodeAt(1));}},g = function g(e) {return e.replace(p, m);},y = function y(e) {var t = e.length,n = t % 4,r = (t > 0 ? o[e.charAt(0)] << 18 : 0) | (t > 1 ? o[e.charAt(1)] << 12 : 0) | (t > 2 ? o[e.charAt(2)] << 6 : 0) | (t > 3 ? o[e.charAt(3)] : 0),a = [i(r >>> 16), i(r >>> 8 & 255), i(255 & r)];return a.length -= [0, 0, 2, 1][n], a.join(\"\");},C = e.atob ? function (t) {return e.atob(t);} : function (e) {return e.replace(/[\\s\\S]{1,4}/g, y);},v = t ? function (e) {return (e.constructor === t.constructor ? e : new t(e, \"base64\")).toString();} : function (e) {return g(C(e));},x = function x(e) {return v(String(e).replace(/[-_]/g, function (e) {return \"-\" == e ? \"+\" : \"/\";}).replace(/[^A-Za-z0-9\\+\\/]/g, \"\"));};return { VERSION: \"2.1.9\", atob: C, btoa: l, fromBase64: x, toBase64: f, utob: c, encode: f, encodeURI: h, btou: g, decode: x, noConflict: function noConflict() {var t = e.Base64;return e.Base64 = n, t;} };}();e.exports = n;}, function (e, t) {var n = n || function (e, t) {var n = {},r = n.lib = {},o = function o() {},i = r.Base = { extend: function extend(e) {o.prototype = this;var t = new o();return e && t.mixIn(e), t.hasOwnProperty(\"init\") || (t.init = function () {t.$super.init.apply(this, arguments);}), t.init.prototype = t, t.$super = this, t;}, create: function create() {var e = this.extend();return e.init.apply(e, arguments), e;}, init: function init() {}, mixIn: function mixIn(e) {for (var t in e) {e.hasOwnProperty(t) && (this[t] = e[t]);}e.hasOwnProperty(\"toString\") && (this.toString = e.toString);}, clone: function clone() {return this.init.prototype.extend(this);} },a = r.WordArray = i.extend({ init: function init(e, t) {e = this.words = e || [], this.sigBytes = void 0 != t ? t : 4 * e.length;}, toString: function toString(e) {return (e || c).stringify(this);}, concat: function concat(e) {var t = this.words,n = e.words,r = this.sigBytes;if (e = e.sigBytes, this.clamp(), r % 4) for (var o = 0; o < e; o++) {t[r + o >>> 2] |= (n[o >>> 2] >>> 24 - o % 4 * 8 & 255) << 24 - (r + o) % 4 * 8;} else if (65535 < n.length) for (o = 0; o < e; o += 4) {t[r + o >>> 2] = n[o >>> 2];} else t.push.apply(t, n);return this.sigBytes += e, this;}, clamp: function clamp() {var t = this.words,n = this.sigBytes;t[n >>> 2] &= 4294967295 << 32 - n % 4 * 8, t.length = e.ceil(n / 4);}, clone: function clone() {var e = i.clone.call(this);return e.words = this.words.slice(0), e;}, random: function random(t) {for (var n = [], r = 0; r < t; r += 4) {n.push(4294967296 * e.random() | 0);}return new a.init(n, t);} }),s = n.enc = {},c = s.Hex = { stringify: function stringify(e) {var t = e.words;e = e.sigBytes;for (var n = [], r = 0; r < e; r++) {var o = t[r >>> 2] >>> 24 - r % 4 * 8 & 255;n.push((o >>> 4).toString(16)), n.push((15 & o).toString(16));}return n.join(\"\");}, parse: function parse(e) {for (var t = e.length, n = [], r = 0; r < t; r += 2) {n[r >>> 3] |= parseInt(e.substr(r, 2), 16) << 24 - r % 8 * 4;}return new a.init(n, t / 2);} },u = s.Latin1 = { stringify: function stringify(e) {var t = e.words;e = e.sigBytes;for (var n = [], r = 0; r < e; r++) {n.push(String.fromCharCode(t[r >>> 2] >>> 24 - r % 4 * 8 & 255));}return n.join(\"\");}, parse: function parse(e) {for (var t = e.length, n = [], r = 0; r < t; r++) {n[r >>> 2] |= (255 & e.charCodeAt(r)) << 24 - r % 4 * 8;}return new a.init(n, t);} },l = s.Utf8 = { stringify: function stringify(e) {try {return decodeURIComponent(escape(u.stringify(e)));} catch (e) {throw Error(\"Malformed UTF-8 data\");}}, parse: function parse(e) {return u.parse(unescape(encodeURIComponent(e)));} },d = r.BufferedBlockAlgorithm = i.extend({ reset: function reset() {this._data = new a.init(), this._nDataBytes = 0;}, _append: function _append(e) {\"string\" == typeof e && (e = l.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;}, _process: function _process(t) {var n = this._data,r = n.words,o = n.sigBytes,i = this.blockSize,s = o / (4 * i),s = t ? e.ceil(s) : e.max((0 | s) - this._minBufferSize, 0);if (t = s * i, o = e.min(4 * t, o), t) {for (var c = 0; c < t; c += i) {this._doProcessBlock(r, c);}c = r.splice(0, t), n.sigBytes -= o;}return new a.init(c, o);}, clone: function clone() {var e = i.clone.call(this);return e._data = this._data.clone(), e;}, _minBufferSize: 0 });r.Hasher = d.extend({ cfg: i.extend(), init: function init(e) {this.cfg = this.cfg.extend(e), this.reset();}, reset: function reset() {d.reset.call(this), this._doReset();}, update: function update(e) {return this._append(e), this._process(), this;}, finalize: function finalize(e) {return e && this._append(e), this._doFinalize();}, blockSize: 16, _createHelper: function _createHelper(e) {return function (t, n) {return new e.init(n).finalize(t);};}, _createHmacHelper: function _createHmacHelper(e) {return function (t, n) {return new f.HMAC.init(e, n).finalize(t);};} });var f = n.algo = {};return n;}(Math);!function () {var e = n,t = e.lib,r = t.WordArray,o = t.Hasher,i = [],t = e.algo.SHA1 = o.extend({ _doReset: function _doReset() {this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);}, _doProcessBlock: function _doProcessBlock(e, t) {for (var n = this._hash.words, r = n[0], o = n[1], a = n[2], s = n[3], c = n[4], u = 0; 80 > u; u++) {if (16 > u) i[u] = 0 | e[t + u];else {var l = i[u - 3] ^ i[u - 8] ^ i[u - 14] ^ i[u - 16];i[u] = l << 1 | l >>> 31;}l = (r << 5 | r >>> 27) + c + i[u], l = 20 > u ? l + (1518500249 + (o & a | ~o & s)) : 40 > u ? l + (1859775393 + (o ^ a ^ s)) : 60 > u ? l + ((o & a | o & s | a & s) - 1894007588) : l + ((o ^ a ^ s) - 899497514), c = s, s = a, a = o << 30 | o >>> 2, o = r, r = l;}n[0] = n[0] + r | 0, n[1] = n[1] + o | 0, n[2] = n[2] + a | 0, n[3] = n[3] + s | 0, n[4] = n[4] + c | 0;}, _doFinalize: function _doFinalize() {var e = this._data,t = e.words,n = 8 * this._nDataBytes,r = 8 * e.sigBytes;return t[r >>> 5] |= 128 << 24 - r % 32, t[14 + (r + 64 >>> 9 << 4)] = Math.floor(n / 4294967296), t[15 + (r + 64 >>> 9 << 4)] = n, e.sigBytes = 4 * t.length, this._process(), this._hash;}, clone: function clone() {var e = o.clone.call(this);return e._hash = this._hash.clone(), e;} });e.SHA1 = o._createHelper(t), e.HmacSHA1 = o._createHmacHelper(t);}(), function () {var e = n,t = e.enc.Utf8;e.algo.HMAC = e.lib.Base.extend({ init: function init(e, n) {e = this._hasher = new e.init(), \"string\" == typeof n && (n = t.parse(n));var r = e.blockSize,o = 4 * r;n.sigBytes > o && (n = e.finalize(n)), n.clamp();for (var i = this._oKey = n.clone(), a = this._iKey = n.clone(), s = i.words, c = a.words, u = 0; u < r; u++) {s[u] ^= 1549556828, c[u] ^= 909522486;}i.sigBytes = a.sigBytes = o, this.reset();}, reset: function reset() {var e = this._hasher;e.reset(), e.update(this._iKey);}, update: function update(e) {return this._hasher.update(e), this;}, finalize: function finalize(e) {var t = this._hasher;return e = t.finalize(e), t.reset(), t.finalize(this._oKey.clone().concat(e));} });}(), function () {var e = n,t = e.lib,r = t.WordArray,o = e.enc;o.Base64 = { stringify: function stringify(e) {var t = e.words,n = e.sigBytes,r = this._map;e.clamp();for (var o = [], i = 0; i < n; i += 3) {for (var a = t[i >>> 2] >>> 24 - i % 4 * 8 & 255, s = t[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255, c = t[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255, u = a << 16 | s << 8 | c, l = 0; l < 4 && i + .75 * l < n; l++) {o.push(r.charAt(u >>> 6 * (3 - l) & 63));}}var d = r.charAt(64);if (d) for (; o.length % 4;) {o.push(d);}return o.join(\"\");}, parse: function parse(e) {var t = e.length,n = this._map,o = n.charAt(64);if (o) {var i = e.indexOf(o);-1 != i && (t = i);}for (var a = [], s = 0, c = 0; c < t; c++) {if (c % 4) {var u = n.indexOf(e.charAt(c - 1)) << c % 4 * 2,l = n.indexOf(e.charAt(c)) >>> 6 - c % 4 * 2;a[s >>> 2] |= (u | l) << 24 - s % 4 * 8, s++;}}return r.create(a, s);}, _map: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\" };}(), e.exports = n;}, function (e, t) {function n(e) {return (\"\" + e).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\").replace(o, \"\");}var r = new RegExp(\"^([^a-zA-Z_À-ÖØ-öø-ÿͰ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿿、-퟿豈-﷏ﷰ-�])|^((x|X)(m|M)(l|L))|([^a-zA-Z_À-ÖØ-öø-ÿͰ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿿、-퟿豈-﷏ﷰ-�-.0-9·̀-ͯ‿⁀])\", \"g\"),o = /[^\\x09\\x0A\\x0D\\x20-\\xFF\\x85\\xA0-\\uD7FF\\uE000-\\uFDCF\\uFDE0-\\uFFFD]/gm,i = function i(e) {var t = [];if (e instanceof Object) for (var n in e) {e.hasOwnProperty(n) && t.push(n);}return t;},a = function a(e, t) {var o = function o(e, n, _o, i, a) {var s = void 0 !== t.indent ? t.indent : \"\\t\",c = t.prettyPrint ? \"\\n\" + new Array(i).join(s) : \"\";t.removeIllegalNameCharacters && (e = e.replace(r, \"_\"));var u = [c, \"<\", e, _o || \"\"];return n && n.length > 0 ? (u.push(\">\"), u.push(n), a && u.push(c), u.push(\"</\"), u.push(e), u.push(\">\")) : u.push(\"/>\"), u.join(\"\");};return function e(r, a, s) {var c = typeof r;switch ((Array.isArray ? Array.isArray(r) : r instanceof Array) ? c = \"array\" : r instanceof Date && (c = \"date\"), c) {case \"array\":var u = [];return r.map(function (t) {u.push(e(t, 1, s + 1));}), t.prettyPrint && u.push(\"\\n\"), u.join(\"\");case \"date\":return r.toJSON ? r.toJSON() : r + \"\";case \"object\":var l = [];for (var d in r) {if (r[d] instanceof Array) for (var f in r[d]) {l.push(o(d, e(r[d][f], 0, s + 1), null, s + 1, i(r[d][f]).length));} else l.push(o(d, e(r[d], 0, s + 1), null, s + 1));}return t.prettyPrint && l.length > 0 && l.push(\"\\n\"), l.join(\"\");case \"function\":return r();default:return t.escape ? n(r) : \"\" + r;}}(e, 0, 0);},s = function s(e) {var t = ['<?xml version=\"1.0\" encoding=\"UTF-8\"'];return e && t.push(' standalone=\"yes\"'), t.push(\"?>\"), t.join(\"\");},c = function c(e, t) {if (t || (t = { xmlHeader: { standalone: !0 }, prettyPrint: !0, indent: \"  \" }), \"string\" == typeof e) try {e = JSON.parse(e.toString());} catch (e) {return !1;}var n = \"\",r = \"\";return t && (\"object\" == typeof t ? (t.xmlHeader && (n = s(!!t.xmlHeader.standalone)), void 0 !== t.docType && (r = \"<!DOCTYPE \" + t.docType + \">\")) : n = s()), t = t || {}, [n, t.prettyPrint && r ? \"\\n\" : \"\", r, a(e, t)].join(\"\").replace(/\\n{2,}/g, \"\\n\").replace(/\\s+$/g, \"\");};e.exports = c;}, function (e, t) {var n = function n(e) {function t(e, t) {return e << t | e >>> 32 - t;}function n(e, t) {var n, r, o, i, a;return o = 2147483648 & e, i = 2147483648 & t, n = 1073741824 & e, r = 1073741824 & t, a = (1073741823 & e) + (1073741823 & t), n & r ? 2147483648 ^ a ^ o ^ i : n | r ? 1073741824 & a ? 3221225472 ^ a ^ o ^ i : 1073741824 ^ a ^ o ^ i : a ^ o ^ i;}function r(e, t, n) {return e & t | ~e & n;}function o(e, t, n) {return e & n | t & ~n;}function i(e, t, n) {return e ^ t ^ n;}function a(e, t, n) {return t ^ (e | ~n);}function s(e, o, i, a, s, c, u) {return e = n(e, n(n(r(o, i, a), s), u)), n(t(e, c), o);}function c(e, r, i, a, s, c, u) {return e = n(e, n(n(o(r, i, a), s), u)), n(t(e, c), r);}function u(e, r, o, a, s, c, u) {return e = n(e, n(n(i(r, o, a), s), u)), n(t(e, c), r);}function l(e, r, o, i, s, c, u) {return e = n(e, n(n(a(r, o, i), s), u)), n(t(e, c), r);}function d(e) {var t,n,r = \"\",o = \"\";for (n = 0; n <= 3; n++) {t = e >>> 8 * n & 255, o = \"0\" + t.toString(16), r += o.substr(o.length - 2, 2);}return r;}var f,h,p,m,g,y,C,v,x,k = Array();for (e = function (e) {e = e.replace(/\\r\\n/g, \"\\n\");for (var t = \"\", n = 0; n < e.length; n++) {var r = e.charCodeAt(n);r < 128 ? t += String.fromCharCode(r) : r > 127 && r < 2048 ? (t += String.fromCharCode(r >> 6 | 192), t += String.fromCharCode(63 & r | 128)) : (t += String.fromCharCode(r >> 12 | 224), t += String.fromCharCode(r >> 6 & 63 | 128), t += String.fromCharCode(63 & r | 128));}return t;}(e), k = function (e) {for (var t, n = e.length, r = n + 8, o = (r - r % 64) / 64, i = 16 * (o + 1), a = Array(i - 1), s = 0, c = 0; c < n;) {t = (c - c % 4) / 4, s = c % 4 * 8, a[t] = a[t] | e.charCodeAt(c) << s, c++;}return t = (c - c % 4) / 4, s = c % 4 * 8, a[t] = a[t] | 128 << s, a[i - 2] = n << 3, a[i - 1] = n >>> 29, a;}(e), y = 1732584193, C = 4023233417, v = 2562383102, x = 271733878, f = 0; f < k.length; f += 16) {h = y, p = C, m = v, g = x, y = s(y, C, v, x, k[f + 0], 7, 3614090360), x = s(x, y, C, v, k[f + 1], 12, 3905402710), v = s(v, x, y, C, k[f + 2], 17, 606105819), C = s(C, v, x, y, k[f + 3], 22, 3250441966), y = s(y, C, v, x, k[f + 4], 7, 4118548399), x = s(x, y, C, v, k[f + 5], 12, 1200080426), v = s(v, x, y, C, k[f + 6], 17, 2821735955), C = s(C, v, x, y, k[f + 7], 22, 4249261313), y = s(y, C, v, x, k[f + 8], 7, 1770035416), x = s(x, y, C, v, k[f + 9], 12, 2336552879), v = s(v, x, y, C, k[f + 10], 17, 4294925233), C = s(C, v, x, y, k[f + 11], 22, 2304563134), y = s(y, C, v, x, k[f + 12], 7, 1804603682), x = s(x, y, C, v, k[f + 13], 12, 4254626195), v = s(v, x, y, C, k[f + 14], 17, 2792965006), C = s(C, v, x, y, k[f + 15], 22, 1236535329), y = c(y, C, v, x, k[f + 1], 5, 4129170786), x = c(x, y, C, v, k[f + 6], 9, 3225465664), v = c(v, x, y, C, k[f + 11], 14, 643717713), C = c(C, v, x, y, k[f + 0], 20, 3921069994), y = c(y, C, v, x, k[f + 5], 5, 3593408605), x = c(x, y, C, v, k[f + 10], 9, 38016083), v = c(v, x, y, C, k[f + 15], 14, 3634488961), C = c(C, v, x, y, k[f + 4], 20, 3889429448), y = c(y, C, v, x, k[f + 9], 5, 568446438), x = c(x, y, C, v, k[f + 14], 9, 3275163606), v = c(v, x, y, C, k[f + 3], 14, 4107603335), C = c(C, v, x, y, k[f + 8], 20, 1163531501), y = c(y, C, v, x, k[f + 13], 5, 2850285829), x = c(x, y, C, v, k[f + 2], 9, 4243563512), v = c(v, x, y, C, k[f + 7], 14, 1735328473), C = c(C, v, x, y, k[f + 12], 20, 2368359562), y = u(y, C, v, x, k[f + 5], 4, 4294588738), x = u(x, y, C, v, k[f + 8], 11, 2272392833), v = u(v, x, y, C, k[f + 11], 16, 1839030562), C = u(C, v, x, y, k[f + 14], 23, 4259657740), y = u(y, C, v, x, k[f + 1], 4, 2763975236), x = u(x, y, C, v, k[f + 4], 11, 1272893353), v = u(v, x, y, C, k[f + 7], 16, 4139469664), C = u(C, v, x, y, k[f + 10], 23, 3200236656), y = u(y, C, v, x, k[f + 13], 4, 681279174), x = u(x, y, C, v, k[f + 0], 11, 3936430074), v = u(v, x, y, C, k[f + 3], 16, 3572445317), C = u(C, v, x, y, k[f + 6], 23, 76029189), y = u(y, C, v, x, k[f + 9], 4, 3654602809), x = u(x, y, C, v, k[f + 12], 11, 3873151461), v = u(v, x, y, C, k[f + 15], 16, 530742520), C = u(C, v, x, y, k[f + 2], 23, 3299628645), y = l(y, C, v, x, k[f + 0], 6, 4096336452), x = l(x, y, C, v, k[f + 7], 10, 1126891415), v = l(v, x, y, C, k[f + 14], 15, 2878612391), C = l(C, v, x, y, k[f + 5], 21, 4237533241), y = l(y, C, v, x, k[f + 12], 6, 1700485571), x = l(x, y, C, v, k[f + 3], 10, 2399980690), v = l(v, x, y, C, k[f + 10], 15, 4293915773), C = l(C, v, x, y, k[f + 1], 21, 2240044497), y = l(y, C, v, x, k[f + 8], 6, 1873313359), x = l(x, y, C, v, k[f + 15], 10, 4264355552), v = l(v, x, y, C, k[f + 6], 15, 2734768916), C = l(C, v, x, y, k[f + 13], 21, 1309151649), y = l(y, C, v, x, k[f + 4], 6, 4149444226), x = l(x, y, C, v, k[f + 11], 10, 3174756917), v = l(v, x, y, C, k[f + 2], 15, 718787259), C = l(C, v, x, y, k[f + 9], 21, 3951481745), y = n(y, h), C = n(C, p), v = n(v, m), x = n(x, g);}return (d(y) + d(C) + d(v) + d(x)).toLowerCase();};e.exports = n;}, function (e, t) {var n = function n(e) {var t,n,r,o = [],i = Object.keys(e);for (t = 0; t < i.length; t++) {n = i[t], r = e[n] || \"\", o.push(n + \"=\" + encodeURIComponent(r));}return o.join(\"&\");},r = function r(e, t) {var r,o = e.filePath,i = e.headers || {},a = e.url,s = e.method,c = e.onProgress,u = function u(e, n) {t(e, { statusCode: n.statusCode, headers: n.header }, n.data);};if (o) {var l,d = a.match(/^(https?:\\/\\/[^\\/]+\\/)([^\\/]*\\/?)(.*)$/);e.pathStyle ? (l = decodeURIComponent(d[3] || \"\"), a = d[1] + d[2]) : (l = decodeURIComponent(d[2] + d[3] || \"\"), a = d[1]);var f = { key: l, success_action_status: 200, Signature: i.Authorization },h = [\"Cache-Control\", \"Content-Type\", \"Content-Disposition\", \"Content-Encoding\", \"Expires\", \"x-cos-storage-class\", \"x-cos-security-token\"];for (var p in e.headers) {e.headers.hasOwnProperty(p) && (p.indexOf(\"x-cos-meta-\") > -1 || h.indexOf(p) > -1) && (f[p] = e.headers[p]);}i[\"x-cos-acl\"] && (f.acl = i[\"x-cos-acl\"]), !f[\"Content-Type\"] && (f[\"Content-Type\"] = \"\");var m = {};r = wx.uploadFile({ url: a, method: s, name: \"file\", filePath: o, formData: f, success: function success(e) {!e.header && (e.header = m), u(null, e);}, fail: function fail(e) {u(e.errMsg, e);} }), r.onHeadersReceived && r.onHeadersReceived(function (e) {m = e.header;}), r.onProgressUpdate(function (e) {c({ loaded: e.totalBytesSent, total: e.totalBytesExpectedToSend, progress: e.progress / 100 });});} else {var g = e.qs && n(e.qs) || \"\";g && (a += (a.indexOf(\"?\") > -1 ? \"&\" : \"?\") + g), i[\"Content-Length\"] && delete i[\"Content-Length\"], wx.request({ url: a, method: s, header: i, dataType: \"text\", data: e.body, success: function success(e) {u(null, e);}, fail: function fail(e) {u(e.errMsg, e);} });}return r;};e.exports = r;}, function (e, t, n) {var r = n(11).DOMParser,o = function o(e) {\"use strict\";function t(e) {var t = e.localName;return null == t && (t = e.baseName), null != t && \"\" != t || (t = e.nodeName), t;}function n(e) {return e.prefix;}function o(e) {return \"string\" == typeof e ? e.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\") : e;}function i(e, t, n, r) {for (var o = 0; o < e.length; o++) {var i = e[o];if (\"string\" == typeof i) {if (i == r) break;} else if (i instanceof RegExp) {if (i.test(r)) break;} else if (\"function\" == typeof i && i(t, n, r)) break;}return o != e.length;}function a(t, n, r) {switch (e.arrayAccessForm) {case \"property\":t[n] instanceof Array ? t[n + \"_asArray\"] = t[n] : t[n + \"_asArray\"] = [t[n]];}!(t[n] instanceof Array) && e.arrayAccessFormPaths.length > 0 && i(e.arrayAccessFormPaths, t, n, r) && (t[n] = [t[n]]);}function s(e) {var t = e.split(/[-T:+Z]/g),n = new Date(t[0], t[1] - 1, t[2]),r = t[5].split(\".\");if (n.setHours(t[3], t[4], r[0]), r.length > 1 && n.setMilliseconds(r[1]), t[6] && t[7]) {var o = 60 * t[6] + Number(t[7]);o = 0 + (\"-\" == (/\\d\\d-\\d\\d:\\d\\d$/.test(e) ? \"-\" : \"+\") ? -1 * o : o), n.setMinutes(n.getMinutes() - o - n.getTimezoneOffset());} else -1 !== e.indexOf(\"Z\", e.length - 1) && (n = new Date(Date.UTC(n.getFullYear(), n.getMonth(), n.getDate(), n.getHours(), n.getMinutes(), n.getSeconds(), n.getMilliseconds())));return n;}function c(t, n, r) {if (e.datetimeAccessFormPaths.length > 0) {var o = r.split(\".#\")[0];return i(e.datetimeAccessFormPaths, t, n, o) ? s(t) : t;}return t;}function u(t, n, r, o) {return !(n == A.ELEMENT_NODE && e.xmlElementsFilter.length > 0) || i(e.xmlElementsFilter, t, r, o);}function l(r, o) {if (r.nodeType == A.DOCUMENT_NODE) {for (var i = new Object(), s = r.childNodes, d = 0; d < s.length; d++) {var f = s.item(d);if (f.nodeType == A.ELEMENT_NODE) {var h = t(f);i[h] = l(f, h);}}return i;}if (r.nodeType == A.ELEMENT_NODE) {var i = new Object();i.__cnt = 0;for (var s = r.childNodes, d = 0; d < s.length; d++) {var f = s.item(d),h = t(f);if (f.nodeType != A.COMMENT_NODE) {var p = o + \".\" + h;u(i, f.nodeType, h, p) && (i.__cnt++, null == i[h] ? (i[h] = l(f, p), a(i, h, p)) : (null != i[h] && (i[h] instanceof Array || (i[h] = [i[h]], a(i, h, p))), i[h][i[h].length] = l(f, p)));}}for (var m = 0; m < r.attributes.length; m++) {var g = r.attributes.item(m);i.__cnt++, i[e.attributePrefix + g.name] = g.value;}var y = n(r);return null != y && \"\" != y && (i.__cnt++, i.__prefix = y), null != i[\"#text\"] && (i.__text = i[\"#text\"], i.__text instanceof Array && (i.__text = i.__text.join(\"\\n\")), e.stripWhitespaces && (i.__text = i.__text.trim()), delete i[\"#text\"], \"property\" == e.arrayAccessForm && delete i[\"#text_asArray\"], i.__text = c(i.__text, h, o + \".\" + h)), null != i[\"#cdata-section\"] && (i.__cdata = i[\"#cdata-section\"], delete i[\"#cdata-section\"], \"property\" == e.arrayAccessForm && delete i[\"#cdata-section_asArray\"]), 0 == i.__cnt && \"text\" == e.emptyNodeForm ? i = \"\" : 1 == i.__cnt && null != i.__text ? i = i.__text : 1 != i.__cnt || null == i.__cdata || e.keepCData ? i.__cnt > 1 && null != i.__text && e.skipEmptyTextNodesForObj && (e.stripWhitespaces && \"\" == i.__text || \"\" == i.__text.trim()) && delete i.__text : i = i.__cdata, delete i.__cnt, !e.enableToStringFunc || null == i.__text && null == i.__cdata || (i.toString = function () {return (null != this.__text ? this.__text : \"\") + (null != this.__cdata ? this.__cdata : \"\");}), i;}if (r.nodeType == A.TEXT_NODE || r.nodeType == A.CDATA_SECTION_NODE) return r.nodeValue;}function d(t, n, r, i) {var a = \"<\" + (null != t && null != t.__prefix ? t.__prefix + \":\" : \"\") + n;if (null != r) for (var s = 0; s < r.length; s++) {var c = r[s],u = t[c];e.escapeMode && (u = o(u)), a += \" \" + c.substr(e.attributePrefix.length) + \"=\", e.useDoubleQuotes ? a += '\"' + u + '\"' : a += \"'\" + u + \"'\";}return a += i ? \"/>\" : \">\";}function f(e, t) {return \"</\" + (null != e.__prefix ? e.__prefix + \":\" : \"\") + t + \">\";}function h(e, t) {return -1 !== e.indexOf(t, e.length - t.length);}function p(t, n) {return !!(\"property\" == e.arrayAccessForm && h(n.toString(), \"_asArray\") || 0 == n.toString().indexOf(e.attributePrefix) || 0 == n.toString().indexOf(\"__\") || t[n] instanceof Function);}function m(e) {var t = 0;if (e instanceof Object) for (var n in e) {p(e, n) || t++;}return t;}function g(t, n, r) {return 0 == e.jsonPropertiesFilter.length || \"\" == r || i(e.jsonPropertiesFilter, t, n, r);}function y(t) {var n = [];if (t instanceof Object) for (var r in t) {-1 == r.toString().indexOf(\"__\") && 0 == r.toString().indexOf(e.attributePrefix) && n.push(r);}return n;}function C(t) {var n = \"\";return null != t.__cdata && (n += \"<![CDATA[\" + t.__cdata + \"]]>\"), null != t.__text && (e.escapeMode ? n += o(t.__text) : n += t.__text), n;}function v(t) {var n = \"\";return t instanceof Object ? n += C(t) : null != t && (e.escapeMode ? n += o(t) : n += t), n;}function x(e, t) {return \"\" === e ? t : e + \".\" + t;}function k(e, t, n, r) {var o = \"\";if (0 == e.length) o += d(e, t, n, !0);else for (var i = 0; i < e.length; i++) {o += d(e[i], t, y(e[i]), !1), o += S(e[i], x(r, t)), o += f(e[i], t);}return o;}function S(e, t) {var n = \"\";if (m(e) > 0) for (var r in e) {if (!p(e, r) && (\"\" == t || g(e, r, x(t, r)))) {var o = e[r],i = y(o);if (null == o || void 0 == o) n += d(o, r, i, !0);else if (o instanceof Object) {if (o instanceof Array) n += k(o, r, i, t);else if (o instanceof Date) n += d(o, r, i, !1), n += o.toISOString(), n += f(o, r);else {var a = m(o);a > 0 || null != o.__text || null != o.__cdata ? (n += d(o, r, i, !1), n += S(o, x(t, r)), n += f(o, r)) : n += d(o, r, i, !0);}} else n += d(o, r, i, !1), n += v(o), n += f(o, r);}}return n += v(e);}e = e || {}, function () {void 0 === e.escapeMode && (e.escapeMode = !0), e.attributePrefix = e.attributePrefix || \"_\", e.arrayAccessForm = e.arrayAccessForm || \"none\", e.emptyNodeForm = e.emptyNodeForm || \"text\", void 0 === e.enableToStringFunc && (e.enableToStringFunc = !0), e.arrayAccessFormPaths = e.arrayAccessFormPaths || [], void 0 === e.skipEmptyTextNodesForObj && (e.skipEmptyTextNodesForObj = !0), void 0 === e.stripWhitespaces && (e.stripWhitespaces = !0), e.datetimeAccessFormPaths = e.datetimeAccessFormPaths || [], void 0 === e.useDoubleQuotes && (e.useDoubleQuotes = !1), e.xmlElementsFilter = e.xmlElementsFilter || [], e.jsonPropertiesFilter = e.jsonPropertiesFilter || [], void 0 === e.keepCData && (e.keepCData = !1);}();var A = { ELEMENT_NODE: 1, TEXT_NODE: 3, CDATA_SECTION_NODE: 4, COMMENT_NODE: 8, DOCUMENT_NODE: 9 };this.parseXmlString = function (e) {if (void 0 === e) return null;var t;if (r) {var n = new r(),o = null;try {o = n.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0].namespaceURI;} catch (e) {o = null;}try {t = n.parseFromString(e, \"text/xml\"), null != o && t.getElementsByTagNameNS(o, \"parsererror\").length > 0 && (t = null);} catch (e) {t = null;}} else 0 == e.indexOf(\"<?\") && (e = e.substr(e.indexOf(\"?>\") + 2)), t = new ActiveXObject(\"Microsoft.XMLDOM\"), t.async = \"false\", t.loadXML(e);return t;}, this.asArray = function (e) {return void 0 === e || null == e ? [] : e instanceof Array ? e : [e];}, this.toXmlDateTime = function (e) {return e instanceof Date ? e.toISOString() : \"number\" == typeof e ? new Date(e).toISOString() : null;}, this.asDateTime = function (e) {return \"string\" == typeof e ? s(e) : e;}, this.xml2json = function (e) {return l(e);}, this.xml_str2json = function (e) {var t = this.parseXmlString(e);return null != t ? this.xml2json(t) : null;}, this.json2xml_str = function (e) {return S(e, \"\");}, this.json2xml = function (e) {var t = this.json2xml_str(e);return this.parseXmlString(t);}, this.getVersion = function () {return \"1.2.0\";};},i = function i(e) {if (!e) return null;var t = new r(),n = t.parseFromString(e, \"text/xml\"),i = new o(),a = i.xml2json(n);return a.html && a.getElementsByTagName(\"parsererror\").length ? null : a;};e.exports = i;}, function (e, t, n) {function r(e) {this.options = e || { locator: {} };}function o(e, t, n) {function r(t) {var r = e[t];!r && a && (r = 2 == e.length ? function (n) {e(t, n);} : e), o[t] = r && function (e) {r(\"[xmldom \" + t + \"]\\t\" + e + s(n));} || function () {};}if (!e) {if (t instanceof i) return t;e = t;}var o = {},a = e instanceof Function;return n = n || {}, r(\"warning\"), r(\"error\"), r(\"fatalError\"), o;}function i() {this.cdata = !1;}function a(e, t) {t.lineNumber = e.lineNumber, t.columnNumber = e.columnNumber;}function s(e) {if (e) return \"\\n@\" + (e.systemId || \"\") + \"#[line:\" + e.lineNumber + \",col:\" + e.columnNumber + \"]\";}function c(e, t, n) {return \"string\" == typeof e ? e.substr(t, n) : e.length >= t + n || t ? new java.lang.String(e, t, n) + \"\" : e;}function u(e, t) {e.currentElement ? e.currentElement.appendChild(t) : e.doc.appendChild(t);}r.prototype.parseFromString = function (e, t) {var n = this.options,r = new l(),a = n.domBuilder || new i(),s = n.errorHandler,c = n.locator,u = n.xmlns || {},d = { lt: \"<\", gt: \">\", amp: \"&\", quot: '\"', apos: \"'\" };return c && a.setDocumentLocator(c), r.errorHandler = o(s, a, c), r.domBuilder = n.domBuilder || a, /\\/x?html?$/.test(t) && (d.nbsp = \" \", d.copy = \"©\", u[\"\"] = \"http://www.w3.org/1999/xhtml\"), u.xml = u.xml || \"http://www.w3.org/XML/1998/namespace\", e ? r.parse(e, u, d) : r.errorHandler.error(\"invalid doc source\"), a.doc;}, i.prototype = { startDocument: function startDocument() {this.doc = new d().createDocument(null, null, null), this.locator && (this.doc.documentURI = this.locator.systemId);}, startElement: function startElement(e, t, n, r) {var o = this.doc,i = o.createElementNS(e, n || t),s = r.length;u(this, i), this.currentElement = i, this.locator && a(this.locator, i);for (var c = 0; c < s; c++) {var e = r.getURI(c),l = r.getValue(c),n = r.getQName(c),d = o.createAttributeNS(e, n);this.locator && a(r.getLocator(c), d), d.value = d.nodeValue = l, i.setAttributeNode(d);}}, endElement: function endElement(e, t, n) {var r = this.currentElement;r.tagName;this.currentElement = r.parentNode;}, startPrefixMapping: function startPrefixMapping(e, t) {}, endPrefixMapping: function endPrefixMapping(e) {}, processingInstruction: function processingInstruction(e, t) {var n = this.doc.createProcessingInstruction(e, t);this.locator && a(this.locator, n), u(this, n);}, ignorableWhitespace: function ignorableWhitespace(e, t, n) {}, characters: function characters(e, t, n) {if (e = c.apply(this, arguments)) {if (this.cdata) var r = this.doc.createCDATASection(e);else var r = this.doc.createTextNode(e);this.currentElement ? this.currentElement.appendChild(r) : /^\\s*$/.test(e) && this.doc.appendChild(r), this.locator && a(this.locator, r);}}, skippedEntity: function skippedEntity(e) {}, endDocument: function endDocument() {this.doc.normalize();}, setDocumentLocator: function setDocumentLocator(e) {(this.locator = e) && (e.lineNumber = 0);}, comment: function comment(e, t, n) {e = c.apply(this, arguments);var r = this.doc.createComment(e);this.locator && a(this.locator, r), u(this, r);}, startCDATA: function startCDATA() {this.cdata = !0;}, endCDATA: function endCDATA() {this.cdata = !1;}, startDTD: function startDTD(e, t, n) {var r = this.doc.implementation;if (r && r.createDocumentType) {var o = r.createDocumentType(e, t, n);this.locator && a(this.locator, o), u(this, o);}}, warning: function warning(e) {console.warn(__f__(\"[xmldom warning]\\t\" + e, s(this.locator), \" at utils\\\\cos-wx-sdk-v5.js:1\"));}, error: function error(e) {console.error(__f__(\"[xmldom error]\\t\" + e, s(this.locator), \" at utils\\\\cos-wx-sdk-v5.js:1\"));}, fatalError: function fatalError(e) {throw console.error(__f__(\"[xmldom fatalError]\\t\" + e, s(this.locator), \" at utils\\\\cos-wx-sdk-v5.js:1\")), e;} }, \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (e) {i.prototype[e] = function () {return null;};});var l = n(12).XMLReader,d = t.DOMImplementation = n(1).DOMImplementation;t.XMLSerializer = n(1).XMLSerializer, t.DOMParser = r;}, function (e, t) {function n() {}function r(e, t, n, r, u) {function h(e) {if (e > 65535) {e -= 65536;var t = 55296 + (e >> 10),n = 56320 + (1023 & e);return String.fromCharCode(t, n);}return String.fromCharCode(e);}function p(e) {var t = e.slice(1, -1);return t in n ? n[t] : \"#\" === t.charAt(0) ? h(parseInt(t.substr(1).replace(\"x\", \"0x\"))) : (u.error(\"entity not found:\" + e), e);}function m(t) {if (t > A) {var n = e.substring(A, t).replace(/&#?\\w+;/g, p);x && g(A), r.characters(n, 0, t - A), A = t;}}function g(t, n) {for (; t >= C && (n = v.exec(e));) {y = n.index, C = y + n[0].length, x.lineNumber++;}x.columnNumber = t - y + 1;}for (var y = 0, C = 0, v = /.*(?:\\r\\n?|\\n)|.*$/g, x = r.locator, k = [{ currentNSMap: t }], S = {}, A = 0;;) {try {var b = e.indexOf(\"<\", A);if (b < 0) {if (!e.substr(A).match(/^\\s*$/)) {var R = r.doc,T = R.createTextNode(e.substr(A));R.appendChild(T), r.currentElement = T;}return;}switch (b > A && m(b), e.charAt(b + 1)) {case \"/\":var E = e.indexOf(\">\", b + 3),w = e.substring(b + 2, E),_ = k.pop();E < 0 ? (w = e.substring(b + 2).replace(/[\\s<].*/, \"\"), u.error(\"end tag name: \" + w + \" is not complete:\" + _.tagName), E = b + 1 + w.length) : w.match(/\\s</) && (w = w.replace(/[\\s<].*/, \"\"), u.error(\"end tag name: \" + w + \" maybe not complete\"), E = b + 1 + w.length);var N = _.localNSMap,B = _.tagName == w;if (B || _.tagName && _.tagName.toLowerCase() == w.toLowerCase()) {if (r.endElement(_.uri, _.localName, w), N) for (var D in N) {r.endPrefixMapping(D);}B || u.fatalError(\"end tag name: \" + w + \" is not match the current start tagName:\" + _.tagName);} else k.push(_);E++;break;case \"?\":x && g(b), E = d(e, b, r);break;case \"!\":x && g(b), E = l(e, b, r, u);break;default:x && g(b);var O = new f(),P = k[k.length - 1].currentNSMap,E = i(e, b, O, P, p, u),I = O.length;if (!O.closed && c(e, E, O.tagName, S) && (O.closed = !0, n.nbsp || u.warning(\"unclosed xml attribute\")), x && I) {for (var M = o(x, {}), L = 0; L < I; L++) {var F = O[L];g(F.offset), F.locator = o(x, {});}r.locator = M, a(O, r, P) && k.push(O), r.locator = x;} else a(O, r, P) && k.push(O);\"http://www.w3.org/1999/xhtml\" !== O.uri || O.closed ? E++ : E = s(e, E, O.tagName, p, r);}} catch (e) {u.error(\"element parse error: \" + e), E = -1;}E > A ? A = E : m(Math.max(b, A) + 1);}}function o(e, t) {return t.lineNumber = e.lineNumber, t.columnNumber = e.columnNumber, t;}function i(e, t, n, r, o, i) {for (var a, s, c = ++t, u = C;;) {var l = e.charAt(c);switch (l) {case \"=\":if (u === v) a = e.slice(t, c), u = k;else {if (u !== x) throw new Error(\"attribute equal must after attrName\");u = k;}break;case \"'\":case '\"':if (u === k || u === v) {if (u === v && (i.warning('attribute value must after \"=\"'), a = e.slice(t, c)), t = c + 1, !((c = e.indexOf(l, t)) > 0)) throw new Error(\"attribute value no end '\" + l + \"' match\");s = e.slice(t, c).replace(/&#?\\w+;/g, o), n.add(a, s, t - 1), u = A;} else {if (u != S) throw new Error('attribute value must after \"=\"');s = e.slice(t, c).replace(/&#?\\w+;/g, o), n.add(a, s, t), i.warning('attribute \"' + a + '\" missed start quot(' + l + \")!!\"), t = c + 1, u = A;}break;case \"/\":switch (u) {case C:n.setTagName(e.slice(t, c));case A:case b:case R:u = R, n.closed = !0;case S:case v:case x:break;default:throw new Error(\"attribute invalid close char('/')\");}break;case \"\":return i.error(\"unexpected end of input\"), u == C && n.setTagName(e.slice(t, c)), c;case \">\":switch (u) {case C:n.setTagName(e.slice(t, c));case A:case b:case R:break;case S:case v:s = e.slice(t, c), \"/\" === s.slice(-1) && (n.closed = !0, s = s.slice(0, -1));case x:u === x && (s = a), u == S ? (i.warning('attribute \"' + s + '\" missed quot(\")!!'), n.add(a, s.replace(/&#?\\w+;/g, o), t)) : (\"http://www.w3.org/1999/xhtml\" === r[\"\"] && s.match(/^(?:disabled|checked|selected)$/i) || i.warning('attribute \"' + s + '\" missed value!! \"' + s + '\" instead!!'), n.add(s, s, t));break;case k:throw new Error(\"attribute value missed!!\");}return c;case \"\":l = \" \";default:if (l <= \" \") switch (u) {case C:n.setTagName(e.slice(t, c)), u = b;break;case v:a = e.slice(t, c), u = x;break;case S:var s = e.slice(t, c).replace(/&#?\\w+;/g, o);i.warning('attribute \"' + s + '\" missed quot(\")!!'), n.add(a, s, t);case A:u = b;} else switch (u) {case x:n.tagName;\"http://www.w3.org/1999/xhtml\" === r[\"\"] && a.match(/^(?:disabled|checked|selected)$/i) || i.warning('attribute \"' + a + '\" missed value!! \"' + a + '\" instead2!!'), n.add(a, a, t), t = c, u = v;break;case A:i.warning('attribute space is required\"' + a + '\"!!');case b:u = v, t = c;break;case k:u = S, t = c;break;case R:throw new Error(\"elements closed character '/' and '>' must be connected to\");}}c++;}}function a(e, t, n) {for (var r = e.tagName, o = null, i = e.length; i--;) {var a = e[i],s = a.qName,c = a.value,l = s.indexOf(\":\");if (l > 0) var d = a.prefix = s.slice(0, l),f = s.slice(l + 1),h = \"xmlns\" === d && f;else f = s, d = null, h = \"xmlns\" === s && \"\";a.localName = f, !1 !== h && (null == o && (o = {}, u(n, n = {})), n[h] = o[h] = c, a.uri = \"http://www.w3.org/2000/xmlns/\", t.startPrefixMapping(h, c));}for (var i = e.length; i--;) {a = e[i];var d = a.prefix;d && (\"xml\" === d && (a.uri = \"http://www.w3.org/XML/1998/namespace\"), \"xmlns\" !== d && (a.uri = n[d || \"\"]));}var l = r.indexOf(\":\");l > 0 ? (d = e.prefix = r.slice(0, l), f = e.localName = r.slice(l + 1)) : (d = null, f = e.localName = r);var p = e.uri = n[d || \"\"];if (t.startElement(p, f, r, e), !e.closed) return e.currentNSMap = n, e.localNSMap = o, !0;if (t.endElement(p, f, r), o) for (d in o) {t.endPrefixMapping(d);}}function s(e, t, n, r, o) {if (/^(?:script|textarea)$/i.test(n)) {var i = e.indexOf(\"</\" + n + \">\", t),a = e.substring(t + 1, i);if (/[&<]/.test(a)) return /^script$/i.test(n) ? (o.characters(a, 0, a.length), i) : (a = a.replace(/&#?\\w+;/g, r), o.characters(a, 0, a.length), i);}return t + 1;}function c(e, t, n, r) {var o = r[n];return null == o && (o = e.lastIndexOf(\"</\" + n + \">\"), o < t && (o = e.lastIndexOf(\"</\" + n)), r[n] = o), o < t;}function u(e, t) {for (var n in e) {t[n] = e[n];}}function l(e, t, n, r) {switch (e.charAt(t + 2)) {case \"-\":if (\"-\" === e.charAt(t + 3)) {var o = e.indexOf(\"--\\x3e\", t + 4);return o > t ? (n.comment(e, t + 4, o - t - 4), o + 3) : (r.error(\"Unclosed comment\"), -1);}return -1;default:if (\"CDATA[\" == e.substr(t + 3, 6)) {var o = e.indexOf(\"]]>\", t + 9);return n.startCDATA(), n.characters(e, t + 9, o - t - 9), n.endCDATA(), o + 3;}var i = p(e, t),a = i.length;if (a > 1 && /!doctype/i.test(i[0][0])) {var s = i[1][0],c = a > 3 && /^public$/i.test(i[2][0]) && i[3][0],u = a > 4 && i[4][0],l = i[a - 1];return n.startDTD(s, c && c.replace(/^(['\"])(.*?)\\1$/, \"$2\"), u && u.replace(/^(['\"])(.*?)\\1$/, \"$2\")), n.endDTD(), l.index + l[0].length;}}return -1;}function d(e, t, n) {var r = e.indexOf(\"?>\", t);if (r) {var o = e.substring(t, r).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if (o) {o[0].length;return n.processingInstruction(o[1], o[2]), r + 2;}return -1;}return -1;}function f(e) {}function h(e, t) {return e.__proto__ = t, e;}function p(e, t) {var n,r = [],o = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;for (o.lastIndex = t, o.exec(e); n = o.exec(e);) {if (r.push(n), n[1]) return r;}}var m = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/,g = new RegExp(\"[\\\\-\\\\.0-9\" + m.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\"),y = new RegExp(\"^\" + m.source + g.source + \"*(?::\" + m.source + g.source + \"*)?$\"),C = 0,v = 1,x = 2,k = 3,S = 4,A = 5,b = 6,R = 7;n.prototype = { parse: function parse(e, t, n) {var o = this.domBuilder;o.startDocument(), u(t, t = {}), r(e, t, n, o, this.errorHandler), o.endDocument();} }, f.prototype = { setTagName: function setTagName(e) {if (!y.test(e)) throw new Error(\"invalid tagName:\" + e);this.tagName = e;}, add: function add(e, t, n) {if (!y.test(e)) throw new Error(\"invalid attribute:\" + e);this[this.length++] = { qName: e, value: t, offset: n };}, length: 0, getLocalName: function getLocalName(e) {return this[e].localName;}, getLocator: function getLocator(e) {return this[e].locator;}, getQName: function getQName(e) {return this[e].qName;}, getURI: function getURI(e) {return this[e].uri;}, getValue: function getValue(e) {return this[e].value;} }, h({}, h.prototype) instanceof h || (h = function h(e, t) {function n() {}n.prototype = t, n = new n();for (t in e) {n[t] = e[t];}return n;}), t.XMLReader = n;}, function (e, t, n) {function r(e, t) {var n = e.Bucket,r = e.Region,a = e.Key,s = e.UploadId,c = e.Level || \"task\",l = e.AsyncLimit,d = this,f = new u();if (f.on(\"error\", function (e) {return t(e);}), f.on(\"get_abort_array\", function (i) {o.call(d, { Bucket: n, Region: r, Key: a, Headers: e.Headers, AsyncLimit: l, AbortArray: i }, function (e, n) {if (e) return t(e);t(null, n);});}), \"bucket\" === c) i.call(d, { Bucket: n, Region: r }, function (e, n) {if (e) return t(e);f.emit(\"get_abort_array\", n.UploadList || []);});else if (\"file\" === c) {if (!a) return t({ error: \"abort_upload_task_no_key\" });i.call(d, { Bucket: n, Region: r, Key: a }, function (e, n) {if (e) return t(e);f.emit(\"get_abort_array\", n.UploadList || []);});} else {if (\"task\" !== c) return t({ error: \"abort_unknown_level\" });if (!s) return t({ error: \"abort_upload_task_no_id\" });if (!a) return t({ error: \"abort_upload_task_no_key\" });f.emit(\"get_abort_array\", [{ Key: a, UploadId: s }]);}}function o(e, t) {var n = e.Bucket,r = e.Region,o = e.Key,i = e.AbortArray,a = e.AsyncLimit || 1,s = this,u = 0,l = new Array(i.length);c.eachLimit(i, a, function (t, i) {var a = u;if (o && o !== t.Key) return l[a] = { error: { KeyNotMatch: !0 } }, void i(null);var c = t.UploadId || t.UploadID;s.multipartAbort({ Bucket: n, Region: r, Key: t.Key, Headers: e.Headers, UploadId: c }, function (e, o) {var s = { Bucket: n, Region: r, Key: t.Key, UploadId: c };l[a] = { error: e, task: s }, i(null);}), u++;}, function (e) {if (e) return t(e);for (var n = [], r = [], o = 0, i = l.length; o < i; o++) {var a = l[o];a.task && (a.error ? r.push(a.task) : n.push(a.task));}return t(null, { successList: n, errorList: r });});}function i(e, t) {var n = this,r = [],o = { Bucket: e.Bucket, Region: e.Region, Prefix: e.Key },i = function i() {n.multipartList(o, function (e, n) {if (e) return t(e);r.push.apply(r, n.Upload || []), \"true\" == n.IsTruncated ? (o.KeyMarker = n.NextKeyMarker, o.UploadIdMarker = n.NextUploadIdMarker, i()) : t(null, { UploadList: r });});};i();}function a(e, t) {var n = new u(),r = this,o = e.Bucket,i = e.Region,a = e.Key,d = e.CopySource,f = d.match(/^([^.]+-\\d+)\\.cos(v6)?\\.([^.]+)\\.[^\\/]+\\/(.+)$/);if (!f) return void t({ error: \"CopySource format error\" });var h = f[1],p = f[3],m = decodeURIComponent(f[4]),g = void 0 === e.SliceSize ? r.options.CopySliceSize : e.SliceSize;g = Math.max(0, Math.min(g, 5368709120));var y,C,v = e.ChunkSize || this.options.CopyChunkSize,x = this.options.CopyChunkParallelLimit,k = 0;n.on(\"copy_slice_complete\", function (e) {r.multipartComplete({ Bucket: o, Region: i, Key: a, UploadId: e.UploadId, Parts: e.PartList }, function (e, n) {if (e) return C(null, !0), t(e);C({ loaded: y, total: y }, !0), t(null, n);});}), n.on(\"get_copy_data_finish\", function (e) {c.eachLimit(e.PartList, x, function (t, n) {var c = t.PartNumber,u = t.CopySourceRange,l = t.end - t.start,f = 0;s.call(r, { Bucket: o, Region: i, Key: a, CopySource: d, UploadId: e.UploadId, PartNumber: c, CopySourceRange: u, onProgress: function onProgress(e) {k += e.loaded - f, f = e.loaded, C({ loaded: k, total: y });} }, function (e, r) {if (e) return n(e);C({ loaded: k, total: y }), k += l - f, t.ETag = r.ETag, n(e || null, r);});}, function (r) {if (r) return C(null, !0), t(r);n.emit(\"copy_slice_complete\", e);});}), n.on(\"get_file_size_finish\", function (s) {!function () {for (var t = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 5120], n = 1048576, o = 0; o < t.length && (n = 1024 * t[o] * 1024, !(y / n <= r.options.MaxPartNumber)); o++) {;}e.ChunkSize = v = Math.max(v, n);for (var i = Math.ceil(y / v), a = [], s = 1; s <= i; s++) {var c = (s - 1) * v,u = s * v < y ? s * v - 1 : y - 1,l = { PartNumber: s, start: c, end: u, CopySourceRange: \"bytes=\" + c + \"-\" + u };a.push(l);}e.PartList = a;}();var c;c = \"Replaced\" === e.Headers[\"x-cos-metadata-directive\"] ? e.Headers : s, c[\"x-cos-storage-class\"] = e.Headers[\"x-cos-storage-class\"] || s[\"x-cos-storage-class\"], c = l.clearKey(c), r.multipartInit({ Bucket: o, Region: i, Key: a, Headers: c }, function (r, o) {if (r) return t(r);e.UploadId = o.UploadId, n.emit(\"get_copy_data_finish\", e);});}), r.headObject({ Bucket: h, Region: p, Key: m }, function (o, i) {if (o) return void t(o.statusCode && 404 === o.statusCode ? { ErrorStatus: m + \" Not Exist\" } : o);if (void 0 === (y = e.FileSize = i.headers[\"content-length\"]) || !y) return void t({ error: 'get Content-Length error, please add \"Content-Length\" to CORS ExposeHeader setting.' });if (C = l.throttleOnProgress.call(r, y, e.onProgress), y <= g) e.Headers[\"x-cos-metadata-directive\"] || (e.Headers[\"x-cos-metadata-directive\"] = \"Copy\"), r.putObjectCopy(e, function (e, n) {if (e) return C(null, !0), t(e);C({ loaded: y, total: y }, !0), t(e, n);});else {var a = i.headers,s = { \"Cache-Control\": a[\"cache-control\"], \"Content-Disposition\": a[\"content-disposition\"], \"Content-Encoding\": a[\"content-encoding\"], \"Content-Type\": a[\"content-type\"], Expires: a.expires, \"x-cos-storage-class\": a[\"x-cos-storage-class\"] };l.each(a, function (e, t) {0 === t.indexOf(\"x-cos-meta-\") && t.length > \"x-cos-meta-\".length && (s[t] = e);}), n.emit(\"get_file_size_finish\", s);}});}function s(e, t) {var n = e.TaskId,r = e.Bucket,o = e.Region,i = e.Key,a = e.CopySource,s = e.UploadId,u = 1 * e.PartNumber,l = e.CopySourceRange,d = this.options.ChunkRetryTimes + 1,f = this;c.retry(d, function (t) {f.uploadPartCopy({ TaskId: n, Bucket: r, Region: o, Key: i, CopySource: a, UploadId: s, PartNumber: u, CopySourceRange: l, onProgress: e.onProgress }, function (e, n) {t(e || null, n);});}, function (e, n) {return t(e, n);});}var c = n(14),u = n(2).EventProxy,l = n(0),d = { abortUploadTask: r, sliceCopyFile: a };e.exports.init = function (e, t) {l.each(d, function (t, n) {e.prototype[n] = l.apiWrapper(n, t);});};}, function (e, t) {var n = function n(e, t, _n, r) {if (r = r || function () {}, !e.length || t <= 0) return r();var o = 0,i = 0,a = 0;!function s() {if (o >= e.length) return r();for (; a < t && i < e.length;) {i += 1, a += 1, _n(e[i - 1], function (t) {t ? (r(t), r = function r() {}) : (o += 1, a -= 1, o >= e.length ? r() : s());});}}();},r = function r(e, t, n) {var r = function r(o) {t(function (t, i) {t && o < e ? r(o + 1) : n(t, i);});};e < 1 ? n() : r(1);},o = { eachLimit: n, retry: r };e.exports = o;}, function (e, t, n) {\"use strict\";function r(e, t) {\"function\" == typeof e && (t = e, e = {});var n = this.options.ServiceDomain,r = e.AppId || this.options.appId,o = e.Region;n ? (n = n.replace(/\\{\\{AppId\\}\\}/gi, r || \"\").replace(/\\{\\{Region\\}\\}/gi, o || \"\").replace(/\\{\\{.*?\\}\\}/gi, \"\"), /^[a-zA-Z]+:\\/\\//.test(n) || (n = \"https://\" + n), \"/\" === n.slice(-1) && (n = n.slice(0, -1))) : n = o ? \"https://cos.\" + o + \".myqcloud.com\" : \"https://service.cos.myqcloud.com\", ee.call(this, { Action: \"name/cos:GetService\", url: n + \"/\", method: \"GET\" }, function (e, n) {if (e) return t(e);var r = n && n.ListAllMyBucketsResult && n.ListAllMyBucketsResult.Buckets && n.ListAllMyBucketsResult.Buckets.Bucket || [];r = re.isArray(r) ? r : [r];var o = n && n.ListAllMyBucketsResult && n.ListAllMyBucketsResult.Owner || {};t(null, { Buckets: r, Owner: o, statusCode: n.statusCode, headers: n.headers });});}function o(e, t) {ee.call(this, { Action: \"name/cos:HeadBucket\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, method: \"HEAD\" }, function (e, n) {t(e, n);});}function i(e, t) {var n = {};n.prefix = e.Prefix || \"\", n.delimiter = e.Delimiter, n.marker = e.Marker, n[\"max-keys\"] = e.MaxKeys, n[\"encoding-type\"] = e.EncodingType, ee.call(this, { Action: \"name/cos:GetBucket\", ResourceKey: n.prefix, method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, qs: n }, function (e, n) {if (e) return t(e);var r = n.ListBucketResult || {},o = r.Contents || [],i = r.CommonPrefixes || [];o = re.isArray(o) ? o : [o], i = re.isArray(i) ? i : [i];var a = re.clone(r);re.extend(a, { Contents: o, CommonPrefixes: i, statusCode: n.statusCode, headers: n.headers }), t(null, a);});}function a(e, t) {var n = this,r = {};r[\"x-cos-acl\"] = e.ACL, r[\"x-cos-grant-read\"] = e.GrantRead, r[\"x-cos-grant-write\"] = e.GrantWrite, r[\"x-cos-grant-read-acp\"] = e.GrantReadAcp, r[\"x-cos-grant-write-acp\"] = e.GrantWriteAcp, r[\"x-cos-grant-full-control\"] = e.GrantFullControl, ee.call(this, { Action: \"name/cos:PutBucket\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, headers: r }, function (r, o) {if (r) return t(r);var i = Z({ domain: n.options.Domain, bucket: e.Bucket, region: e.Region, isLocation: !0 });t(null, { Location: i, statusCode: o.statusCode, headers: o.headers });});}function s(e, t) {ee.call(this, { Action: \"name/cos:DeleteBucket\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, method: \"DELETE\" }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function c(e, t) {ee.call(this, { Action: \"name/cos:GetBucketACL\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"acl\" }, function (e, n) {if (e) return t(e);var r = n.AccessControlPolicy || {},o = r.Owner || {},i = r.AccessControlList.Grant || [];i = re.isArray(i) ? i : [i];var a = W(r);n.headers && n.headers[\"x-cos-acl\"] && (a.ACL = n.headers[\"x-cos-acl\"]), a = re.extend(a, { Owner: o, Grants: i, statusCode: n.statusCode, headers: n.headers }), t(null, a);});}function u(e, t) {var n = e.Headers,r = \"\";if (e.AccessControlPolicy) {var o = re.clone(e.AccessControlPolicy || {}),i = o.Grants || o.Grant;i = re.isArray(i) ? i : [i], delete o.Grant, delete o.Grants, o.AccessControlList = { Grant: i }, r = re.json2xml({ AccessControlPolicy: o }), n[\"Content-Type\"] = \"application/xml\", n[\"Content-MD5\"] = re.binaryBase64(re.md5(r));}re.each(n, function (e, t) {0 === t.indexOf(\"x-cos-grant-\") && (n[t] = Q(n[t]));}), ee.call(this, { Action: \"name/cos:PutBucketACL\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, headers: n, action: \"acl\", body: r }, function (e, n) {if (e) return t(e);t(null, { statusCode: n.statusCode, headers: n.headers });});}function l(e, t) {ee.call(this, { Action: \"name/cos:GetBucketCORS\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"cors\" }, function (e, n) {if (e) {if (404 === e.statusCode && e.error && \"NoSuchCORSConfiguration\" === e.error.Code) {var r = { CORSRules: [], statusCode: e.statusCode };e.headers && (r.headers = e.headers), t(null, r);} else t(e);} else {var o = n.CORSConfiguration || {},i = o.CORSRules || o.CORSRule || [];i = re.clone(re.isArray(i) ? i : [i]), re.each(i, function (e) {re.each([\"AllowedOrigin\", \"AllowedHeader\", \"AllowedMethod\", \"ExposeHeader\"], function (t, n) {var r = t + \"s\",o = e[r] || e[t] || [];delete e[t], e[r] = re.isArray(o) ? o : [o];});}), t(null, { CORSRules: i, statusCode: n.statusCode, headers: n.headers });}});}function d(e, t) {var n = e.CORSConfiguration || {},r = n.CORSRules || e.CORSRules || [];r = re.clone(re.isArray(r) ? r : [r]), re.each(r, function (e) {re.each([\"AllowedOrigin\", \"AllowedHeader\", \"AllowedMethod\", \"ExposeHeader\"], function (t, n) {var r = t + \"s\",o = e[r] || e[t] || [];delete e[r], e[t] = re.isArray(o) ? o : [o];});});var o = re.json2xml({ CORSConfiguration: { CORSRule: r } }),i = e.Headers;i[\"Content-Type\"] = \"application/xml\", i[\"Content-MD5\"] = re.binaryBase64(re.md5(o)), ee.call(this, { Action: \"name/cos:PutBucketCORS\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, body: o, action: \"cors\", headers: i }, function (e, n) {if (e) return t(e);t(null, { statusCode: n.statusCode, headers: n.headers });});}function f(e, t) {ee.call(this, { Action: \"name/cos:DeleteBucketCORS\", method: \"DELETE\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"cors\" }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode || e.statusCode, headers: n.headers });});}function h(e, t) {var n = e.Policy,r = n;try {\"string\" == typeof n ? n = JSON.parse(r) : r = JSON.stringify(n);} catch (e) {t({ error: \"Policy format error\" });}var o = e.Headers;o[\"Content-Type\"] = \"application/json\", o[\"Content-MD5\"] = re.binaryBase64(re.md5(r)), ee.call(this, { Action: \"name/cos:PutBucketPolicy\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, action: \"policy\", body: re.isBrowser ? r : n, headers: o, json: !0 }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function p(e, t) {ee.call(this, { Action: \"name/cos:DeleteBucketPolicy\", method: \"DELETE\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"policy\" }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode || e.statusCode, headers: n.headers });});}function m(e, t) {ee.call(this, { Action: \"name/cos:GetBucketLocation\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"location\" }, function (e, n) {if (e) return t(e);t(null, n);});}function g(e, t) {ee.call(this, { Action: \"name/cos:GetBucketPolicy\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"policy\", rawBody: !0 }, function (e, n) {if (e) return t(e.statusCode && 403 === e.statusCode ? { ErrorStatus: \"Access Denied\" } : e.statusCode && 405 === e.statusCode ? { ErrorStatus: \"Method Not Allowed\" } : e.statusCode && 404 === e.statusCode ? { ErrorStatus: \"Policy Not Found\" } : e);var r = {};try {r = JSON.parse(n.body);} catch (e) {}t(null, { Policy: r, statusCode: n.statusCode, headers: n.headers });});}function y(e, t) {ee.call(this, { Action: \"name/cos:GetBucketTagging\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"tagging\" }, function (e, n) {if (e) {if (404 !== e.statusCode || !e.error || \"Not Found\" !== e.error && \"NoSuchTagSet\" !== e.error.Code) t(e);else {var r = { Tags: [], statusCode: e.statusCode };e.headers && (r.headers = e.headers), t(null, r);}} else {var o = [];try {o = n.Tagging.TagSet.Tag || [];} catch (e) {}o = re.clone(re.isArray(o) ? o : [o]), t(null, { Tags: o, statusCode: n.statusCode, headers: n.headers });}});}function C(e, t) {var n = e.Tagging || {},r = n.TagSet || n.Tags || e.Tags || [];r = re.clone(re.isArray(r) ? r : [r]);var o = re.json2xml({ Tagging: { TagSet: { Tag: r } } }),i = e.Headers;i[\"Content-Type\"] = \"application/xml\", i[\"Content-MD5\"] = re.binaryBase64(re.md5(o)), ee.call(this, { Action: \"name/cos:PutBucketTagging\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, body: o, action: \"tagging\", headers: i }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function v(e, t) {ee.call(this, { Action: \"name/cos:DeleteBucketTagging\", method: \"DELETE\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"tagging\" }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function x(e, t) {var n = e.LifecycleConfiguration || {},r = n.Rules || e.Rules || [];r = re.clone(r);var o = re.json2xml({ LifecycleConfiguration: { Rule: r } }),i = e.Headers;i[\"Content-Type\"] = \"application/xml\", i[\"Content-MD5\"] = re.binaryBase64(re.md5(o)), ee.call(this, { Action: \"name/cos:PutBucketLifecycle\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, body: o, action: \"lifecycle\", headers: i }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function k(e, t) {ee.call(this, { Action: \"name/cos:GetBucketLifecycle\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"lifecycle\" }, function (e, n) {if (e) {if (404 === e.statusCode && e.error && \"NoSuchLifecycleConfiguration\" === e.error.Code) {var r = { Rules: [], statusCode: e.statusCode };e.headers && (r.headers = e.headers), t(null, r);} else t(e);} else {var o = [];try {o = n.LifecycleConfiguration.Rule || [];} catch (e) {}o = re.clone(re.isArray(o) ? o : [o]), t(null, { Rules: o, statusCode: n.statusCode, headers: n.headers });}});}function S(e, t) {ee.call(this, { Action: \"name/cos:DeleteBucketLifecycle\", method: \"DELETE\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"lifecycle\" }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function A(e, t) {if (!e.VersioningConfiguration) return void t({ error: \"missing param VersioningConfiguration\" });var n = e.VersioningConfiguration || {},r = re.json2xml({ VersioningConfiguration: n }),o = e.Headers;o[\"Content-Type\"] = \"application/xml\", o[\"Content-MD5\"] = re.binaryBase64(re.md5(r)), ee.call(this, { Action: \"name/cos:PutBucketVersioning\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, body: r, action: \"versioning\", headers: o }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function b(e, t) {ee.call(this, { Action: \"name/cos:GetBucketVersioning\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"versioning\" }, function (e, n) {e || !n.VersioningConfiguration && (n.VersioningConfiguration = {}), t(e, n);});}function R(e, t) {var n = re.clone(e.ReplicationConfiguration),r = re.json2xml({ ReplicationConfiguration: n });r = r.replace(/<(\\/?)Rules>/gi, \"<$1Rule>\"), r = r.replace(/<(\\/?)Tags>/gi, \"<$1Tag>\");var o = e.Headers;o[\"Content-Type\"] = \"application/xml\", o[\"Content-MD5\"] = re.binaryBase64(re.md5(r)), ee.call(this, { Action: \"name/cos:PutBucketReplication\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, body: r, action: \"replication\", headers: o }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function T(e, t) {ee.call(this, { Action: \"name/cos:GetBucketReplication\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"replication\" }, function (e, n) {if (e) {if (404 !== e.statusCode || !e.error || \"Not Found\" !== e.error && \"ReplicationConfigurationnotFoundError\" !== e.error.Code) t(e);else {var r = { ReplicationConfiguration: { Rules: [] }, statusCode: e.statusCode };e.headers && (r.headers = e.headers), t(null, r);}} else e || !n.ReplicationConfiguration && (n.ReplicationConfiguration = {}), n.ReplicationConfiguration.Rule && (n.ReplicationConfiguration.Rules = n.ReplicationConfiguration.Rule, delete n.ReplicationConfiguration.Rule), t(e, n);});}function E(e, t) {ee.call(this, { Action: \"name/cos:DeleteBucketReplication\", method: \"DELETE\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, action: \"replication\" }, function (e, n) {return e && 204 === e.statusCode ? t(null, { statusCode: e.statusCode }) : e ? t(e) : void t(null, { statusCode: n.statusCode, headers: n.headers });});}function w(e, t) {ee.call(this, { Action: \"name/cos:HeadObject\", method: \"HEAD\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, VersionId: e.VersionId, headers: e.Headers }, function (n, r) {if (n) {var o = n.statusCode;return e.Headers[\"If-Modified-Since\"] && o && 304 === o ? t(null, { NotModified: !0, statusCode: o }) : t(n);}if (r.headers) {var i = r.headers;r.ETag = i.etag || i.Etag || i.ETag || \"\";}t(null, r);});}function _(e, t) {var n = {};n.prefix = e.Prefix || \"\", n.delimiter = e.Delimiter, n[\"key-marker\"] = e.KeyMarker, n[\"version-id-marker\"] = e.VersionIdMarker, n[\"max-keys\"] = e.MaxKeys, n[\"encoding-type\"] = e.EncodingType, ee.call(this, { Action: \"name/cos:GetBucketObjectVersions\", ResourceKey: n.prefix, method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, qs: n, action: \"versions\" }, function (e, n) {if (e) return t(e);var r = n.ListVersionsResult || {},o = r.DeleteMarker || [];o = re.isArray(o) ? o : [o];var i = r.Version || [];i = re.isArray(i) ? i : [i];var a = re.clone(r);delete a.DeleteMarker, delete a.Version, re.extend(a, { DeleteMarkers: o, Versions: i, statusCode: n.statusCode, headers: n.headers }), t(null, a);});}function N(e, t) {var n = {};n[\"response-content-type\"] = e.ResponseContentType, n[\"response-content-language\"] = e.ResponseContentLanguage, n[\"response-expires\"] = e.ResponseExpires, n[\"response-cache-control\"] = e.ResponseCacheControl, n[\"response-content-disposition\"] = e.ResponseContentDisposition, n[\"response-content-encoding\"] = e.ResponseContentEncoding, ee.call(this, { Action: \"name/cos:GetObject\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, VersionId: e.VersionId, headers: e.Headers, qs: n, rawBody: !0 }, function (n, r) {if (n) {var o = n.statusCode;return e.Headers[\"If-Modified-Since\"] && o && 304 === o ? t(null, { NotModified: !0 }) : t(n);}var i = {};if (i.Body = r.body, r && r.headers) {var a = r.headers;i.ETag = a.etag || a.Etag || a.ETag || \"\";}re.extend(i, { statusCode: r.statusCode, headers: r.headers }), t(null, i);});}function B(e, t) {var n = this,r = e.ContentLength,o = re.throttleOnProgress.call(n, r, e.onProgress);re.getBodyMd5(n.options.UploadCheckContentMd5, e.Body, function (i) {i && (e.Headers[\"Content-MD5\"] = re.binaryBase64(i)), void 0 !== e.ContentLength && (e.Headers[\"Content-Length\"] = e.ContentLength), ee.call(n, { Action: \"name/cos:PutObject\", TaskId: e.TaskId, method: \"PUT\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, headers: e.Headers, body: e.Body, onProgress: o }, function (i, a) {if (i) return o(null, !0), t(i);if (o({ loaded: r, total: r }, !0), a && a.headers) {var s = a.headers,c = s.etag || s.Etag || s.ETag || \"\",u = Z({ ForcePathStyle: n.options.ForcePathStyle, protocol: n.options.Protocol, domain: n.options.Domain, bucket: e.Bucket, region: e.Region, object: e.Key });return u = u.substr(u.indexOf(\"://\") + 3), t(null, { Location: u, ETag: c, statusCode: a.statusCode, headers: s });}t(null, a);});});}function D(e, t) {var n = this,r = {};r[\"Cache-Control\"] = e.CacheControl, r[\"Content-Disposition\"] = e.ContentDisposition, r[\"Content-Encoding\"] = e.ContentEncoding, r[\"Content-MD5\"] = e.ContentMD5, r[\"Content-Length\"] = e.ContentLength, r[\"Content-Type\"] = e.ContentType, r.Expect = e.Expect, r.Expires = e.Expires, r[\"x-cos-acl\"] = e.ACL, r[\"x-cos-grant-read\"] = e.GrantRead, r[\"x-cos-grant-write\"] = e.GrantWrite, r[\"x-cos-grant-full-control\"] = e.GrantFullControl, r[\"x-cos-storage-class\"] = e.StorageClass;var o = e.FilePath;for (var i in e) {i.indexOf(\"x-cos-meta-\") > -1 && (r[i] = e[i]);}var a = re.throttleOnProgress.call(n, r[\"Content-Length\"], e.onProgress);ee.call(this, { Action: \"name/cos:PostObject\", method: \"POST\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, headers: r, filePath: o, onProgress: a }, function (r, o) {if (a(null, !0), r) return t(r);if (o && o.headers) {var i = o.headers,s = i.etag || i.Etag || i.ETag || \"\",c = Z({ ForcePathStyle: n.options.ForcePathStyle, protocol: n.options.Protocol, domain: n.options.Domain, bucket: e.Bucket, region: e.Region, object: e.Key, isLocation: !0 });return t(null, { Location: c, statusCode: o.statusCode, headers: i, ETag: s });}t(null, o);});}function O(e, t) {ee.call(this, { Action: \"name/cos:DeleteObject\", method: \"DELETE\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, headers: e.Headers, VersionId: e.VersionId }, function (e, n) {if (e) {var r = e.statusCode;return r && 204 === r ? t(null, { statusCode: r }) : r && 404 === r ? t(null, { BucketNotFound: !0, statusCode: r }) : t(e);}t(null, { statusCode: n.statusCode, headers: n.headers });});}function P(e, t) {ee.call(this, { Action: \"name/cos:GetObjectACL\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, headers: e.Headers, action: \"acl\" }, function (e, n) {if (e) return t(e);var r = n.AccessControlPolicy || {},o = r.Owner || {},i = r.AccessControlList && r.AccessControlList.Grant || [];i = re.isArray(i) ? i : [i];var a = W(r);n.headers && n.headers[\"x-cos-acl\"] && (a.ACL = n.headers[\"x-cos-acl\"]), a = re.extend(a, { Owner: o, Grants: i, statusCode: n.statusCode, headers: n.headers }), t(null, a);});}function I(e, t) {var n = e.Headers,r = \"\";if (e.AccessControlPolicy) {var o = re.clone(e.AccessControlPolicy || {}),i = o.Grants || o.Grant;i = re.isArray(i) ? i : [i], delete o.Grant, delete o.Grants, o.AccessControlList = { Grant: i }, r = re.json2xml({ AccessControlPolicy: o }), n[\"Content-Type\"] = \"application/xml\", n[\"Content-MD5\"] = re.binaryBase64(re.md5(r));}re.each(n, function (e, t) {0 === t.indexOf(\"x-cos-grant-\") && (n[t] = Q(n[t]));}), ee.call(this, { Action: \"name/cos:PutObjectACL\", method: \"PUT\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, action: \"acl\", headers: n, body: r }, function (e, n) {if (e) return t(e);t(null, { statusCode: n.statusCode, headers: n.headers });});}function M(e, t) {var n = e.Headers;n.Origin = e.Origin, n[\"Access-Control-Request-Method\"] = e.AccessControlRequestMethod, n[\"Access-Control-Request-Headers\"] = e.AccessControlRequestHeaders, ee.call(this, { Action: \"name/cos:OptionsObject\", method: \"OPTIONS\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, headers: n }, function (e, n) {if (e) return e.statusCode && 403 === e.statusCode ? t(null, { OptionsForbidden: !0, statusCode: e.statusCode }) : t(e);var r = n.headers || {};t(null, { AccessControlAllowOrigin: r[\"access-control-allow-origin\"], AccessControlAllowMethods: r[\"access-control-allow-methods\"], AccessControlAllowHeaders: r[\"access-control-allow-headers\"], AccessControlExposeHeaders: r[\"access-control-expose-headers\"], AccessControlMaxAge: r[\"access-control-max-age\"], statusCode: n.statusCode, headers: n.headers });});}function L(e, t) {var n = e.CopySource || \"\",r = n.match(/^([^.]+-\\d+)\\.cos(v6)?\\.([^.]+)\\.[^\\/]+\\/(.+)$/);if (!r) return void t({ error: \"CopySource format error\" });var o = r[1],i = r[3],a = decodeURIComponent(r[4]);ee.call(this, { Scope: [{ action: \"name/cos:GetObject\", bucket: o, region: i, prefix: a }, { action: \"name/cos:PutObject\", bucket: e.Bucket, region: e.Region, prefix: e.Key }], method: \"PUT\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, VersionId: e.VersionId, headers: e.Headers }, function (e, n) {if (e) return t(e);var r = re.clone(n.CopyObjectResult || {});re.extend(r, { statusCode: n.statusCode, headers: n.headers }), t(null, r);});}function F(e, t) {var n = e.CopySource || \"\",r = n.match(/^([^.]+-\\d+)\\.cos(v6)?\\.([^.]+)\\.[^\\/]+\\/(.+)$/);if (!r) return void t({ error: \"CopySource format error\" });var o = r[1],i = r[3],a = decodeURIComponent(r[4]);ee.call(this, { Scope: [{ action: \"name/cos:GetObject\", bucket: o, region: i, prefix: a }, { action: \"name/cos:PutObject\", bucket: e.Bucket, region: e.Region, prefix: e.Key }], method: \"PUT\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, VersionId: e.VersionId, qs: { partNumber: e.PartNumber, uploadId: e.UploadId }, headers: e.Headers }, function (e, n) {if (e) return t(e);var r = re.clone(n.CopyPartResult || {});re.extend(r, { statusCode: n.statusCode, headers: n.headers }), t(null, r);});}function U(e, t) {var n = e.Objects || [],r = e.Quiet;n = re.isArray(n) ? n : [n];var o = re.json2xml({ Delete: { Object: n, Quiet: r || !1 } }),i = e.Headers;i[\"Content-Type\"] = \"application/xml\", i[\"Content-MD5\"] = re.binaryBase64(re.md5(o));var a = re.map(n, function (t) {return { action: \"name/cos:DeleteObject\", bucket: e.Bucket, region: e.Region, prefix: t.Key };});ee.call(this, { Scope: a, method: \"POST\", Bucket: e.Bucket, Region: e.Region, body: o, action: \"delete\", headers: i }, function (e, n) {if (e) return t(e);var r = n.DeleteResult || {},o = r.Deleted || [],i = r.Error || [];o = re.isArray(o) ? o : [o], i = re.isArray(i) ? i : [i];var a = re.clone(r);re.extend(a, { Error: i, Deleted: o, statusCode: n.statusCode, headers: n.headers }), t(null, a);});}function j(e, t) {var n = e.Headers;if (!e.RestoreRequest) return void t({ error: \"missing param RestoreRequest\" });var r = e.RestoreRequest || {},o = re.json2xml({ RestoreRequest: r });n[\"Content-Type\"] = \"application/xml\", n[\"Content-MD5\"] = re.binaryBase64(re.md5(o)), ee.call(this, { Action: \"name/cos:RestoreObject\", method: \"POST\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, VersionId: e.VersionId, body: o, action: \"restore\", headers: n }, function (e, n) {t(e, n);});}function K(e, t) {ee.call(this, { Action: \"name/cos:InitiateMultipartUpload\", method: \"POST\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, action: \"uploads\", headers: e.Headers }, function (e, n) {return e ? t(e) : (n = re.clone(n || {})) && n.InitiateMultipartUploadResult ? t(null, re.extend(n.InitiateMultipartUploadResult, { statusCode: n.statusCode, headers: n.headers })) : void t(null, n);});}function H(e, t) {var n = this;re.getFileSize(\"multipartUpload\", e, function () {re.getBodyMd5(n.options.UploadCheckContentMd5, e.Body, function (r) {r && (e.Headers[\"Content-MD5\"] = re.binaryBase64(r)), ee.call(n, { Action: \"name/cos:UploadPart\", TaskId: e.TaskId, method: \"PUT\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, qs: { partNumber: e.PartNumber, uploadId: e.UploadId }, headers: e.Headers, onProgress: e.onProgress, body: e.Body || null }, function (e, n) {if (e) return t(e);if (n && n.headers) {var r = n.headers;n.ETag = r.etag || r.Etag || r.ETag || \"\";}t(null, n);});});});}function z(e, t) {for (var n = this, r = e.UploadId, o = e.Parts, i = 0, a = o.length; i < a; i++) {0 !== o[i].ETag.indexOf('\"') && (o[i].ETag = '\"' + o[i].ETag + '\"');}var s = re.json2xml({ CompleteMultipartUpload: { Part: o } }),c = e.Headers;c[\"Content-Type\"] = \"application/xml\", c[\"Content-MD5\"] = re.binaryBase64(re.md5(s)), ee.call(this, { Action: \"name/cos:CompleteMultipartUpload\", method: \"POST\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, qs: { uploadId: r }, body: s, headers: c }, function (r, o) {if (r) return t(r);var i = Z({ ForcePathStyle: n.options.ForcePathStyle, protocol: n.options.Protocol, domain: n.options.Domain, bucket: e.Bucket, region: e.Region, object: e.Key, isLocation: !0 }),a = o.CompleteMultipartUploadResult || {},s = re.extend(a, { Location: i, statusCode: o.statusCode, headers: o.headers });t(null, s);});}function G(e, t) {var n = {};n.delimiter = e.Delimiter, n[\"encoding-type\"] = e.EncodingType, n.prefix = e.Prefix || \"\", n[\"max-uploads\"] = e.MaxUploads, n[\"key-marker\"] = e.KeyMarker, n[\"upload-id-marker\"] = e.UploadIdMarker, n = re.clearKey(n), ee.call(this, { Action: \"name/cos:ListMultipartUploads\", ResourceKey: n.prefix, method: \"GET\", Bucket: e.Bucket, Region: e.Region, headers: e.Headers, qs: n, action: \"uploads\" }, function (e, n) {if (e) return t(e);if (n && n.ListMultipartUploadsResult) {var r = n.ListMultipartUploadsResult.Upload || [],o = n.ListMultipartUploadsResult.CommonPrefixes || [];o = re.isArray(o) ? o : [o], r = re.isArray(r) ? r : [r], n.ListMultipartUploadsResult.Upload = r, n.ListMultipartUploadsResult.CommonPrefixes = o;}var i = re.clone(n.ListMultipartUploadsResult || {});re.extend(i, { statusCode: n.statusCode, headers: n.headers }), t(null, i);});}function q(e, t) {var n = {};n.uploadId = e.UploadId, n[\"encoding-type\"] = e.EncodingType, n[\"max-parts\"] = e.MaxParts, n[\"part-number-marker\"] = e.PartNumberMarker, ee.call(this, { Action: \"name/cos:ListParts\", method: \"GET\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, headers: e.Headers, qs: n }, function (e, n) {if (e) return t(e);var r = n.ListPartsResult || {},o = r.Part || [];o = re.isArray(o) ? o : [o], r.Part = o;var i = re.clone(r);re.extend(i, { statusCode: n.statusCode, headers: n.headers }), t(null, i);});}function V(e, t) {var n = {};n.uploadId = e.UploadId, ee.call(this, { Action: \"name/cos:AbortMultipartUpload\", method: \"DELETE\", Bucket: e.Bucket, Region: e.Region, Key: e.Key, headers: e.Headers, qs: n }, function (e, n) {if (e) return t(e);t(null, { statusCode: n.statusCode, headers: n.headers });});}function X(e) {var t = this;return re.getAuth({ SecretId: e.SecretId || this.options.SecretId || \"\", SecretKey: e.SecretKey || this.options.SecretKey || \"\", Method: e.Method, Key: e.Key, Query: e.Query, Headers: e.Headers, Expires: e.Expires, SystemClockOffset: t.options.SystemClockOffset });}function $(e, t) {var n = this,r = Z({ ForcePathStyle: n.options.ForcePathStyle, protocol: e.Protocol || n.options.Protocol, domain: n.options.Domain, bucket: e.Bucket, region: e.Region, object: e.Key });if (void 0 !== e.Sign && !e.Sign) return t(null, { Url: r }), r;var o = Y.call(this, { Action: \"PUT\" === (e.Method || \"\").toUpperCase() ? \"name/cos:PutObject\" : \"name/cos:GetObject\", Bucket: e.Bucket || \"\", Region: e.Region || \"\", Method: e.Method || \"get\", Key: e.Key, Expires: e.Expires }, function (e, n) {if (t) {if (e) return void t(e);var o = r;o += \"?\" + (n.Authorization.indexOf(\"q-signature\") > -1 ? n.Authorization : \"sign=\" + encodeURIComponent(n.Authorization)), n.XCosSecurityToken && (o += \"&x-cos-security-token=\" + n.XCosSecurityToken), n.ClientIP && (o += \"&clientIP=\" + n.ClientIP), n.ClientUA && (o += \"&clientUA=\" + n.ClientUA), n.Token && (o += \"&token=\" + n.Token), setTimeout(function () {t(null, { Url: o });});}});return o ? r + \"?\" + o.Authorization + (o.XCosSecurityToken ? \"&x-cos-security-token=\" + o.XCosSecurityToken : \"\") : r;}function W(e) {var t = { GrantFullControl: [], GrantWrite: [], GrantRead: [], GrantReadAcp: [], GrantWriteAcp: [], ACL: \"\" },n = { FULL_CONTROL: \"GrantFullControl\", WRITE: \"GrantWrite\", READ: \"GrantRead\", READ_ACP: \"GrantReadAcp\", WRITE_ACP: \"GrantWriteAcp\" },r = e.AccessControlList.Grant;r && (r = re.isArray(r) ? r : [r]);var o = { READ: 0, WRITE: 0, FULL_CONTROL: 0 };return r.length && re.each(r, function (r) {\"qcs::cam::anyone:anyone\" === r.Grantee.ID || \"http://cam.qcloud.com/groups/global/AllUsers\" === r.Grantee.URI ? o[r.Permission] = 1 : r.Grantee.ID !== e.Owner.ID && t[n[r.Permission]].push('id=\"' + r.Grantee.ID + '\"');}), o.FULL_CONTROL || o.WRITE && o.READ ? t.ACL = \"public-read-write\" : o.READ ? t.ACL = \"public-read\" : t.ACL = \"private\", re.each(n, function (e) {t[e] = Q(t[e].join(\",\"));}), t;}function Q(e) {var t,n,r = e.split(\",\"),o = {};for (t = 0; t < r.length;) {n = r[t].trim(), o[n] ? r.splice(t, 1) : (o[n] = !0, r[t] = n, t++);}return r.join(\",\");}function Z(e) {var t = e.bucket,n = t.substr(0, t.lastIndexOf(\"-\")),r = t.substr(t.lastIndexOf(\"-\") + 1),o = e.domain,i = e.region,a = e.object;o || (o = [\"cn-south\", \"cn-south-2\", \"cn-north\", \"cn-east\", \"cn-southwest\", \"sg\"].indexOf(i) > -1 ? \"{Region}.myqcloud.com\" : \"cos.{Region}.myqcloud.com\", e.ForcePathStyle || (o = \"{Bucket}.\" + o)), o = o.replace(/\\{\\{AppId\\}\\}/gi, r).replace(/\\{\\{Bucket\\}\\}/gi, n).replace(/\\{\\{Region\\}\\}/gi, i).replace(/\\{\\{.*?\\}\\}/gi, \"\"), o = o.replace(/\\{AppId\\}/gi, r).replace(/\\{BucketName\\}/gi, n).replace(/\\{Bucket\\}/gi, t).replace(/\\{Region\\}/gi, i).replace(/\\{.*?\\}/gi, \"\"), /^[a-zA-Z]+:\\/\\//.test(o) || (o = \"https://\" + o), \"/\" === o.slice(-1) && (o = o.slice(0, -1));var s = o;return e.ForcePathStyle && (s += \"/\" + t), s += \"/\", a && (s += re.camSafeUrlEncode(a).replace(/%2F/g, \"/\")), e.isLocation && (s = s.replace(/^https?:\\/\\//, \"\")), s;}function Y(e, t) {var n = re.clone(e.Headers);delete n[\"Content-Type\"], delete n[\"Cache-Control\"], re.each(n, function (e, t) {\"\" === e && delete n[t];});var r = function r(e) {var n = !1,r = e.Authorization;if (r) if (r.indexOf(\" \") > -1) n = !1;else if (r.indexOf(\"q-sign-algorithm=\") > -1 && r.indexOf(\"q-ak=\") > -1 && r.indexOf(\"q-sign-time=\") > -1 && r.indexOf(\"q-key-time=\") > -1 && r.indexOf(\"q-url-param-list=\") > -1) n = !0;else try {r = atob(r), r.indexOf(\"a=\") > -1 && r.indexOf(\"k=\") > -1 && r.indexOf(\"t=\") > -1 && r.indexOf(\"r=\") > -1 && r.indexOf(\"b=\") > -1 && (n = !0);} catch (e) {}n ? t && t(null, e) : t && t(\"authorization error\");},o = this,i = e.Bucket || \"\",a = e.Region || \"\",s = \"name/cos:PostObject\" !== e.Action && e.Key ? e.Key : \"\";o.options.ForcePathStyle && i && (s = i + \"/\" + s);var c = \"/\" + s,u = {},l = e.Scope;if (!l) {var d = e.Action || \"\",f = e.ResourceKey || e.Key || \"\";l = e.Scope || [{ action: d, bucket: i, region: a, prefix: f }];}var h = re.md5(JSON.stringify(l));o._StsCache = o._StsCache || [], function () {var e, t;for (e = o._StsCache.length - 1; e >= 0; e--) {t = o._StsCache[e];var n = Math.round(re.getSkewTime(o.options.SystemClockOffset) / 1e3) + 30;if (t.StartTime && n < t.StartTime || n >= t.ExpiredTime) o._StsCache.splice(e, 1);else if (!t.ScopeLimit || t.ScopeLimit && t.ScopeKey === h) {u = t;break;}}}();var p = function p() {var t = re.getAuth({ SecretId: u.TmpSecretId, SecretKey: u.TmpSecretKey, Method: e.Method, Pathname: c, Query: e.Query, Headers: n, Expires: e.Expires, SystemClockOffset: o.options.SystemClockOffset }),i = { Authorization: t, XCosSecurityToken: u.XCosSecurityToken || \"\", Token: u.Token || \"\", ClientIP: u.ClientIP || \"\", ClientUA: u.ClientUA || \"\" };r(i);};if (u.ExpiredTime && u.ExpiredTime - re.getSkewTime(o.options.SystemClockOffset) / 1e3 > 60) p();else if (o.options.getAuthorization) o.options.getAuthorization.call(o, { Bucket: i, Region: a, Method: e.Method, Key: s, Pathname: c, Query: e.Query, Headers: n, Scope: l }, function (e) {\"string\" == typeof e && (e = { Authorization: e }), e.TmpSecretId && e.TmpSecretKey && e.XCosSecurityToken && e.ExpiredTime ? (u = e || {}, u.Scope = l, u.ScopeKey = h, o._StsCache.push(u), p()) : r(e);});else {if (!o.options.getSTS) return function () {var t = re.getAuth({ SecretId: e.SecretId || o.options.SecretId, SecretKey: e.SecretKey || o.options.SecretKey, Method: e.Method, Pathname: c, Query: e.Query, Headers: n, Expires: e.Expires, SystemClockOffset: o.options.SystemClockOffset }),i = { Authorization: t, XCosSecurityToken: o.options.XCosSecurityToken };return r(i), i;}();o.options.getSTS.call(o, { Bucket: i, Region: a }, function (e) {u = e || {}, u.Scope = l, u.ScopeKey = h, u.TmpSecretId = u.SecretId, u.TmpSecretKey = u.SecretKey, o._StsCache.push(u), p();});}return \"\";}function J(e) {var t = !1,n = !1,r = e.headers && (e.headers.date || e.headers.Date) || \"\";try {var o = e.error.Code,i = e.error.Message;(\"RequestTimeTooSkewed\" === o || \"AccessDenied\" === o && \"Request has expired\" === i) && (n = !0);} catch (e) {}if (e) if (n && r) {var a = Date.parse(r);this.options.CorrectClockSkew && Math.abs(re.getSkewTime(this.options.SystemClockOffset) - a) >= 3e4 && (console.error(__f__(\"error: Local time is too skewed.\", \" at utils\\\\cos-wx-sdk-v5.js:1\")), this.options.SystemClockOffset = a - Date.now(), t = !0);} else 5 === Math.round(e.statusCode / 100) && (t = !0);return t;}function ee(e, t) {var n = this;!e.headers && (e.headers = {}), !e.qs && (e.qs = {}), e.VersionId && (e.qs.versionId = e.VersionId), e.qs = re.clearKey(e.qs), e.headers && (e.headers = re.clearKey(e.headers)), e.qs && (e.qs = re.clearKey(e.qs));var r = re.clone(e.qs);e.action && (r[e.action] = \"\");var o = function o(i) {var a = n.options.SystemClockOffset;Y.call(n, { Bucket: e.Bucket || \"\", Region: e.Region || \"\", Method: e.method, Key: e.Key, Query: r, Headers: e.headers, Action: e.Action, ResourceKey: e.ResourceKey, Scope: e.Scope }, function (r, s) {e.AuthData = s, te.call(n, e, function (r, s) {r && i < 2 && (a !== n.options.SystemClockOffset || J.call(n, r)) ? (e.headers && (delete e.headers.Authorization, delete e.headers.token, delete e.headers.clientIP, delete e.headers.clientUA, delete e.headers[\"x-cos-security-token\"]), o(i + 1)) : t(r, s);});});};o(0);}function te(e, t) {var n = this,r = e.TaskId;if (!r || n._isRunningTask(r)) {var o = e.Bucket,i = e.Region,a = e.Key,s = e.method || \"GET\",c = e.url,u = e.body,l = e.json,d = e.rawBody;c = c || Z({ ForcePathStyle: n.options.ForcePathStyle, protocol: n.options.Protocol, domain: n.options.Domain, bucket: o, region: i, object: a }), e.action && (c = c + \"?\" + e.action);var f = { method: s, url: c, headers: e.headers, qs: e.qs, filePath: e.filePath, body: u, json: l };f.headers.Authorization = e.AuthData.Authorization, e.AuthData.Token && (f.headers.token = e.AuthData.Token), e.AuthData.ClientIP && (f.headers.clientIP = e.AuthData.ClientIP), e.AuthData.ClientUA && (f.headers.clientUA = e.AuthData.ClientUA), e.AuthData.XCosSecurityToken && (f.headers[\"x-cos-security-token\"] = e.AuthData.XCosSecurityToken), f.headers && (f.headers = re.clearKey(f.headers)), f = re.clearKey(f), e.onProgress && \"function\" == typeof e.onProgress && (f.onProgress = function (t) {if (!r || n._isRunningTask(r)) {var o = t ? t.loaded : 0;e.onProgress({ loaded: o, total: t.total });}}), n.options.ForcePathStyle && (f.pathStyle = n.options.ForcePathStyle);var h = ne(f, function (e, o, i) {var a,s = function s(e, i) {if (r && n.off(\"inner-kill-task\", p), !a) {a = !0;var s = {};o && o.statusCode && (s.statusCode = o.statusCode), o && o.headers && (s.headers = o.headers), e ? (e = re.extend(e || {}, s), t(e, null)) : (i = re.extend(i || {}, s), t(null, i));}};if (e) return void s({ error: e });var c;try {c = re.xml2json(i) || {};} catch (e) {c = i || {};}var u = o.statusCode;return 2 !== Math.floor(u / 100) ? void s({ error: c.Error || c }) : (d && (c = {}, c.body = i), c.Error ? void s({ error: c.Error }) : void s(null, c));}),p = function p(e) {e.TaskId === r && (h && h.abort && h.abort(), n.off(\"inner-kill-task\", p));};r && n.on(\"inner-kill-task\", p);}}var ne = n(9),re = n(0),oe = { getService: r, putBucket: a, getBucket: i, headBucket: o, deleteBucket: s, getBucketAcl: c, putBucketAcl: u, getBucketCors: l, putBucketCors: d, deleteBucketCors: f, getBucketLocation: m, putBucketTagging: C, getBucketTagging: y, deleteBucketTagging: v, getBucketPolicy: g, putBucketPolicy: h, deleteBucketPolicy: p, getBucketLifecycle: k, putBucketLifecycle: x, deleteBucketLifecycle: S, putBucketVersioning: A, getBucketVersioning: b, putBucketReplication: R, getBucketReplication: T, deleteBucketReplication: E, getObject: N, headObject: w, listObjectVersions: _, putObject: B, postObject: D, deleteObject: O, getObjectAcl: P, putObjectAcl: I, optionsObject: M, putObjectCopy: L, deleteMultipleObject: U, restoreObject: j, uploadPartCopy: F, multipartInit: K, multipartUpload: H, multipartComplete: z, multipartList: G, multipartListPart: q, multipartAbort: V, getObjectUrl: $, getAuth: X };e.exports.init = function (e, t) {t.transferToTaskMethod(oe, \"postObject\"), re.each(oe, function (t, n) {e.prototype[n] = re.apiWrapper(n, t);});};}, function (e, t, n) {var r = n(0),o = {},i = function i(e, t) {o[t] = e[t], e[t] = function (e, n) {e.SkipTask ? o[t].call(this, e, n) : this._addTask(t, e, n);};},a = function a(e) {var t = [],n = {},i = 0,a = 0,s = function s(e) {var t = { id: e.id, Bucket: e.Bucket, Region: e.Region, Key: e.Key, FilePath: e.FilePath, state: e.state, loaded: e.loaded, size: e.size, speed: e.speed, percent: e.percent, hashPercent: e.hashPercent, error: e.error };return e.FilePath && (t.FilePath = e.FilePath), t;},c = function c() {e.emit(\"list-update\", { list: r.map(t, s) });},u = function u() {if (t.length > e.options.UploadQueueSize) {var n;for (n = 0; n < t.length && t.length > e.options.UploadQueueSize && n < a; n++) {t[n] && \"waiting\" === t[n].state || (t.splice(n, 1), a--);}}},l = function l() {if (a < t.length && i < e.options.FileParallelLimit) {var n = t[a];if (\"waiting\" === n.state) {i++, n.state = \"checking\";var s = r.formatParams(n.api, n.params);o[n.api].call(e, s, function (t, r) {e._isRunningTask(n.id) && (\"checking\" !== n.state && \"uploading\" !== n.state || (n.state = t ? \"error\" : \"success\", t && (n.error = t), i--, c(), l(e), n.callback && n.callback(t, r), \"success\" === n.state && (n.params && (delete n.params.Body, delete n.params), delete n.callback)), u());}), c();}a++, l(e);}},d = function d(t, r) {var o = n[t];if (o) {var a = o && \"waiting\" === o.state,s = o && (\"checking\" === o.state || \"uploading\" === o.state);if (\"canceled\" === r && \"canceled\" !== o.state || \"paused\" === r && a || \"paused\" === r && s) {if (\"paused\" === r && o.params.Body && \"function\" == typeof o.params.Body.pipe) return void console.error(__f__(\"stream not support pause\", \" at utils\\\\cos-wx-sdk-v5.js:1\"));o.state = r, e.emit(\"inner-kill-task\", { TaskId: t, toState: r }), c(), s && (i--, l(e)), \"canceled\" === r && (o.params && (delete o.params.Body, delete o.params), delete o.callback);}u();}};e._addTasks = function (t) {r.each(t, function (t) {e._addTask(t.api, t.params, t.callback, !0);}), c();}, e._addTask = function (o, i, a, s) {i = r.formatParams(o, i);var d = r.uuid();i.TaskId = d, i.TaskReady && i.TaskReady(d);var f = { params: i, callback: a, api: o, index: t.length, id: d, Bucket: i.Bucket, Region: i.Region, Key: i.Key, FilePath: i.FilePath || \"\", state: \"waiting\", loaded: 0, size: 0, speed: 0, percent: 0, hashPercent: 0, error: null },h = i.onHashProgress;i.onHashProgress = function (t) {e._isRunningTask(f.id) && (f.hashPercent = t.percent, h && h(t), c());};var p = i.onProgress;return i.onProgress = function (t) {e._isRunningTask(f.id) && (\"checking\" === f.state && (f.state = \"uploading\"), f.loaded = t.loaded, f.size = t.total, f.speed = t.speed, f.percent = t.percent, p && p(t), c());}, function () {n[d] = f, t.push(f), f.size = i.FileSize, !s && c(), l(e), u();}(), d;}, e._isRunningTask = function (e) {var t = n[e];return !(!t || \"checking\" !== t.state && \"uploading\" !== t.state);}, e.getTaskList = function () {return r.map(t, s);}, e.cancelTask = function (e) {d(e, \"canceled\");}, e.pauseTask = function (e) {d(e, \"paused\");}, e.restartTask = function (e) {var t = n[e];!t || \"paused\" !== t.state && \"error\" !== t.state || (t.state = \"waiting\", c(), a = Math.min(a, t.index), l());};};e.exports.transferToTaskMethod = i, e.exports.init = a;}]);});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 4)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///58\n");

/***/ }),

/***/ 6:
/*!*******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/dist/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(uni) {var _package = __webpack_require__(/*! ../package.json */ 7);function _possibleConstructorReturn(self, call) {if (call && (typeof call === \"object\" || typeof call === \"function\")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== \"function\" && superClass !== null) {throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}\n\nvar STAT_VERSION = _package.version;\nvar STAT_URL = 'https://tongji.dcloud.io/uni/stat';\nvar STAT_H5_URL = 'https://tongji.dcloud.io/uni/stat.gif';\nvar PAGE_PVER_TIME = 1800;\nvar APP_PVER_TIME = 300;\nvar OPERATING_TIME = 10;\n\nvar UUID_KEY = '__DC_STAT_UUID';\nvar UUID_VALUE = '__DC_UUID_VALUE';\n\nfunction getUuid() {\n  var uuid = '';\n  if (getPlatformName() === 'n') {\n    try {\n      uuid = plus.runtime.getDCloudId();\n    } catch (e) {\n      uuid = '';\n    }\n    return uuid;\n  }\n\n  try {\n    uuid = uni.getStorageSync(UUID_KEY);\n  } catch (e) {\n    uuid = UUID_VALUE;\n  }\n\n  if (!uuid) {\n    uuid = Date.now() + '' + Math.floor(Math.random() * 1e7);\n    try {\n      uni.setStorageSync(UUID_KEY, uuid);\n    } catch (e) {\n      uni.setStorageSync(UUID_KEY, UUID_VALUE);\n    }\n  }\n  return uuid;\n}\n\nvar getSgin = function getSgin(statData) {\n  var arr = Object.keys(statData);\n  var sortArr = arr.sort();\n  var sgin = {};\n  var sginStr = '';\n  for (var i in sortArr) {\n    sgin[sortArr[i]] = statData[sortArr[i]];\n    sginStr += sortArr[i] + '=' + statData[sortArr[i]] + '&';\n  }\n  // const options = sginStr.substr(0, sginStr.length - 1)\n  // sginStr = sginStr.substr(0, sginStr.length - 1) + '&key=' + STAT_KEY;\n  // const si = crypto.createHash('md5').update(sginStr).digest('hex');\n  return {\n    sign: '',\n    options: sginStr.substr(0, sginStr.length - 1) };\n\n};\n\nvar getSplicing = function getSplicing(data) {\n  var str = '';\n  for (var i in data) {\n    str += i + '=' + data[i] + '&';\n  }\n  return str.substr(0, str.length - 1);\n};\n\nvar getTime = function getTime() {\n  return parseInt(new Date().getTime() / 1000);\n};\n\nvar getPlatformName = function getPlatformName() {\n  var platformList = {\n    'app-plus': 'n',\n    'h5': 'h5',\n    'mp-weixin': 'wx',\n    'mp-alipay': 'ali',\n    'mp-baidu': 'bd',\n    'mp-toutiao': 'tt',\n    'mp-qq': 'qq' };\n\n  return platformList[\"app-plus\"];\n};\n\nvar getPackName = function getPackName() {\n  var packName = '';\n  if (getPlatformName() === 'wx' || getPlatformName() === 'qq') {\n    // 兼容微信小程序低版本基础库\n    if (uni.canIUse('getAccountInfoSync')) {\n      packName = uni.getAccountInfoSync().miniProgram.appId || '';\n    }\n  }\n  return packName;\n};\n\nvar getVersion = function getVersion() {\n  return getPlatformName() === 'n' ? plus.runtime.version : '';\n};\n\nvar getChannel = function getChannel() {\n  var platformName = getPlatformName();\n  var channel = '';\n  if (platformName === 'n') {\n    channel = plus.runtime.channel;\n  }\n  return channel;\n};\n\nvar getScene = function getScene(options) {\n  var platformName = getPlatformName();\n  var scene = '';\n  if (options) {\n    return options;\n  }\n  if (platformName === 'wx') {\n    scene = uni.getLaunchOptionsSync().scene;\n  }\n  return scene;\n};\nvar First__Visit__Time__KEY = 'First__Visit__Time';\nvar Last__Visit__Time__KEY = 'Last__Visit__Time';\n\nvar getFirstVisitTime = function getFirstVisitTime() {\n  var timeStorge = uni.getStorageSync(First__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = getTime();\n    uni.setStorageSync(First__Visit__Time__KEY, time);\n    uni.removeStorageSync(Last__Visit__Time__KEY);\n  }\n  return time;\n};\n\nvar getLastVisitTime = function getLastVisitTime() {\n  var timeStorge = uni.getStorageSync(Last__Visit__Time__KEY);\n  var time = 0;\n  if (timeStorge) {\n    time = timeStorge;\n  } else {\n    time = '';\n  }\n  uni.setStorageSync(Last__Visit__Time__KEY, getTime());\n  return time;\n};\n\n\nvar PAGE_RESIDENCE_TIME = '__page__residence__time';\nvar First_Page_residence_time = 0;\nvar Last_Page_residence_time = 0;\n\n\nvar setPageResidenceTime = function setPageResidenceTime() {\n  First_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    uni.setStorageSync(PAGE_RESIDENCE_TIME, getTime());\n  }\n  return First_Page_residence_time;\n};\n\nvar getPageResidenceTime = function getPageResidenceTime() {\n  Last_Page_residence_time = getTime();\n  if (getPlatformName() === 'n') {\n    First_Page_residence_time = uni.getStorageSync(PAGE_RESIDENCE_TIME);\n  }\n  return Last_Page_residence_time - First_Page_residence_time;\n};\nvar TOTAL__VISIT__COUNT = 'Total__Visit__Count';\nvar getTotalVisitCount = function getTotalVisitCount() {\n  var timeStorge = uni.getStorageSync(TOTAL__VISIT__COUNT);\n  var count = 1;\n  if (timeStorge) {\n    count = timeStorge;\n    count++;\n  }\n  uni.setStorageSync(TOTAL__VISIT__COUNT, count);\n  return count;\n};\n\nvar GetEncodeURIComponentOptions = function GetEncodeURIComponentOptions(statData) {\n  var data = {};\n  for (var prop in statData) {\n    data[prop] = encodeURIComponent(statData[prop]);\n  }\n  return data;\n};\n\nvar Set__First__Time = 0;\nvar Set__Last__Time = 0;\n\nvar getFirstTime = function getFirstTime() {\n  var time = new Date().getTime();\n  Set__First__Time = time;\n  Set__Last__Time = 0;\n  return time;\n};\n\n\nvar getLastTime = function getLastTime() {\n  var time = new Date().getTime();\n  Set__Last__Time = time;\n  return time;\n};\n\n\nvar getResidenceTime = function getResidenceTime(type) {\n  var residenceTime = 0;\n  if (Set__First__Time !== 0) {\n    residenceTime = Set__Last__Time - Set__First__Time;\n  }\n\n  residenceTime = parseInt(residenceTime / 1000);\n  residenceTime = residenceTime < 1 ? 1 : residenceTime;\n  if (type === 'app') {\n    var overtime = residenceTime > APP_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: overtime };\n\n  }\n  if (type === 'page') {\n    var _overtime = residenceTime > PAGE_PVER_TIME ? true : false;\n    return {\n      residenceTime: residenceTime,\n      overtime: _overtime };\n\n  }\n\n  return {\n    residenceTime: residenceTime };\n\n\n};\n\nvar getRoute = function getRoute() {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is;\n  } else {\n    return _self.$scope && _self.$scope.route || _self.$mp && _self.$mp.page.route;\n  }\n};\n\nvar getPageRoute = function getPageRoute(self) {\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var _self = page.$vm;\n  var query = self._query;\n  var str = query && JSON.stringify(query) !== '{}' ? '?' + JSON.stringify(query) : '';\n  // clear\n  self._query = '';\n  if (getPlatformName() === 'bd') {\n    return _self.$mp && _self.$mp.page.is + str;\n  } else {\n    return _self.$scope && _self.$scope.route + str || _self.$mp && _self.$mp.page.route + str;\n  }\n};\n\nvar getPageTypes = function getPageTypes(self) {\n  if (self.mpType === 'page' || self.$mp && self.$mp.mpType === 'page' || self.$options.mpType === 'page') {\n    return true;\n  }\n  return false;\n};\n\nvar calibration = function calibration(eventName, options) {\n  //  login 、 share 、pay_success 、pay_fail 、register 、title\n  if (!eventName) {\n    console.error(\"uni.report \\u7F3A\\u5C11 [eventName] \\u53C2\\u6570\");\n    return true;\n  }\n  if (typeof eventName !== 'string') {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u7C7B\\u578B\");\n    return true;\n  }\n  if (eventName.length > 255) {\n    console.error(\"uni.report [eventName] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (typeof options !== 'string' && typeof options !== 'object') {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u7C7B\\u578B\\u9519\\u8BEF,\\u53EA\\u80FD\\u4E3A String \\u6216 Object \\u7C7B\\u578B\");\n    return true;\n  }\n\n  if (typeof options === 'string' && options.length > 255) {\n    console.error(\"uni.report [options] \\u53C2\\u6570\\u957F\\u5EA6\\u4E0D\\u80FD\\u5927\\u4E8E 255\");\n    return true;\n  }\n\n  if (eventName === 'title' && typeof options !== 'string') {\n    console.error('uni.report [eventName] 参数为 title 时，[options] 参数只能为 String 类型');\n    return true;\n  }\n};\n\nvar PagesJson = __webpack_require__(/*! uni-pages?{\"type\":\"style\"} */ 8).default;\nvar statConfig = __webpack_require__(/*! uni-stat-config */ 9).default || __webpack_require__(/*! uni-stat-config */ 9);\n\nvar resultOptions = uni.getSystemInfoSync();var\n\nUtil = /*#__PURE__*/function () {\n  function Util() {_classCallCheck(this, Util);\n    this.self = '';\n    this._retry = 0;\n    this._platform = '';\n    this._query = {};\n    this._navigationBarTitle = {\n      config: '',\n      page: '',\n      report: '',\n      lt: '' };\n\n    this._operatingTime = 0;\n    this._reportingRequestData = {\n      '1': [],\n      '11': [] };\n\n    this.__prevent_triggering = false;\n\n    this.__licationHide = false;\n    this.__licationShow = false;\n    this._lastPageRoute = '';\n    this.statData = {\n      uuid: getUuid(),\n      ut: getPlatformName(),\n      mpn: getPackName(),\n      ak: statConfig.appid,\n      usv: STAT_VERSION,\n      v: getVersion(),\n      ch: getChannel(),\n      cn: '',\n      pn: '',\n      ct: '',\n      t: getTime(),\n      tt: '',\n      p: resultOptions.platform === 'android' ? 'a' : 'i',\n      brand: resultOptions.brand || '',\n      md: resultOptions.model,\n      sv: resultOptions.system.replace(/(Android|iOS)\\s/, ''),\n      mpsdk: resultOptions.SDKVersion || '',\n      mpv: resultOptions.version || '',\n      lang: resultOptions.language,\n      pr: resultOptions.pixelRatio,\n      ww: resultOptions.windowWidth,\n      wh: resultOptions.windowHeight,\n      sw: resultOptions.screenWidth,\n      sh: resultOptions.screenHeight };\n\n\n  }_createClass(Util, [{ key: \"_applicationShow\", value: function _applicationShow()\n\n    {\n      if (this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('app');\n        if (time.overtime) {\n          var options = {\n            path: this._lastPageRoute,\n            scene: this.statData.sc };\n\n          this._sendReportRequest(options);\n        }\n        this.__licationHide = false;\n      }\n    } }, { key: \"_applicationHide\", value: function _applicationHide(\n\n    self, type) {\n\n      this.__licationHide = true;\n      getLastTime();\n      var time = getResidenceTime();\n      getFirstTime();\n      var route = getPageRoute(this);\n      this._sendHideRequest({\n        urlref: route,\n        urlref_ts: time.residenceTime },\n      type);\n    } }, { key: \"_pageShow\", value: function _pageShow()\n\n    {\n      var route = getPageRoute(this);\n      var routepath = getRoute();\n      this._navigationBarTitle.config = PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].titleNView &&\n      PagesJson.pages[routepath].titleNView.titleText ||\n      PagesJson &&\n      PagesJson.pages[routepath] &&\n      PagesJson.pages[routepath].navigationBarTitleText || '';\n\n      if (this.__licationShow) {\n        getFirstTime();\n        this.__licationShow = false;\n        // console.log('这是 onLauch 之后执行的第一次 pageShow ，为下次记录时间做准备');\n        this._lastPageRoute = route;\n        return;\n      }\n\n      getLastTime();\n      this._lastPageRoute = route;\n      var time = getResidenceTime('page');\n      if (time.overtime) {\n        var options = {\n          path: this._lastPageRoute,\n          scene: this.statData.sc };\n\n        this._sendReportRequest(options);\n      }\n      getFirstTime();\n    } }, { key: \"_pageHide\", value: function _pageHide()\n\n    {\n      if (!this.__licationHide) {\n        getLastTime();\n        var time = getResidenceTime('page');\n        this._sendPageRequest({\n          url: this._lastPageRoute,\n          urlref: this._lastPageRoute,\n          urlref_ts: time.residenceTime });\n\n        this._navigationBarTitle = {\n          config: '',\n          page: '',\n          report: '',\n          lt: '' };\n\n        return;\n      }\n    } }, { key: \"_login\", value: function _login()\n\n    {\n      this._sendEventRequest({\n        key: 'login' },\n      0);\n    } }, { key: \"_share\", value: function _share()\n\n    {\n      this._sendEventRequest({\n        key: 'share' },\n      0);\n    } }, { key: \"_payment\", value: function _payment(\n    key) {\n      this._sendEventRequest({\n        key: key },\n      0);\n    } }, { key: \"_sendReportRequest\", value: function _sendReportRequest(\n    options) {\n\n      this._navigationBarTitle.lt = '1';\n      var query = options.query && JSON.stringify(options.query) !== '{}' ? '?' + JSON.stringify(options.query) : '';\n      this.statData.lt = '1';\n      this.statData.url = options.path + query || '';\n      this.statData.t = getTime();\n      this.statData.sc = getScene(options.scene);\n      this.statData.fvts = getFirstVisitTime();\n      this.statData.lvts = getLastVisitTime();\n      this.statData.tvc = getTotalVisitCount();\n      if (getPlatformName() === 'n') {\n        this.getProperty();\n      } else {\n        this.getNetworkInfo();\n      }\n    } }, { key: \"_sendPageRequest\", value: function _sendPageRequest(\n\n    opt) {var\n\n      url =\n\n\n      opt.url,urlref = opt.urlref,urlref_ts = opt.urlref_ts;\n      this._navigationBarTitle.lt = '11';\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '11',\n        ut: this.statData.ut,\n        url: url,\n        tt: this.statData.tt,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"_sendHideRequest\", value: function _sendHideRequest(\n\n    opt, type) {var\n\n      urlref =\n\n      opt.urlref,urlref_ts = opt.urlref_ts;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '3',\n        ut: this.statData.ut,\n        urlref: urlref,\n        urlref_ts: urlref_ts,\n        ch: this.statData.ch,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options, type);\n    } }, { key: \"_sendEventRequest\", value: function _sendEventRequest()\n\n\n\n    {var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},_ref$key = _ref.key,key = _ref$key === void 0 ? '' : _ref$key,_ref$value = _ref.value,value = _ref$value === void 0 ? \"\" : _ref$value;\n      var route = this._lastPageRoute;\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '21',\n        ut: this.statData.ut,\n        url: route,\n        ch: this.statData.ch,\n        e_n: key,\n        e_v: typeof value === 'object' ? JSON.stringify(value) : value.toString(),\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }, { key: \"getNetworkInfo\", value: function getNetworkInfo()\n\n    {var _this = this;\n      uni.getNetworkType({\n        success: function success(result) {\n          _this.statData.net = result.networkType;\n          _this.getLocation();\n        } });\n\n    } }, { key: \"getProperty\", value: function getProperty()\n\n    {var _this2 = this;\n      plus.runtime.getProperty(plus.runtime.appid, function (wgtinfo) {\n        _this2.statData.v = wgtinfo.version || '';\n        _this2.getNetworkInfo();\n      });\n    } }, { key: \"getLocation\", value: function getLocation()\n\n    {var _this3 = this;\n      if (statConfig.getLocation) {\n        uni.getLocation({\n          type: 'wgs84',\n          geocode: true,\n          success: function success(result) {\n            if (result.address) {\n              _this3.statData.cn = result.address.country;\n              _this3.statData.pn = result.address.province;\n              _this3.statData.ct = result.address.city;\n            }\n\n            _this3.statData.lat = result.latitude;\n            _this3.statData.lng = result.longitude;\n            _this3.request(_this3.statData);\n          } });\n\n      } else {\n        this.statData.lat = 0;\n        this.statData.lng = 0;\n        this.request(this.statData);\n      }\n    } }, { key: \"request\", value: function request(\n\n    data, type) {var _this4 = this;\n      var time = getTime();\n      var title = this._navigationBarTitle;\n      data.ttn = title.page;\n      data.ttpj = title.config;\n      data.ttc = title.report;\n\n      var requestData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        requestData = uni.getStorageSync('__UNI__STAT__DATA') || {};\n      }\n      if (!requestData[data.lt]) {\n        requestData[data.lt] = [];\n      }\n      requestData[data.lt].push(data);\n\n      if (getPlatformName() === 'n') {\n        uni.setStorageSync('__UNI__STAT__DATA', requestData);\n      }\n      if (getPageResidenceTime() < OPERATING_TIME && !type) {\n        return;\n      }\n      var uniStatData = this._reportingRequestData;\n      if (getPlatformName() === 'n') {\n        uniStatData = uni.getStorageSync('__UNI__STAT__DATA');\n      }\n      // 时间超过，重新获取时间戳\n      setPageResidenceTime();\n      var firstArr = [];\n      var contentArr = [];\n      var lastArr = [];var _loop = function _loop(\n\n      i) {\n        var rd = uniStatData[i];\n        rd.forEach(function (elm) {\n          var newData = getSplicing(elm);\n          if (i === 0) {\n            firstArr.push(newData);\n          } else if (i === 3) {\n            lastArr.push(newData);\n          } else {\n            contentArr.push(newData);\n          }\n        });};for (var i in uniStatData) {_loop(i);\n      }\n\n      firstArr.push.apply(firstArr, contentArr.concat(lastArr));\n      var optionsData = {\n        usv: STAT_VERSION, //统计 SDK 版本号\n        t: time, //发送请求时的时间戮\n        requests: JSON.stringify(firstArr) };\n\n\n      this._reportingRequestData = {};\n      if (getPlatformName() === 'n') {\n        uni.removeStorageSync('__UNI__STAT__DATA');\n      }\n\n      if (data.ut === 'h5') {\n        this.imageRequest(optionsData);\n        return;\n      }\n\n      if (getPlatformName() === 'n' && this.statData.p === 'a') {\n        setTimeout(function () {\n          _this4._sendRequest(optionsData);\n        }, 200);\n        return;\n      }\n      this._sendRequest(optionsData);\n    } }, { key: \"_sendRequest\", value: function _sendRequest(\n    optionsData) {var _this5 = this;\n      uni.request({\n        url: STAT_URL,\n        method: 'POST',\n        // header: {\n        //   'content-type': 'application/json' // 默认值\n        // },\n        data: optionsData,\n        success: function success() {\n          // if (process.env.NODE_ENV === 'development') {\n          //   console.log('stat request success');\n          // }\n        },\n        fail: function fail(e) {\n          if (++_this5._retry < 3) {\n            setTimeout(function () {\n              _this5._sendRequest(optionsData);\n            }, 1000);\n          }\n        } });\n\n    }\n    /**\r\n       * h5 请求\r\n       */ }, { key: \"imageRequest\", value: function imageRequest(\n    data) {\n      var image = new Image();\n      var options = getSgin(GetEncodeURIComponentOptions(data)).options;\n      image.src = STAT_H5_URL + '?' + options;\n    } }, { key: \"sendEvent\", value: function sendEvent(\n\n    key, value) {\n      // 校验 type 参数\n      if (calibration(key, value)) return;\n\n      if (key === 'title') {\n        this._navigationBarTitle.report = value;\n        return;\n      }\n      this._sendEventRequest({\n        key: key,\n        value: typeof value === 'object' ? JSON.stringify(value) : value },\n      1);\n    } }]);return Util;}();var\n\n\n\nStat = /*#__PURE__*/function (_Util) {_inherits(Stat, _Util);_createClass(Stat, null, [{ key: \"getInstance\", value: function getInstance()\n    {\n      if (!this.instance) {\n        this.instance = new Stat();\n      }\n      return this.instance;\n    } }]);\n  function Stat() {var _this6;_classCallCheck(this, Stat);\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(Stat).call(this));\n    _this6.instance = null;\n    // 注册拦截器\n    if (typeof uni.addInterceptor === 'function' && \"development\" !== 'development') {\n      _this6.addInterceptorInit();\n      _this6.interceptLogin();\n      _this6.interceptShare(true);\n      _this6.interceptRequestPayment();\n    }return _this6;\n  }_createClass(Stat, [{ key: \"addInterceptorInit\", value: function addInterceptorInit()\n\n    {\n      var self = this;\n      uni.addInterceptor('setNavigationBarTitle', {\n        invoke: function invoke(args) {\n          self._navigationBarTitle.page = args.title;\n        } });\n\n    } }, { key: \"interceptLogin\", value: function interceptLogin()\n\n    {\n      var self = this;\n      uni.addInterceptor('login', {\n        complete: function complete() {\n          self._login();\n        } });\n\n    } }, { key: \"interceptShare\", value: function interceptShare(\n\n    type) {\n      var self = this;\n      if (!type) {\n        self._share();\n        return;\n      }\n      uni.addInterceptor('share', {\n        success: function success() {\n          self._share();\n        },\n        fail: function fail() {\n          self._share();\n        } });\n\n    } }, { key: \"interceptRequestPayment\", value: function interceptRequestPayment()\n\n    {\n      var self = this;\n      uni.addInterceptor('requestPayment', {\n        success: function success() {\n          self._payment('pay_success');\n        },\n        fail: function fail() {\n          self._payment('pay_fail');\n        } });\n\n    } }, { key: \"report\", value: function report(\n\n    options, self) {\n      this.self = self;\n      // if (process.env.NODE_ENV === 'development') {\n      //   console.log('report init');\n      // }\n      setPageResidenceTime();\n      this.__licationShow = true;\n      this._sendReportRequest(options, true);\n    } }, { key: \"load\", value: function load(\n\n    options, self) {\n      if (!self.$scope && !self.$mp) {\n        var page = getCurrentPages();\n        self.$scope = page[page.length - 1];\n      }\n      this.self = self;\n      this._query = options;\n    } }, { key: \"show\", value: function show(\n\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageShow(self);\n      } else {\n        this._applicationShow(self);\n      }\n    } }, { key: \"ready\", value: function ready(\n\n    self) {\n      // this.self = self;\n      // if (getPageTypes(self)) {\n      //   this._pageShow(self);\n      // }\n    } }, { key: \"hide\", value: function hide(\n    self) {\n      this.self = self;\n      if (getPageTypes(self)) {\n        this._pageHide(self);\n      } else {\n        this._applicationHide(self, true);\n      }\n    } }, { key: \"error\", value: function error(\n    em) {\n      if (this._platform === 'devtools') {\n        if (true) {\n          console.info('当前运行环境为开发者工具，不上报数据。');\n        }\n        // return;\n      }\n      var emVal = '';\n      if (!em.message) {\n        emVal = JSON.stringify(em);\n      } else {\n        emVal = em.stack;\n      }\n      var options = {\n        ak: this.statData.ak,\n        uuid: this.statData.uuid,\n        lt: '31',\n        ut: this.statData.ut,\n        ch: this.statData.ch,\n        mpsdk: this.statData.mpsdk,\n        mpv: this.statData.mpv,\n        v: this.statData.v,\n        em: emVal,\n        usv: this.statData.usv,\n        t: getTime(),\n        p: this.statData.p };\n\n      this.request(options);\n    } }]);return Stat;}(Util);\n\n\nvar stat = Stat.getInstance();\nvar isHide = false;\nvar lifecycle = {\n  onLaunch: function onLaunch(options) {\n    stat.report(options, this);\n  },\n  onReady: function onReady() {\n    stat.ready(this);\n  },\n  onLoad: function onLoad(options) {\n    stat.load(options, this);\n    // 重写分享，获取分享上报事件\n    if (this.$scope && this.$scope.onShareAppMessage) {\n      var oldShareAppMessage = this.$scope.onShareAppMessage;\n      this.$scope.onShareAppMessage = function (options) {\n        stat.interceptShare(false);\n        return oldShareAppMessage.call(this, options);\n      };\n    }\n  },\n  onShow: function onShow() {\n    isHide = false;\n    stat.show(this);\n  },\n  onHide: function onHide() {\n    isHide = true;\n    stat.hide(this);\n  },\n  onUnload: function onUnload() {\n    if (isHide) {\n      isHide = false;\n      return;\n    }\n    stat.hide(this);\n  },\n  onError: function onError(e) {\n    stat.error(e);\n  } };\n\n\nfunction main() {\n  if (true) {\n    uni.report = function (type, options) {};\n  } else { var Vue; }\n}\n\nmain();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-app-plus/dist/index.js */ 1)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n");

/***/ }),

/***/ 7:
/*!******************************************************!*\
  !*** ./node_modules/@dcloudio/uni-stat/package.json ***!
  \******************************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, deprecated, description, devDependencies, files, gitHead, homepage, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

eval("module.exports = {\"_from\":\"@dcloudio/uni-stat@next\",\"_id\":\"@dcloudio/uni-stat@2.0.0-23620191019001\",\"_inBundle\":false,\"_integrity\":\"sha512-gBpkjEOQ/LhTnXBVi266PoTNT5VJtbYoEVy+gZ8/LN9/jKEWeWndd2Lu7vn7hmUySVM5K5UV/Bd5LEVkgXB8mA==\",\"_location\":\"/@dcloudio/uni-stat\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"tag\",\"registry\":true,\"raw\":\"@dcloudio/uni-stat@next\",\"name\":\"@dcloudio/uni-stat\",\"escapedName\":\"@dcloudio%2funi-stat\",\"scope\":\"@dcloudio\",\"rawSpec\":\"next\",\"saveSpec\":null,\"fetchSpec\":\"next\"},\"_requiredBy\":[\"#USER\",\"/\",\"/@dcloudio/vue-cli-plugin-uni\"],\"_resolved\":\"https://registry.npmjs.org/@dcloudio/uni-stat/-/uni-stat-2.0.0-23620191019001.tgz\",\"_shasum\":\"5c006b903ae7bc407c8b1786de249ffbf72da996\",\"_spec\":\"@dcloudio/uni-stat@next\",\"_where\":\"/Users/fxy/Documents/DCloud/HbuilderX-plugins/release/uniapp-cli\",\"author\":\"\",\"bugs\":{\"url\":\"https://github.com/dcloudio/uni-app/issues\"},\"bundleDependencies\":false,\"deprecated\":false,\"description\":\"\",\"devDependencies\":{\"@babel/core\":\"^7.5.5\",\"@babel/preset-env\":\"^7.5.5\",\"eslint\":\"^6.1.0\",\"rollup\":\"^1.19.3\",\"rollup-plugin-babel\":\"^4.3.3\",\"rollup-plugin-clear\":\"^2.0.7\",\"rollup-plugin-commonjs\":\"^10.0.2\",\"rollup-plugin-copy\":\"^3.1.0\",\"rollup-plugin-eslint\":\"^7.0.0\",\"rollup-plugin-json\":\"^4.0.0\",\"rollup-plugin-node-resolve\":\"^5.2.0\",\"rollup-plugin-replace\":\"^2.2.0\",\"rollup-plugin-uglify\":\"^6.0.2\"},\"files\":[\"dist\",\"package.json\",\"LICENSE\"],\"gitHead\":\"bc995d4b43b68e7fe7914ae6b2112117d36e63a8\",\"homepage\":\"https://github.com/dcloudio/uni-app#readme\",\"license\":\"Apache-2.0\",\"main\":\"dist/index.js\",\"name\":\"@dcloudio/uni-stat\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/dcloudio/uni-app.git\",\"directory\":\"packages/uni-stat\"},\"scripts\":{\"build\":\"NODE_ENV=production rollup -c rollup.config.js\",\"dev\":\"NODE_ENV=development rollup -w -c rollup.config.js\"},\"version\":\"2.0.0-23620191019001\"};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI3LmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///7\n");

/***/ }),

/***/ 8:
/*!**********************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/pages.json?{"type":"style"} ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"pages\": { \"pages/home/home\": { \"navigationStyle\": \"custom\", \"navigationBarTitleText\": \"首页\", \"enablePullDownRefresh\": true, \"navigationBarBackgroundColor\": \"#fff\", \"navigationBarTextStyle\": \"black\", \"backgroundColorTop\": \"#F7F7F7\", \"backgroundColorBottom\": \"#F7F7F7\", \"titleNView\": false }, \"pages/mine/points\": { \"navigationBarTitleText\": \"积分账单\", \"navigationBarTextStyle\": \"black\" }, \"pages/index/dialog\": { \"navigationStyle\": \"custom\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/order_detail\": { \"navigationBarTitleText\": \"订单详情\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/personal\": { \"navigationBarTitleText\": \"会员中心\", \"navigationBarBackgroundColor\": \"#182E6C\", \"navigationBarTextStyle\": \"white\", \"enablePullDownRefresh\": true }, \"pages/mine/wallet_details\": { \"navigationBarTitleText\": \"钱包明细\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/wallet\": { \"navigationBarTitleText\": \"钱包\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/mywallet\": { \"navigationBarTitleText\": \"我的钱包\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/myinfo\": { \"navigationBarTitleText\": \"我的信息\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/mycar\": { \"navigationBarTitleText\": \"我的爱车\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/carmanager\": { \"navigationBarTitleText\": \"车辆管理\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/orderlist\": { \"navigationBarTitleText\": \"订单管理\", \"navigationBarTextStyle\": \"black\", \"disableScroll\": true, \"bounce\": \"none\" }, \"pages/mine/coupon\": { \"navigationBarTitleText\": \"我的优惠券\", \"navigationBarTextStyle\": \"black\", \"disableScroll\": true, \"bounce\": \"none\" }, \"pages/mine/carbrand\": { \"navigationBarTitleText\": \"品牌设置\", \"navigationBarTextStyle\": \"black\" }, \"pages/home/businesshome\": { \"navigationBarTitleText\": \"商家主页\", \"navigationBarTextStyle\": \"black\" }, \"pages/home/service_detail\": { \"navigationBarTitleText\": \"服务详情\", \"navigationBarTextStyle\": \"black\" }, \"pages/home/business\": { \"navigationBarTitleText\": \"商家中心\", \"navigationBarTextStyle\": \"black\" }, \"pages/home/paysuccess\": { \"navigationBarTitleText\": \"支付结果\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/publishbid\": { \"navigationBarTitleText\": \"我的发布\", \"navigationBarTextStyle\": \"black\", \"enablePullDownRefresh\": true }, \"pages/mine/sjmb\": { \"navigationBarTitleText\": \"商家面板\", \"navigationBarTextStyle\": \"black\" }, \"pages/mine/h5\": { \"navigationBarTitleText\": \"\", \"navigationBarTextStyle\": \"black\" }, \"pages/home/quotedprice\": { \"navigationBarTitleText\": \"提交报价\", \"navigationBarTextStyle\": \"black\" }, \"pages/home/orderpage\": { \"navigationBarTitleText\": \"订单确认\", \"navigationBarTextStyle\": \"black\" }, \"pages/home/shopselect\": { \"navigationBarTitleText\": \"挂单详情\", \"navigationBarTextStyle\": \"black\", \"navigationBarBackgroundColor\": \"#FFFFFF\" }, \"pages/index/precisefabu\": { \"navigationBarTitleText\": \"精准发布\", \"navigationBarTextStyle\": \"black\" }, \"pages/index/fastfabu\": { \"navigationBarTitleText\": \"快速发布\", \"navigationBarTextStyle\": \"black\" }, \"pages/more/nearby_merchants\": { \"navigationBarTitleText\": \"商家主页\", \"navigationBarTextStyle\": \"black\" }, \"pages/market/home\": { \"navigationStyle\": \"custom\", \"navigationBarTitleText\": \"市场\", \"enablePullDownRefresh\": true }, \"pages/market/more\": { \"navigationBarBackgroundColor\": \"#FFFFFF\", \"navigationBarTitleText\": \"挂单\", \"navigationBarTextStyle\": \"black\", \"enablePullDownRefresh\": true, \"navigationStyle\": \"custom\" }, \"pages/mine/home\": { \"navigationStyle\": \"custom\", \"disableScroll\": true }, \"pages/more/home\": { \"navigationBarBackgroundColor\": \"#FFFFFF\", \"navigationStyle\": \"custom\", \"navigationBarTitleText\": \"商家\", \"enablePullDownRefresh\": true }, \"pages/more/shop\": { \"navigationBarBackgroundColor\": \"#FFFFFF\", \"navigationBarTitleText\": \"商城\", \"navigationBarTextStyle\": \"black\" } }, \"globalStyle\": { \"navigationBarTitleText\": \"创世车宝\", \"navigationStyle\": \"default\", \"navigationBarTextStyle\": \"black\", \"navigationBarBackgroundColor\": \"#FFFFFF\", \"scrollIndicator\": \"none\" } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n");

/***/ }),

/***/ 9:
/*!*********************************************************************************!*\
  !*** C:/Users/Administrator/Desktop/App/cscb-h5-app/pages.json?{"type":"stat"} ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = { \"appid\": \"__UNI__1924E90\" };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJzR0FBZSxFQUFDLFNBQVEsZ0JBQVQsRSIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wiYXBwaWRcIjpcIl9fVU5JX18xOTI0RTkwXCJ9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ })

}]);